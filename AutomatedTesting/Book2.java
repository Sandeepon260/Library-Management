package AutomatedTesting;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Book2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = book6.getItemId();
        boolean boolean8 = book6.isRented();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8410 + "'", int7 == 8410);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.toString();
        java.lang.String str11 = book6.getLocation();
        java.lang.String str12 = book6.getBorrowerEmail();
        java.lang.String str13 = book6.toString();
        java.lang.String str14 = book6.getItemType();
        java.lang.String str15 = book6.getTitle();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8412, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8412, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8412, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8412, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=8412, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=8412, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book" + "'", str14, "Book");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        items.Book book6 = new items.Book("LibraryItem [itemId=1022, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=677, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=3551, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1560, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        java.lang.String str11 = book6.getItemType();
        double double12 = book6.calculateOverduePenalty();
        double double13 = book6.calculateOverduePenalty();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8416, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8416, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book" + "'", str11, "Book");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        items.Book book6 = new items.Book("LibraryItem [itemId=7146, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4854, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book: hi! by . Location: LibraryItem [itemId=1114, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        boolean boolean7 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getDetails();
        int int53 = book6.getItemId();
        boolean boolean54 = book6.isOverdue();
        java.lang.String str55 = book6.getDetails();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8419, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8419, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str52, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8419 + "'", int53 == 8419);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str55, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        java.lang.String str60 = book6.getLocation();
        java.lang.String str61 = book6.getTitle();
        boolean boolean62 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=4830, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str65 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = book6.getItemId();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=7020, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8430 + "'", int7 == 8430);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        java.lang.String str10 = book6.getTitle();
        java.lang.String str11 = book6.getDetails();
        book6.returnItem();
        double double13 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        book6.setIsPurchasable(true);
        boolean boolean17 = book6.isRented();
        java.lang.String str18 = book6.getItemType();
        int int19 = book6.getItemId();
        double double20 = book6.calculateOverduePenalty();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8432, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8432, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8432, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8432, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book" + "'", str18, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8432 + "'", int19 == 8432);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double55 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8433, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8433, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.getDetails();
        book6.setIsPurchasable(true);
        book6.setLocation("LibraryItem [itemId=3461, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=5283, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=5814, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str50, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isPurchasable();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8453, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8453, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8453, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8453, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getBorrowerEmail();
        book6.returnItem();
        boolean boolean13 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8461 + "'", int10 == 8461);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getTitle();
        java.lang.Class<?> wildcardClass14 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8462, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8462, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        items.Book book6 = new items.Book("Book:  by hi!. Location: . Purchasable: true", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        java.lang.Class<?> wildcardClass8 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getTitle();
        java.lang.String str53 = book6.getLocation();
        java.lang.String str54 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=2912, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str57 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=8464, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=8464, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=8464, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=8464, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "LibraryItem [itemId=2912, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str57, "LibraryItem [itemId=2912, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getBorrowerEmail();
        java.lang.String str10 = book6.getItemType();
        java.lang.String str11 = book6.getItemType();
        boolean boolean12 = book6.isPurchasable();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book" + "'", str11, "Book");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = book6.isOverdue();
        java.lang.String str48 = book6.getDetails();
        java.lang.String str49 = book6.getPrice();
        boolean boolean50 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str48, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        items.Book book6 = new items.Book("LibraryItem [itemId=1077, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1114, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1868, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3231, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = book6.getItemId();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8476 + "'", int7 == 8476);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int17 = book6.getItemId();
        boolean boolean18 = book6.isPurchasable();
        java.lang.String str19 = book6.getTitle();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8477, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8477, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8477, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8477, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8477 + "'", int17 == 8477);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        book6.setIsPurchasable(false);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        boolean boolean19 = book17.isPurchasable();
        boolean boolean20 = book17.isRented();
        java.lang.String str21 = book17.getLocation();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8478, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8478, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        double double49 = book6.calculateOverduePenalty();
        book6.returnItem();
        boolean boolean51 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getBorrowerEmail();
        java.lang.String str13 = book6.getItemType();
        java.lang.String str14 = book6.getAuthor();
        java.lang.Class<?> wildcardClass15 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getPrice();
        book6.setLocation("LibraryItem [itemId=4435, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=6534, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8500 + "'", int9 == 8500);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getLocation();
        java.lang.String str96 = book6.getPrice();
        java.lang.String str97 = book6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str95, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str96, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str97, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        double double49 = book6.calculateOverduePenalty();
        java.lang.String str50 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getAuthor();
        java.lang.String str12 = book6.getLocation();
        java.lang.String str13 = book6.getLocation();
        book6.returnItem();
        java.lang.String str15 = book6.getItemType();
        java.lang.String str16 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book" + "'", str15, "Book");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isRented();
        boolean boolean54 = book6.isOverdue();
        book6.setIsPurchasable(true);
        double double57 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8517 + "'", int52 == 8517);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getItemType();
        book6.setIsPurchasable(false);
        items.Book book19 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean20 = book19.isRented();
        book19.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean23 = book19.isRented();
        items.Book book30 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str31 = book30.getDetails();
        book30.returnItem();
        boolean boolean33 = book30.isPurchasable();
        double double34 = book30.calculateOverduePenalty();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        java.lang.String str85 = book6.getBorrowerEmail();
        int int86 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str31, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
// flaky:         org.junit.Assert.assertTrue("'" + int86 + "' != '" + 8522 + "'", int86 == 8522);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        book18.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book27 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean28 = book27.isOverdue();
        items.Book book35 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean36 = book35.isOverdue();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        book69.returnItem();
        java.lang.String str71 = book69.getAuthor();
        java.lang.String str72 = book69.getAuthor();
        items.Book book79 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { book51, book60, book69, book79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = book43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book35, book43 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        java.lang.String str90 = book6.getItemType();
        java.lang.String str91 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book" + "'", str90, "Book");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        items.Book book6 = new items.Book("LibraryItem [itemId=8417, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=7017, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=6511, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4776, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("LibraryItem [itemId=1286, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book" + "'", str15, "Book");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int13 = book6.getItemId();
        book6.setBorrowerEmail("LibraryItem [itemId=4854, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int16 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8551 + "'", int13 == 8551);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8551 + "'", int16 == 8551);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setIsPurchasable(false);
        book6.setLocation("LibraryItem [itemId=951, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str13 = book6.getItemType();
        boolean boolean14 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.getPrice();
        double double9 = book6.calculateOverduePenalty();
        book6.setBorrowerEmail("LibraryItem [itemId=4037, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        book6.returnItem();
        book6.setBorrowerEmail("LibraryItem [itemId=1148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=1846, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=4473, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str15, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getTitle();
        java.lang.String str11 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=1219, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = book6.isPurchasable();
        book6.setIsPurchasable(false);
        java.lang.Class<?> wildcardClass19 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8558, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8558, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        book6.setLocation("");
        book6.setBorrowerEmail("LibraryItem [itemId=7771, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        boolean boolean49 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        java.lang.String str78 = book6.getItemType();
        java.lang.String str79 = book6.getLocation();
        java.time.LocalDate localDate80 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate80, 6662, "LibraryItem [itemId=7227, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Book" + "'", str78, "Book");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getAuthor();
        java.lang.String str12 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        items.Book book6 = new items.Book("LibraryItem [itemId=746, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1243, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        boolean boolean9 = book6.isRented();
        double double10 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        java.lang.String str11 = book6.toString();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getDetails();
        java.lang.String str14 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8600, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8600, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str13, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        boolean boolean10 = book6.isOverdue();
        java.lang.String str11 = book6.toString();
        java.lang.String str12 = book6.getAuthor();
        book6.setLocation("LibraryItem [itemId=1148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8610, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8610, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8610, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8610, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        book6.setBorrowerEmail("LibraryItem [itemId=591, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=4140, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.getAuthor();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8620, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8620, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getPrice();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getTitle();
        items.Book book18 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean19 = book18.isOverdue();
        items.Book book26 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean27 = book26.isOverdue();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        book42.returnItem();
        java.lang.String str44 = book42.getAuthor();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        java.lang.String str63 = book60.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray71 = new items.LibraryItem[] { book42, book51, book60, book70 };
        java.util.ArrayList<items.LibraryItem> libraryItemList72 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList72, libraryItemArray71);
        boolean boolean74 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book26, book34 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        java.lang.String str80 = book6.getLocation();
        boolean boolean81 = book6.isOverdue();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=8621, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=8621, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        boolean boolean11 = book6.isOverdue();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8629, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8629, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getBorrowerEmail();
        boolean boolean11 = book6.isPurchasable();
        java.lang.String str12 = book6.getItemType();
        java.lang.String str13 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        double double67 = book6.calculateOverduePenalty();
        java.lang.String str68 = book6.getBorrowerEmail();
        java.lang.String str69 = book6.getTitle();
        boolean boolean70 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        book6.setIsPurchasable(false);
        double double12 = book6.calculateOverduePenalty();
        java.lang.String str13 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=5653, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=2399, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getItemType();
        book6.setLocation("LibraryItem [itemId=2563, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str98 = book6.getItemType();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Book" + "'", str95, "Book");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Book" + "'", str98, "Book");
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getPrice();
        java.lang.String str51 = book6.getAuthor();
        book6.returnItem();
        java.lang.String str53 = book6.getAuthor();
        boolean boolean54 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        double double60 = book6.calculateOverduePenalty();
        java.lang.String str61 = book6.getPrice();
        boolean boolean62 = book6.isPurchasable();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("");
        int int89 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 8664 + "'", int89 == 8664);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: false");
        java.lang.String str13 = book6.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=8673, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=8673, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        java.lang.String str79 = book6.toString();
        java.lang.String str80 = book6.getAuthor();
        book6.setLocation("LibraryItem [itemId=1275, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LibraryItem [itemId=8674, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str79, "LibraryItem [itemId=8674, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=397, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=4941, itemType=Book, location=Book:  by hi!. Location: . Purchasable: true, purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate82 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate82, 6569, "LibraryItem [itemId=2082, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        book6.setIsPurchasable(false);
        java.lang.String str12 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        double double11 = book6.calculateOverduePenalty();
        items.Book book18 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean19 = book18.isOverdue();
        items.Book book26 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean27 = book26.isOverdue();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        book42.returnItem();
        java.lang.String str44 = book42.getAuthor();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        java.lang.String str63 = book60.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray71 = new items.LibraryItem[] { book42, book51, book60, book70 };
        java.util.ArrayList<items.LibraryItem> libraryItemList72 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList72, libraryItemArray71);
        boolean boolean74 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book26, book34 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        java.lang.String str80 = book6.getAuthor();
        java.lang.Class<?> wildcardClass81 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.toString();
        java.lang.String str11 = book6.getLocation();
        java.lang.String str12 = book6.getBorrowerEmail();
        java.lang.String str13 = book6.toString();
        java.lang.String str14 = book6.getLocation();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8700, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8700, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8700, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8700, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=8700, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=8700, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        book6.setIsPurchasable(true);
        int int15 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8702, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8702, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8702 + "'", int15 == 8702);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        book6.returnItem();
        java.lang.String str12 = book6.getPrice();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8703 + "'", int10 == 8703);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        items.Book book17 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str18 = book17.getDetails();
        book17.returnItem();
        boolean boolean20 = book17.isPurchasable();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getAuthor();
        book6.setBorrowerEmail("LibraryItem [itemId=7679, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str18, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str71, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        book6.returnItem();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8713 + "'", int10 == 8713);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.setBorrowerEmail("LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=6101, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        boolean boolean14 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str9, "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        items.Book book6 = new items.Book("LibraryItem [itemId=6323, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1727, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4287, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=8715, itemType=Book, location=LibraryItem [itemId=6323, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=4287, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=8715, itemType=Book, location=LibraryItem [itemId=6323, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=4287, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        items.Book book6 = new items.Book("LibraryItem [itemId=4553, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4953, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5804, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3820, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        items.Book book6 = new items.Book("LibraryItem [itemId=4271, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1687, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=3753, itemType=Book, location=LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        book6.setIsPurchasable(false);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        items.Book book6 = new items.Book("LibraryItem [itemId=3744, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5385, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", "LibraryItem [itemId=5825, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=2920, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        book6.setIsPurchasable(false);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        boolean boolean19 = book17.isPurchasable();
        boolean boolean20 = book17.isRented();
        java.lang.String str21 = book17.getLocation();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=3188, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8719, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8719, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Book" + "'", str71, "Book");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getPrice();
        java.lang.String str51 = book6.getAuthor();
        book6.returnItem();
        java.lang.String str53 = book6.getAuthor();
        java.lang.String str54 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getAuthor();
        book6.setIsPurchasable(true);
        book6.setLocation("LibraryItem [itemId=2151, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        items.Book book6 = new items.Book("LibraryItem [itemId=7146, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4854, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book: hi! by . Location: LibraryItem [itemId=1114, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str7 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=7146, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=7146, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        java.lang.String str14 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        book6.returnItem();
        boolean boolean14 = book6.isOverdue();
        java.lang.String str15 = book6.toString();
        book6.setLocation("LibraryItem [itemId=8674, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8734, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8734, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8734, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8734, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=8734, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=8734, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        java.lang.String str78 = book6.getItemType();
        java.lang.String str79 = book6.getBorrowerEmail();
        java.lang.String str80 = book6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Book" + "'", str78, "Book");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str79, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        items.Book book6 = new items.Book("LibraryItem [itemId=2249, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=2298, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1099, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isOverdue();
        java.lang.String str8 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getPrice();
        java.lang.String str51 = book6.getAuthor();
        book6.returnItem();
        java.lang.Class<?> wildcardClass53 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getItemType();
        double double60 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Book" + "'", str59, "Book");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        int int89 = book6.getItemId();
        java.lang.String str90 = book6.getBorrowerEmail();
        book6.setLocation("LibraryItem [itemId=2183, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str93 = book6.toString();
        java.lang.String str94 = book6.getPrice();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 8755 + "'", int89 == 8755);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str90, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "LibraryItem [itemId=8755, itemType=Book, location=LibraryItem [itemId=2183, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str93, "LibraryItem [itemId=8755, itemType=Book, location=LibraryItem [itemId=2183, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!" + "'", str94, "hi!");
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getPrice();
        java.time.LocalDate localDate72 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate72, 5693, "LibraryItem [itemId=4313, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.toString();
        java.lang.String str12 = book6.getAuthor();
        double double13 = book6.calculateOverduePenalty();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8771, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8771, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8771, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8771, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getDetails();
        boolean boolean12 = book6.isOverdue();
        boolean boolean13 = book6.isRented();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str11, "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        java.lang.String str57 = book6.toString();
        book6.setIsPurchasable(true);
        boolean boolean60 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8773, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8773, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "LibraryItem [itemId=8773, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str57, "LibraryItem [itemId=8773, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getItemType();
        java.lang.String str14 = book6.getDetails();
        java.lang.String str15 = book6.getBorrowerEmail();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8778, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8778, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str14, "Book: hi! by . Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("");
        java.lang.Class<?> wildcardClass89 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=1561, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = book6.getBorrowerEmail();
        book6.setLocation("LibraryItem [itemId=2568, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=1561, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=1561, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getAuthor();
        book6.setIsPurchasable(true);
        boolean boolean14 = book6.isOverdue();
        double double15 = book6.calculateOverduePenalty();
        java.lang.String str16 = book6.getPrice();
        java.lang.String str17 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        java.lang.String str77 = book6.getTitle();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        items.Book book16 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = book16.isRented();
        book16.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean20 = book16.isRented();
        items.Book book27 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str28 = book27.getDetails();
        book27.returnItem();
        boolean boolean30 = book27.isPurchasable();
        double double31 = book27.calculateOverduePenalty();
        items.Book book38 = new items.Book("", "", true, true, "", "hi!");
        book38.returnItem();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        java.lang.String str67 = book64.getAuthor();
        items.Book book74 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book46, book55, book64, book74 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean80 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean81 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean82 = book6.isRented();
        java.lang.String str83 = book6.getAuthor();
        java.lang.String str84 = book6.getDetails();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8799, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8799, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str28, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str84, "Book: hi! by . Location: hi!. Purchasable: false");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        int int7 = book6.getItemId();
        java.lang.String str8 = book6.getLocation();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8807 + "'", int7 == 8807);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        items.Book book17 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book24 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean25 = book24.isRented();
        book24.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean28 = book24.isRented();
        items.Book book35 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str36 = book35.getDetails();
        book35.returnItem();
        boolean boolean38 = book35.isPurchasable();
        double double39 = book35.calculateOverduePenalty();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        items.Book book63 = new items.Book("", "", true, true, "", "hi!");
        book63.returnItem();
        java.lang.String str65 = book63.getAuthor();
        items.Book book72 = new items.Book("", "", true, true, "", "hi!");
        book72.returnItem();
        java.lang.String str74 = book72.getAuthor();
        java.lang.String str75 = book72.getAuthor();
        items.Book book82 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray83 = new items.LibraryItem[] { book54, book63, book72, book82 };
        java.util.ArrayList<items.LibraryItem> libraryItemList84 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList84, libraryItemArray83);
        boolean boolean86 = book46.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean87 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean88 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean89 = book17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList84);
        book6.setLocation("LibraryItem [itemId=5250, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int93 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str36, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int93 + "' != '" + 8808 + "'", int93 == 8808);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        java.lang.String str8 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=1721, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book17 = new items.Book("hi!", "", true, false, "hi!", "");
        book17.setIsPurchasable(true);
        book17.returnItem();
        java.lang.String str21 = book17.getAuthor();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        java.lang.String str30 = book28.getAuthor();
        java.lang.String str31 = book28.getAuthor();
        double double32 = book28.calculateOverduePenalty();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        java.lang.String str49 = book47.getAuthor();
        items.Book book56 = new items.Book("", "", true, true, "", "hi!");
        book56.returnItem();
        java.lang.String str58 = book56.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        book65.returnItem();
        java.lang.String str67 = book65.getAuthor();
        java.lang.String str68 = book65.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { book47, book56, book65, book75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = book39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = book17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        java.lang.String str83 = book6.getBorrowerEmail();
        java.lang.String str84 = book6.getLocation();
        book6.setIsPurchasable(true);
        java.time.LocalDate localDate87 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate87, 3135, "LibraryItem [itemId=6770, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LibraryItem [itemId=1721, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str84, "LibraryItem [itemId=1721, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getBorrowerEmail();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8825, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8825, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getTitle();
        java.lang.String str53 = book6.getLocation();
        java.lang.String str54 = book6.getDetails();
        java.lang.String str55 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=8828, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=8828, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str54, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isOverdue();
        items.Book book20 = new items.Book("LibraryItem [itemId=4553, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4953, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5804, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3820, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book27 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book34 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean35 = book34.isOverdue();
        items.Book book42 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean43 = book42.isOverdue();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        book76.returnItem();
        java.lang.String str78 = book76.getAuthor();
        java.lang.String str79 = book76.getAuthor();
        items.Book book86 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray87 = new items.LibraryItem[] { book58, book67, book76, book86 };
        java.util.ArrayList<items.LibraryItem> libraryItemList88 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList88, libraryItemArray87);
        boolean boolean90 = book50.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { book42, book50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = book20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8834 + "'", int9 == 8834);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        book6.setIsPurchasable(true);
        book6.setBorrowerEmail("LibraryItem [itemId=1937, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = book6.isPurchasable();
        java.lang.String str17 = book6.getDetails();
        java.lang.String str18 = book6.getPrice();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8844 + "'", int9 == 8844);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str17, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        java.lang.String str11 = book6.toString();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getDetails();
        java.lang.String str14 = book6.getPrice();
        boolean boolean15 = book6.isOverdue();
        boolean boolean16 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8845, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8845, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str13, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("LibraryItem [itemId=1286, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=1314, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = book6.getDetails();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1314, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str17, "Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1314, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isRented();
        java.lang.String str54 = book6.getTitle();
        boolean boolean55 = book6.isPurchasable();
        java.lang.String str56 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8848 + "'", int52 == 8848);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getPrice();
        java.lang.String str13 = book6.getTitle();
        boolean boolean14 = book6.isOverdue();
        java.lang.String str15 = book6.getBorrowerEmail();
        java.lang.String str16 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str16, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = book6.getPrice();
        java.lang.String str56 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=8855, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=8855, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        items.Book book6 = new items.Book("LibraryItem [itemId=3856, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3448, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=6000, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3743, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        java.lang.String str9 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        boolean boolean12 = book6.isOverdue();
        java.lang.Class<?> wildcardClass13 = book6.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8863, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8863, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        java.lang.String str88 = book6.getTitle();
        double double89 = book6.calculateOverduePenalty();
        java.lang.String str90 = book6.getDetails();
        boolean boolean91 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str90, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        java.lang.String str8 = book6.getBorrowerEmail();
        java.lang.String str9 = book6.getLocation();
        double double10 = book6.calculateOverduePenalty();
        java.lang.String str11 = book6.getPrice();
        int int12 = book6.getItemId();
        double double13 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str11, "Book:  by hi!. Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8873 + "'", int12 == 8873);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getBorrowerEmail();
        double double51 = book6.calculateOverduePenalty();
        boolean boolean52 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        items.Book book6 = new items.Book("LibraryItem [itemId=1859, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=7406, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "Book: LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true", "LibraryItem [itemId=1978, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        java.time.LocalDate localDate52 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate52, 4574, "LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isOverdue();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate11, 2967, "LibraryItem [itemId=985, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.toString();
        java.lang.String str11 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8896, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8896, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str11, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        book6.returnItem();
        java.lang.String str11 = book6.toString();
        boolean boolean12 = book6.isOverdue();
        boolean boolean13 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8897, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8897, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        java.lang.String str11 = book6.toString();
        java.lang.String str12 = book6.getTitle();
        java.lang.String str13 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8898, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8898, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str13, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        java.lang.String str11 = book6.getItemType();
        boolean boolean12 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book" + "'", str11, "Book");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getItemType();
        book6.setIsPurchasable(false);
        items.Book book19 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean20 = book19.isRented();
        book19.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean23 = book19.isRented();
        items.Book book30 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str31 = book30.getDetails();
        book30.returnItem();
        boolean boolean33 = book30.isPurchasable();
        double double34 = book30.calculateOverduePenalty();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        java.lang.String str85 = book6.getBorrowerEmail();
        book6.setBorrowerEmail("LibraryItem [itemId=7893, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str31, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        double double12 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.toString();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getPrice();
        java.lang.String str14 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8911, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8911, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8911, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8911, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.setBorrowerEmail("LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=6101, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.util.List<items.LibraryItem> libraryItemList14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = book6.hasBorrowingPrivileges(libraryItemList14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str9, "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        items.Book book6 = new items.Book("LibraryItem [itemId=939, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2912, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=4268, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3232, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=6901, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        boolean boolean11 = book6.isPurchasable();
        book6.returnItem();
        java.lang.String str13 = book6.getBorrowerEmail();
        book6.setLocation("LibraryItem [itemId=6382, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = book6.isOverdue();
        java.lang.String str17 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8923, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8923, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=6382, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=6382, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        items.Book book6 = new items.Book("LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isOverdue();
        boolean boolean8 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        java.lang.String str53 = book6.getDetails();
        book6.returnItem();
        int int55 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8927, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8927, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str53, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8927 + "'", int55 == 8927);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        book6.setBorrowerEmail("LibraryItem [itemId=591, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str73 = book6.getDetails();
        boolean boolean74 = book6.isOverdue();
        book6.returnItem();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str73, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int13 = book6.getItemId();
        boolean boolean14 = book6.isOverdue();
        java.lang.Class<?> wildcardClass15 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8939 + "'", int13 == 8939);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isPurchasable();
        book6.setIsPurchasable(false);
        double double13 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        book6.setBorrowerEmail("LibraryItem [itemId=1576, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str56 = book6.toString();
        int int57 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8941, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8941, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "LibraryItem [itemId=8941, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str56, "LibraryItem [itemId=8941, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8941 + "'", int57 == 8941);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        double double60 = book6.calculateOverduePenalty();
        java.lang.String str61 = book6.getPrice();
        java.lang.Class<?> wildcardClass62 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book13 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = book13.isRented();
        book13.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = book13.isRented();
        items.Book book24 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str25 = book24.getDetails();
        book24.returnItem();
        boolean boolean27 = book24.isPurchasable();
        double double28 = book24.calculateOverduePenalty();
        items.Book book35 = new items.Book("", "", true, true, "", "hi!");
        book35.returnItem();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        java.lang.String str64 = book61.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book43, book52, book61, book71 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean78 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList73);
        java.lang.Class<?> wildcardClass79 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str25, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        boolean boolean79 = book6.isOverdue();
        java.lang.String str80 = book6.getAuthor();
        java.util.List<items.LibraryItem> libraryItemList81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = book6.hasExceededBorrowingLimit(libraryItemList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        java.lang.String str87 = book6.getAuthor();
        boolean boolean88 = book6.isRented();
        java.time.LocalDate localDate89 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate89, 5733, "LibraryItem [itemId=4192, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        java.lang.String str11 = book6.toString();
        boolean boolean12 = book6.isOverdue();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8978, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8978, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setIsPurchasable(true);
        book6.returnItem();
        java.lang.String str10 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        boolean boolean48 = book6.isOverdue();
        java.lang.String str49 = book6.getBorrowerEmail();
        java.lang.Class<?> wildcardClass50 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        items.Book book6 = new items.Book("", "LibraryItem [itemId=1418, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=4407, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2071, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass7 = book6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        book6.returnItem();
        book6.setIsPurchasable(true);
        boolean boolean16 = book6.isPurchasable();
        boolean boolean17 = book6.isRented();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8994, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8994, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8994, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8994, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getAuthor();
        java.lang.String str60 = book6.getPrice();
        double double61 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        double double67 = book6.calculateOverduePenalty();
        java.lang.String str68 = book6.getBorrowerEmail();
        double double69 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        java.lang.String str9 = book6.getTitle();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9014, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9014, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        double double60 = book6.calculateOverduePenalty();
        java.lang.String str61 = book6.getPrice();
        boolean boolean62 = book6.isPurchasable();
        java.lang.String str63 = book6.getAuthor();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=4532, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        items.Book book6 = new items.Book("LibraryItem [itemId=939, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2912, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=4268, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3232, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        boolean boolean8 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.toString();
        java.lang.String str11 = book6.getLocation();
        java.lang.String str12 = book6.getBorrowerEmail();
        book6.setIsPurchasable(false);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9024, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9024, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9024, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9024, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setIsPurchasable(false);
        java.lang.String str11 = book6.getAuthor();
        boolean boolean12 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        int int8 = book6.getItemId();
        book6.setIsPurchasable(false);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 9026 + "'", int8 == 9026);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        items.Book book6 = new items.Book("LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1867, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        items.Book book6 = new items.Book("LibraryItem [itemId=4639, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", true, false, "LibraryItem [itemId=7059, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=978, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.toString();
        items.Book book15 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str16 = book15.toString();
        items.Book book23 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book30 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean31 = book30.isRented();
        book30.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean34 = book30.isRented();
        items.Book book41 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str42 = book41.getDetails();
        book41.returnItem();
        boolean boolean44 = book41.isPurchasable();
        double double45 = book41.calculateOverduePenalty();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        book69.returnItem();
        java.lang.String str71 = book69.getAuthor();
        items.Book book78 = new items.Book("", "", true, true, "", "hi!");
        book78.returnItem();
        java.lang.String str80 = book78.getAuthor();
        java.lang.String str81 = book78.getAuthor();
        items.Book book88 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { book60, book69, book78, book88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = book52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = book23.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = book15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean97 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        java.lang.Class<?> wildcardClass98 = book6.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9045, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9045, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=9046, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=9046, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str42, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        book6.setLocation("LibraryItem [itemId=4139, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = book6.getItemType();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        items.Book book6 = new items.Book("LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1021, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=1077, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str10 = book6.getTitle();
        double double11 = book6.calculateOverduePenalty();
        boolean boolean12 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=7227, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        book6.returnItem();
        book6.setIsPurchasable(true);
        int int51 = book6.getItemId();
        int int52 = book6.getItemId();
        java.lang.String str53 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 9057 + "'", int51 == 9057);
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9057 + "'", int52 == 9057);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getItemType();
        java.lang.String str11 = book6.getDetails();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.toString();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9062, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9062, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9062, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9062, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getTitle();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        boolean boolean15 = book6.isPurchasable();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9063 + "'", int9 == 9063);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9063, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9063, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        items.Book book6 = new items.Book("LibraryItem [itemId=1524, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=940, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=4267, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4252, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        boolean boolean8 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        items.Book book6 = new items.Book("LibraryItem [itemId=8888, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6476, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=4004, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3722, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getPrice();
        book6.setLocation("Book: Book: hi! by . Location: hi!. Purchasable: false by LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        boolean boolean57 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9067, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9067, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(true);
        java.lang.String str12 = book6.getBorrowerEmail();
        java.lang.String str13 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = book6.getBorrowerEmail();
        boolean boolean18 = book6.isOverdue();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9073, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9073, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9073, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9073, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str9 = book6.toString();
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("LibraryItem [itemId=3771, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=1148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = book6.isPurchasable();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9074, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9074, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        java.lang.String str9 = book6.getBorrowerEmail();
        java.lang.String str10 = book6.getItemType();
        java.lang.String str11 = book6.getPrice();
        boolean boolean12 = book6.isOverdue();
        boolean boolean13 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        book6.returnItem();
        java.lang.String str12 = book6.getAuthor();
        book6.returnItem();
        java.lang.String str14 = book6.getLocation();
        java.lang.String str15 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9079 + "'", int10 == 9079);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        book6.setBorrowerEmail("LibraryItem [itemId=8927, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9080, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9080, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        items.Book book6 = new items.Book("LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        java.lang.String str7 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by . Location: LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Book: LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by . Location: LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        int int53 = book6.getItemId();
        boolean boolean54 = book6.isPurchasable();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9082, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9082, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 9082 + "'", int53 == 9082);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        items.Book book6 = new items.Book("LibraryItem [itemId=6222, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5494, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", "LibraryItem [itemId=5369, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        int int8 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=5369, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=5369, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 9087 + "'", int8 == 9087);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        java.lang.String str15 = book6.getPrice();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str23 = book22.getDetails();
        book22.returnItem();
        boolean boolean25 = book22.isPurchasable();
        double double26 = book22.calculateOverduePenalty();
        items.Book book33 = new items.Book("", "", true, true, "", "hi!");
        book33.returnItem();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        java.lang.String str43 = book41.getAuthor();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        java.lang.String str52 = book50.getAuthor();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        java.lang.String str62 = book59.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { book41, book50, book59, book69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = book33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        java.lang.String str76 = book6.getAuthor();
        book6.setLocation("LibraryItem [itemId=6521, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9088 + "'", int9 == 9088);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9088, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9088, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str23, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        items.Book book6 = new items.Book("LibraryItem [itemId=6323, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1727, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4287, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = book6.getAuthor();
        java.lang.String str15 = book6.getDetails();
        double double16 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9101, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9101, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str15, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        java.lang.String str11 = book6.getBorrowerEmail();
        boolean boolean12 = book6.isRented();
        java.lang.String str13 = book6.toString();
        book6.setLocation("");
        java.lang.String str16 = book6.getPrice();
        java.lang.String str17 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9102, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9102, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9102, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9102, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean87 = book6.isPurchasable();
        boolean boolean88 = book6.isRented();
        boolean boolean89 = book6.isPurchasable();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        items.Book book6 = new items.Book("LibraryItem [itemId=1022, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=677, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=3551, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1560, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=3551, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=3551, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        items.Book book6 = new items.Book("LibraryItem [itemId=677, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=962, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1155, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        items.Book book21 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str22 = book21.toString();
        items.Book book29 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean30 = book29.isOverdue();
        items.Book book37 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean38 = book37.isOverdue();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        book53.returnItem();
        java.lang.String str55 = book53.getAuthor();
        items.Book book62 = new items.Book("", "", true, true, "", "hi!");
        book62.returnItem();
        java.lang.String str64 = book62.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        book71.returnItem();
        java.lang.String str73 = book71.getAuthor();
        java.lang.String str74 = book71.getAuthor();
        items.Book book81 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { book53, book62, book71, book81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = book45.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { book37, book45 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = book21.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        java.lang.String str92 = book6.getLocation();
        java.lang.String str93 = book6.getItemType();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9115, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9115, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9115, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9115, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=9116, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=9116, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Book" + "'", str93, "Book");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        java.lang.String str78 = book6.getItemType();
        java.lang.String str79 = book6.getLocation();
        boolean boolean80 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Book" + "'", str78, "Book");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        java.lang.String str67 = book6.getTitle();
        double double68 = book6.calculateOverduePenalty();
        java.lang.String str69 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        boolean boolean53 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=5327, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str56 = book6.getBorrowerEmail();
        java.lang.String str57 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9139, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9139, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str56, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        java.lang.String str87 = book6.getAuthor();
        double double88 = book6.calculateOverduePenalty();
        java.lang.String str89 = book6.getItemType();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Book" + "'", str89, "Book");
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str52 = book6.getTitle();
        java.lang.String str53 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        java.lang.String str15 = book6.getPrice();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str23 = book22.getDetails();
        book22.returnItem();
        boolean boolean25 = book22.isPurchasable();
        double double26 = book22.calculateOverduePenalty();
        items.Book book33 = new items.Book("", "", true, true, "", "hi!");
        book33.returnItem();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        java.lang.String str43 = book41.getAuthor();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        java.lang.String str52 = book50.getAuthor();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        java.lang.String str62 = book59.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { book41, book50, book59, book69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = book33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        java.lang.String str76 = book6.getAuthor();
        java.lang.String str77 = book6.toString();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9167 + "'", int9 == 9167);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9167, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9167, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str23, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "LibraryItem [itemId=9167, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str77, "LibraryItem [itemId=9167, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        boolean boolean57 = book6.isRented();
        book6.returnItem();
        double double59 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9174, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9174, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        java.lang.String str88 = book6.getTitle();
        java.lang.String str89 = book6.getBorrowerEmail();
        java.lang.String str90 = book6.getAuthor();
        boolean boolean91 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int17 = book6.getItemId();
        book6.setIsPurchasable(false);
        java.lang.String str20 = book6.getDetails();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9188, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9188, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9188, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9188, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 9188 + "'", int17 == 9188);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str20, "Book: hi! by . Location: LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        java.lang.String str7 = book6.getTitle();
        java.lang.String str8 = book6.toString();
        boolean boolean9 = book6.isOverdue();
        double double10 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9189, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9189, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.toString();
        boolean boolean51 = book6.isPurchasable();
        boolean boolean52 = book6.isPurchasable();
        java.lang.String str53 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LibraryItem [itemId=9190, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str50, "LibraryItem [itemId=9190, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int10 = book6.getItemId();
        double double11 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9195 + "'", int10 == 9195);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        items.Book book6 = new items.Book("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "Book", "LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        java.lang.String str8 = book6.toString();
        book6.setLocation("Book:  by hi!. Location: Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true. Purchasable: true");
        double double11 = book6.calculateOverduePenalty();
        java.lang.String str12 = book6.getDetails();
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9196, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=Book, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9196, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=Book, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book: Book by LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true. Purchasable: true. Purchasable: false" + "'", str12, "Book: Book by LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true. Purchasable: true. Purchasable: false");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        items.Book book6 = new items.Book("LibraryItem [itemId=1130, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=644, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Book: hi! by . Location: LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", "LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=2705, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str91 = book6.getDetails();
        java.lang.String str92 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str91, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isRented();
        java.lang.String str54 = book6.getTitle();
        boolean boolean55 = book6.isPurchasable();
        book6.setBorrowerEmail("LibraryItem [itemId=3363, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9216 + "'", int52 == 9216);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.toString();
        java.lang.String str11 = book6.getLocation();
        java.lang.String str12 = book6.getBorrowerEmail();
        items.Book book19 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean20 = book19.isRented();
        book19.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean23 = book19.isRented();
        items.Book book30 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str31 = book30.getDetails();
        book30.returnItem();
        boolean boolean33 = book30.isPurchasable();
        double double34 = book30.calculateOverduePenalty();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9221, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9221, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9221, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9221, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str31, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = book6.getAuthor();
        java.lang.String str15 = book6.getTitle();
        java.lang.String str16 = book6.toString();
        java.lang.String str17 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9229, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9229, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=9229, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=9229, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        items.Book book6 = new items.Book("LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isOverdue();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("");
        book6.setIsPurchasable(false);
        boolean boolean15 = book6.isRented();
        java.lang.String str16 = book6.getItemType();
        java.lang.String str17 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9238, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9238, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Book" + "'", str16, "Book");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.getPrice();
        java.lang.String str49 = book6.getPrice();
        java.lang.String str50 = book6.getBorrowerEmail();
        java.lang.String str51 = book6.toString();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "LibraryItem [itemId=9239, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str51, "LibraryItem [itemId=9239, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        boolean boolean89 = book6.isPurchasable();
        java.lang.String str90 = book6.getItemType();
        java.lang.String str91 = book6.toString();
        java.lang.String str92 = book6.getTitle();
        boolean boolean93 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book" + "'", str90, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "LibraryItem [itemId=9244, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str91, "LibraryItem [itemId=9244, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        double double60 = book6.calculateOverduePenalty();
        book6.setBorrowerEmail("LibraryItem [itemId=6253, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str63 = book6.getAuthor();
        book6.setBorrowerEmail("LibraryItem [itemId=1899, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        items.Book book6 = new items.Book("LibraryItem [itemId=5535, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "LibraryItem [itemId=7503, itemType=Book, location=LibraryItem [itemId=1834, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2904, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        items.Book book6 = new items.Book("LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1727, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate7, 213, "LibraryItem [itemId=5022, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        items.Book book6 = new items.Book("LibraryItem [itemId=3971, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1878, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5287, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.setBorrowerEmail("LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=6101, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        double double14 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str9, "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        items.Book book6 = new items.Book("LibraryItem [itemId=6248, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2673, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=3688, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        items.Book book6 = new items.Book("LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2654, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1561, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4407, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getLocation();
        boolean boolean8 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isOverdue();
        boolean boolean9 = book6.isOverdue();
        java.lang.String str10 = book6.getItemType();
        boolean boolean11 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.toString();
        items.Book book15 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str16 = book15.toString();
        items.Book book23 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book30 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean31 = book30.isRented();
        book30.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean34 = book30.isRented();
        items.Book book41 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str42 = book41.getDetails();
        book41.returnItem();
        boolean boolean44 = book41.isPurchasable();
        double double45 = book41.calculateOverduePenalty();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        book69.returnItem();
        java.lang.String str71 = book69.getAuthor();
        items.Book book78 = new items.Book("", "", true, true, "", "hi!");
        book78.returnItem();
        java.lang.String str80 = book78.getAuthor();
        java.lang.String str81 = book78.getAuthor();
        items.Book book88 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { book60, book69, book78, book88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = book52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = book23.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = book15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean97 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean98 = book6.isRented();
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9278, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9278, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=9279, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=9279, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str42, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getAuthor();
        java.lang.String str60 = book6.getDetails();
        boolean boolean61 = book6.isRented();
        boolean boolean62 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str60, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean54 = book6.isRented();
        book6.setIsPurchasable(true);
        double double57 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=9294, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=9294, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=3570, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        book6.returnItem();
        boolean boolean14 = book6.isOverdue();
        java.lang.String str15 = book6.toString();
        double double16 = book6.calculateOverduePenalty();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9300, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9300, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9300, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9300, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=9300, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=9300, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        items.Book book6 = new items.Book("LibraryItem [itemId=939, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=385, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1168, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = book6.getItemId();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate8, 8307, "LibraryItem [itemId=962, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9301 + "'", int7 == 9301);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        boolean boolean11 = book6.isRented();
        boolean boolean12 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        items.Book book6 = new items.Book("LibraryItem [itemId=1846, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1113, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
        book6.setIsPurchasable(true);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9303, itemType=Book, location=LibraryItem [itemId=1846, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9303, itemType=Book, location=LibraryItem [itemId=1846, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=839, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        java.lang.String str58 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9304, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9304, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Book" + "'", str58, "Book");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        boolean boolean60 = book6.isRented();
        java.lang.String str61 = book6.getAuthor();
        java.lang.String str62 = book6.getPrice();
        int int63 = book6.getItemId();
        book6.setBorrowerEmail("LibraryItem [itemId=7146, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 9309 + "'", int63 == 9309);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.returnItem();
        boolean boolean13 = book6.isPurchasable();
        java.lang.String str14 = book6.getPrice();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        items.Book book6 = new items.Book("LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, false, "LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1576, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=1576, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Book: LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=1576, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getPrice();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getTitle();
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("LibraryItem [itemId=6557, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9317, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9317, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("");
        java.lang.String str13 = book6.getItemType();
        book6.setBorrowerEmail("Book: LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        java.lang.String str16 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9318, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9318, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        double double14 = book6.calculateOverduePenalty();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9319, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9319, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9319, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9319, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        items.Book book6 = new items.Book("LibraryItem [itemId=2215, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1015, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1015, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        int int8 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 9320 + "'", int8 == 9320);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.getDetails();
        book6.setIsPurchasable(true);
        book6.setLocation("LibraryItem [itemId=3461, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=7060, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str50, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setIsPurchasable(true);
        book6.returnItem();
        java.lang.String str10 = book6.getAuthor();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        items.Book book6 = new items.Book("LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2694, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2405, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        java.lang.String str8 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=2405, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str8, "Book: LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=2405, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        book6.returnItem();
        java.lang.String str11 = book6.getTitle();
        double double12 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        java.lang.String str9 = book6.getBorrowerEmail();
        java.lang.String str10 = book6.getItemType();
        double double11 = book6.calculateOverduePenalty();
        java.lang.String str12 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        java.lang.String str10 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=8181, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9345, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9345, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        boolean boolean11 = book6.isPurchasable();
        boolean boolean12 = book6.isPurchasable();
        java.lang.String str13 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9346, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9346, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.toString();
        boolean boolean51 = book6.isPurchasable();
        book6.returnItem();
        double double53 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LibraryItem [itemId=9347, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str50, "LibraryItem [itemId=9347, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        book6.setLocation("LibraryItem [itemId=1155, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str79 = book6.getItemType();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Book" + "'", str79, "Book");
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        items.Book book6 = new items.Book("LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1727, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        boolean boolean7 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.getAuthor();
        double double50 = book6.calculateOverduePenalty();
        double double51 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isRented();
        java.lang.String str54 = book6.getTitle();
        book6.returnItem();
        book6.setBorrowerEmail("LibraryItem [itemId=3396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9366 + "'", int52 == 9366);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        boolean boolean11 = book6.isPurchasable();
        book6.returnItem();
        java.lang.String str13 = book6.getBorrowerEmail();
        book6.setLocation("LibraryItem [itemId=6382, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = book6.isOverdue();
        boolean boolean17 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9372, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9372, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        java.lang.String str52 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=9373, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=9373, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str52, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        book6.setIsPurchasable(true);
        boolean boolean17 = book6.isRented();
        java.lang.String str18 = book6.getItemType();
        java.lang.String str19 = book6.toString();
        double double20 = book6.calculateOverduePenalty();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9379, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9379, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9379, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9379, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book" + "'", str18, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=9379, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=9379, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        java.lang.String str79 = book6.toString();
        java.lang.String str80 = book6.getAuthor();
        boolean boolean81 = book6.isRented();
        java.lang.String str82 = book6.getItemType();
        java.lang.String str83 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LibraryItem [itemId=9380, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str79, "LibraryItem [itemId=9380, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Book" + "'", str82, "Book");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        java.lang.String str11 = book6.getBorrowerEmail();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        boolean boolean20 = book18.isPurchasable();
        boolean boolean21 = book18.isRented();
        java.lang.String str22 = book18.getLocation();
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        java.lang.String str58 = book55.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { book37, book46, book55, book65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        book6.setLocation("LibraryItem [itemId=1114, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        book6.setIsPurchasable(true);
        boolean boolean78 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9388, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9388, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.setBorrowerEmail("Book");
        java.lang.String str10 = book6.getDetails();
        book6.setBorrowerEmail("LibraryItem [itemId=3771, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        items.Book book6 = new items.Book("", "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true", true, true, "LibraryItem [itemId=8926, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3698, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        int int89 = book6.getItemId();
        java.lang.String str90 = book6.getBorrowerEmail();
        book6.setLocation("LibraryItem [itemId=2183, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=7679, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 9397 + "'", int89 == 9397);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str90, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        items.Book book6 = new items.Book("Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", "LibraryItem [itemId=4150, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=5424, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3018, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        items.Book book6 = new items.Book("LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book:  by hi!. Location: . Purchasable: true", true, false, "Book: hi! by . Location: hi!. Purchasable: false", "LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.toString();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: Book: hi! by . Location: hi!. Purchasable: false by LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str8, "Book: Book: hi! by . Location: hi!. Purchasable: false by LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9412, itemType=Book, location=LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=Book: hi! by . Location: hi!. Purchasable: false, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9412, itemType=Book, location=LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=Book: hi! by . Location: hi!. Purchasable: false, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        book6.setIsPurchasable(false);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        boolean boolean19 = book17.isPurchasable();
        boolean boolean20 = book17.isRented();
        java.lang.String str21 = book17.getLocation();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getItemType();
        java.lang.String str72 = book6.getPrice();
        book6.setBorrowerEmail("LibraryItem [itemId=8855, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9413, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9413, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Book" + "'", str71, "Book");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getLocation();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        java.lang.String str20 = book18.getAuthor();
        java.lang.String str21 = book18.getAuthor();
        double double22 = book18.calculateOverduePenalty();
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        java.lang.String str58 = book55.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { book37, book46, book55, book65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.String str72 = book6.getTitle();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getDetails();
        java.lang.String str53 = book6.toString();
        java.lang.String str54 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=9427, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=9427, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str52, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=9427, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=9427, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        items.Book book6 = new items.Book("LibraryItem [itemId=4252, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5477, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1687, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getPrice();
        boolean boolean8 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getPrice();
        boolean boolean51 = book6.isRented();
        book6.setLocation("LibraryItem [itemId=2410, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str54 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.returnItem();
        boolean boolean13 = book6.isRented();
        java.lang.Class<?> wildcardClass14 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        java.lang.String str11 = book6.getBorrowerEmail();
        boolean boolean12 = book6.isRented();
        java.lang.String str13 = book6.toString();
        java.lang.String str14 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9440, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9440, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9440, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9440, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str14, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=1748, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        items.Book book6 = new items.Book("LibraryItem [itemId=9046, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3705, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3704, itemType=Book, location=LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2300, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        boolean boolean79 = book6.isOverdue();
        double double80 = book6.calculateOverduePenalty();
        java.lang.String str81 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        items.Book book6 = new items.Book("LibraryItem [itemId=3754, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1084, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1198, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        items.Book book6 = new items.Book("LibraryItem [itemId=1758, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1219, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "Book: LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", "LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getTitle();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Book: LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        int int11 = book6.getItemId();
        java.lang.String str12 = book6.getTitle();
        double double13 = book6.calculateOverduePenalty();
        java.lang.String str14 = book6.toString();
        java.lang.String str15 = book6.toString();
        java.lang.String str16 = book6.getAuthor();
        boolean boolean17 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9463 + "'", int11 == 9463);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9463, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9463, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=9463, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=9463, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        java.lang.String str67 = book6.getTitle();
        java.lang.String str68 = book6.getDetails();
        java.lang.Class<?> wildcardClass69 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str68, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getLocation();
        boolean boolean12 = book6.isRented();
        java.lang.String str13 = book6.toString();
        java.lang.String str14 = book6.getBorrowerEmail();
        java.lang.String str15 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9473 + "'", int10 == 9473);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9473, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9473, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        items.Book book6 = new items.Book("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book:  by hi!. Location: . Purchasable: true", true, false, "LibraryItem [itemId=291, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=677, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9474, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=291, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9474, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=291, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        items.Book book6 = new items.Book("LibraryItem [itemId=4350, itemType=Book, location=LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5530, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1413, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        book6.returnItem();
        book6.setBorrowerEmail("LibraryItem [itemId=4934, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9476 + "'", int10 == 9476);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        items.Book book6 = new items.Book("LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=601, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=615, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.getAuthor();
        boolean boolean9 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=615, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=615, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        items.Book book6 = new items.Book("LibraryItem [itemId=1859, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=9075, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5785, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4717, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getBorrowerEmail();
        book6.setLocation("Book: LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book" + "'", str14, "Book");
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        java.lang.String str10 = book6.getTitle();
        java.lang.String str11 = book6.getDetails();
        java.lang.String str12 = book6.getBorrowerEmail();
        java.lang.String str13 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        boolean boolean12 = book6.isRented();
        book6.setIsPurchasable(true);
        boolean boolean15 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getItemType();
        java.lang.String str10 = book6.getItemType();
        java.lang.String str11 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book" + "'", str11, "Book");
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        items.Book book6 = new items.Book("LibraryItem [itemId=1726, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true", true, true, "LibraryItem [itemId=1961, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2300, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        items.Book book6 = new items.Book("LibraryItem [itemId=6283, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=9073, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "Book: hi! by . Location: . Purchasable: false", "LibraryItem [itemId=6730, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        java.lang.String str57 = book6.getItemType();
        book6.setLocation("LibraryItem [itemId=746, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str60 = book6.toString();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9486, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9486, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Book" + "'", str57, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "LibraryItem [itemId=9486, itemType=Book, location=LibraryItem [itemId=746, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str60, "LibraryItem [itemId=9486, itemType=Book, location=LibraryItem [itemId=746, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        int int12 = book6.getItemId();
        book6.setLocation("LibraryItem [itemId=7205, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9491, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9491, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9491 + "'", int12 == 9491);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        items.Book book6 = new items.Book("LibraryItem [itemId=1846, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1113, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = book6.calculateOverduePenalty();
        items.Book book14 = new items.Book("LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1727, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        java.lang.String str15 = book14.getLocation();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str23 = book22.getDetails();
        book22.returnItem();
        boolean boolean25 = book22.isPurchasable();
        double double26 = book22.calculateOverduePenalty();
        items.Book book33 = new items.Book("", "", true, true, "", "hi!");
        book33.returnItem();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        java.lang.String str43 = book41.getAuthor();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        java.lang.String str52 = book50.getAuthor();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        java.lang.String str62 = book59.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { book41, book50, book59, book69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = book33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = book14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean76 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str23, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        items.Book book6 = new items.Book("LibraryItem [itemId=881, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2405, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1908, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate7, 9443, "LibraryItem [itemId=3448, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        int int14 = book6.getItemId();
        java.lang.String str15 = book6.getDetails();
        double double16 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9501 + "'", int14 == 9501);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: . Purchasable: false" + "'", str15, "Book: hi! by . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getDetails();
        int int53 = book6.getItemId();
        boolean boolean54 = book6.isOverdue();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9502, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9502, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str52, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 9502 + "'", int53 == 9502);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        double double49 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str51 = book6.getAuthor();
        boolean boolean52 = book6.isOverdue();
        java.lang.String str53 = book6.toString();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=9508, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=9508, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        book6.setIsPurchasable(true);
        boolean boolean17 = book6.isRented();
        java.lang.String str18 = book6.getItemType();
        int int19 = book6.getItemId();
        book6.setLocation("LibraryItem [itemId=4914, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int22 = book6.getItemId();
        java.lang.String str23 = book6.getPrice();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9513, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9513, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9513, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9513, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book" + "'", str18, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 9513 + "'", int19 == 9513);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 9513 + "'", int22 == 9513);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isRented();
        java.lang.String str54 = book6.getTitle();
        boolean boolean55 = book6.isPurchasable();
        boolean boolean56 = book6.isPurchasable();
        double double57 = book6.calculateOverduePenalty();
        java.lang.String str58 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9514 + "'", int52 == 9514);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        double double9 = book6.calculateOverduePenalty();
        book6.setLocation("LibraryItem [itemId=2630, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean12 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        book6.setIsPurchasable(false);
        items.Book book19 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str20 = book19.getDetails();
        book19.returnItem();
        java.lang.String str22 = book19.toString();
        book19.returnItem();
        java.lang.String str24 = book19.getBorrowerEmail();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        boolean boolean33 = book31.isPurchasable();
        boolean boolean34 = book31.isRented();
        java.lang.String str35 = book31.getLocation();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        book42.returnItem();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        java.lang.String str52 = book50.getAuthor();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        book68.returnItem();
        java.lang.String str70 = book68.getAuthor();
        java.lang.String str71 = book68.getAuthor();
        items.Book book78 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray79 = new items.LibraryItem[] { book50, book59, book68, book78 };
        java.util.ArrayList<items.LibraryItem> libraryItemList80 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList80, libraryItemArray79);
        boolean boolean82 = book42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean83 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean84 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean85 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        java.lang.Class<?> wildcardClass86 = libraryItemList80.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=9526, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=9526, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.returnItem();
        boolean boolean13 = book6.isPurchasable();
        java.lang.String str14 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        items.Book book6 = new items.Book("Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true", "LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1464, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2250, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=1464, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=2250, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true. Purchasable: true" + "'", str7, "Book: LibraryItem [itemId=1464, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=2250, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true. Purchasable: true");
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("");
        java.lang.String str13 = book6.getItemType();
        java.lang.String str14 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9535, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9535, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getAuthor();
        java.lang.String str60 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "LibraryItem [itemId=9536, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str60, "LibraryItem [itemId=9536, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        java.lang.String str60 = book6.getLocation();
        book6.setIsPurchasable(true);
        book6.setIsPurchasable(true);
        java.lang.String str65 = book6.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "LibraryItem [itemId=9542, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str65, "LibraryItem [itemId=9542, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isOverdue();
        java.lang.Class<?> wildcardClass10 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getItemType();
        java.lang.String str14 = book6.getDetails();
        int int15 = book6.getItemId();
        book6.setBorrowerEmail("LibraryItem [itemId=2813, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = book6.isOverdue();
        java.time.LocalDate localDate19 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate19, 8307, "LibraryItem [itemId=1978, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9549, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9549, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str14, "Book: hi! by . Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9549 + "'", int15 == 9549);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isRented();
        java.lang.String str54 = book6.getTitle();
        book6.returnItem();
        java.lang.String str56 = book6.getBorrowerEmail();
        boolean boolean57 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 9550 + "'", int52 == 9550);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        book6.returnItem();
        java.lang.String str12 = book6.getBorrowerEmail();
        int int13 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9555, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9555, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9555 + "'", int13 == 9555);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getLocation();
        java.lang.String str12 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9556 + "'", int10 == 9556);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str12, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        book6.setIsPurchasable(false);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        boolean boolean19 = book17.isPurchasable();
        boolean boolean20 = book17.isRented();
        java.lang.String str21 = book17.getLocation();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = book6.isOverdue();
        java.lang.String str72 = book6.getBorrowerEmail();
        java.lang.String str73 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9558, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9558, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str73, "Book: hi! by . Location: hi!. Purchasable: false");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getPrice();
        boolean boolean10 = book6.isRented();
        book6.setLocation("LibraryItem [itemId=1434, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str9, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getItemType();
        items.Book book20 = new items.Book("", "", true, true, "", "hi!");
        book20.returnItem();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        java.lang.String str30 = book28.getAuthor();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        java.lang.String str49 = book46.getAuthor();
        items.Book book56 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray57 = new items.LibraryItem[] { book28, book37, book46, book56 };
        java.util.ArrayList<items.LibraryItem> libraryItemList58 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList58, libraryItemArray57);
        boolean boolean60 = book20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList58);
        boolean boolean61 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList58);
        java.lang.String str62 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9566, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9566, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str62, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=4953, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=8477, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9572, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9572, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        book6.setIsPurchasable(false);
        java.lang.String str17 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=3018, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9578, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9578, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9578, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9578, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str17, "Book: hi! by . Location: hi!. Purchasable: false");
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        int int11 = book6.getItemId();
        java.lang.String str12 = book6.getTitle();
        double double13 = book6.calculateOverduePenalty();
        boolean boolean14 = book6.isOverdue();
        java.lang.String str15 = book6.getItemType();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str23 = book22.getDetails();
        book22.returnItem();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        boolean boolean33 = book31.isPurchasable();
        boolean boolean34 = book31.isRented();
        java.lang.String str35 = book31.getLocation();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        book42.returnItem();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        java.lang.String str52 = book50.getAuthor();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        book68.returnItem();
        java.lang.String str70 = book68.getAuthor();
        java.lang.String str71 = book68.getAuthor();
        items.Book book78 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray79 = new items.LibraryItem[] { book50, book59, book68, book78 };
        java.util.ArrayList<items.LibraryItem> libraryItemList80 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList80, libraryItemArray79);
        boolean boolean82 = book42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean83 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean84 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean85 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        book6.returnItem();
        java.lang.String str87 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9579 + "'", int11 == 9579);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book" + "'", str15, "Book");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str23, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str87, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getItemType();
        java.lang.String str50 = book6.getItemType();
        int int51 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Book" + "'", str49, "Book");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Book" + "'", str50, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 9587 + "'", int51 == 9587);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        book6.returnItem();
        book6.setBorrowerEmail("LibraryItem [itemId=1148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=1846, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=1413, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book23 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str24 = book23.getDetails();
        java.lang.String str25 = book23.getDetails();
        boolean boolean26 = book23.isOverdue();
        items.Book book33 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean34 = book33.isOverdue();
        items.Book book41 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean42 = book41.isOverdue();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        book75.returnItem();
        java.lang.String str77 = book75.getAuthor();
        java.lang.String str78 = book75.getAuthor();
        items.Book book85 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { book57, book66, book75, book85 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = book49.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        items.LibraryItem[] libraryItemArray90 = new items.LibraryItem[] { book41, book49 };
        java.util.ArrayList<items.LibraryItem> libraryItemList91 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList91, libraryItemArray90);
        boolean boolean93 = book33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean94 = book23.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean95 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean96 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str24, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str25, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(libraryItemArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        book6.setIsPurchasable(false);
        java.lang.String str16 = book6.getTitle();
        java.lang.String str17 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9601, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9601, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str17, "Book: hi! by . Location: hi!. Purchasable: false");
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        boolean boolean79 = book6.isOverdue();
        java.lang.String str80 = book6.getAuthor();
        java.lang.String str81 = book6.getAuthor();
        java.lang.String str82 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.getPrice();
        java.lang.String str9 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        double double7 = book6.calculateOverduePenalty();
        boolean boolean8 = book6.isOverdue();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getPrice();
        java.lang.String str11 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        items.Book book6 = new items.Book("LibraryItem [itemId=4271, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1687, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=3753, itemType=Book, location=LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        boolean boolean7 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        java.lang.String str7 = book6.getTitle();
        java.lang.String str8 = book6.getBorrowerEmail();
        java.lang.String str9 = book6.getPrice();
        java.lang.String str10 = book6.getPrice();
        java.lang.String str11 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        java.lang.String str88 = book6.getTitle();
        double double89 = book6.calculateOverduePenalty();
        java.lang.String str90 = book6.getLocation();
        java.lang.String str91 = book6.getItemType();
        java.lang.String str92 = book6.getTitle();
        java.lang.String str93 = book6.getPrice();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Book" + "'", str91, "Book");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.getAuthor();
        double double50 = book6.calculateOverduePenalty();
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        boolean boolean53 = book6.isOverdue();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        items.Book book6 = new items.Book("Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true", "LibraryItem [itemId=9014, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=9174, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        items.Book book6 = new items.Book("LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, false, "LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1576, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9630, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9630, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9630, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9630, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        items.Book book6 = new items.Book("LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(true);
        java.lang.String str9 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.returnItem();
        boolean boolean13 = book6.isRented();
        book6.setIsPurchasable(false);
        double double16 = book6.calculateOverduePenalty();
        int int17 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 9632 + "'", int17 == 9632);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=1113, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9633, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9633, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.toString();
        book6.setLocation("LibraryItem [itemId=6110, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass12 = book6.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9638, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9638, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str8, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9638, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9638, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=1219, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = book6.getPrice();
        java.lang.String str17 = book6.getTitle();
        boolean boolean18 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9639, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9639, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str81 = book6.toString();
        book6.setLocation("LibraryItem [itemId=1413, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean84 = book6.isOverdue();
        java.lang.String str85 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "LibraryItem [itemId=9640, itemType=Book, location=LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str81, "LibraryItem [itemId=9640, itemType=Book, location=LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = book6.getPrice();
        boolean boolean56 = book6.isRented();
        java.lang.String str57 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9648, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9648, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str57, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        items.Book book6 = new items.Book("LibraryItem [itemId=9190, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=876, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=8541, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate7, 3513, "LibraryItem [itemId=5291, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str7 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str10 = book6.getDetails();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9654, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9654, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str10, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        java.lang.String str9 = book6.getDetails();
        items.Book book16 = new items.Book("", "", true, true, "", "hi!");
        book16.returnItem();
        java.lang.String str18 = book16.getAuthor();
        book16.setIsPurchasable(true);
        items.Book book27 = new items.Book("", "", true, true, "", "hi!");
        book27.returnItem();
        java.lang.String str29 = book27.getAuthor();
        java.lang.String str30 = book27.getAuthor();
        double double31 = book27.calculateOverduePenalty();
        items.Book book38 = new items.Book("", "", true, true, "", "hi!");
        book38.returnItem();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        java.lang.String str67 = book64.getAuthor();
        items.Book book74 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book46, book55, book64, book74 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean80 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean81 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        java.time.LocalDate localDate82 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate82, 5827, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str9, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        boolean boolean89 = book6.isPurchasable();
        java.lang.String str90 = book6.getDetails();
        boolean boolean91 = book6.isRented();
        java.lang.String str92 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str90, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str92, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=2442, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        items.Book book6 = new items.Book("LibraryItem [itemId=6357, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1382, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1604, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1198, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1198, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1198, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.getPrice();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean51 = book6.isPurchasable();
        java.lang.String str52 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str52, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getPrice();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = book17.isRented();
        book17.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean21 = book17.isRented();
        items.Book book28 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str29 = book28.getDetails();
        book28.returnItem();
        boolean boolean31 = book28.isPurchasable();
        double double32 = book28.calculateOverduePenalty();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        java.lang.String str49 = book47.getAuthor();
        items.Book book56 = new items.Book("", "", true, true, "", "hi!");
        book56.returnItem();
        java.lang.String str58 = book56.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        book65.returnItem();
        java.lang.String str67 = book65.getAuthor();
        java.lang.String str68 = book65.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { book47, book56, book65, book75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = book39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        book6.setLocation("LibraryItem [itemId=2486, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str85 = book6.getAuthor();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9685, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9685, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str29, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        book6.returnItem();
        boolean boolean14 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=3925, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = book6.isPurchasable();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9694, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9694, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9694, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9694, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        java.lang.String str8 = book6.getBorrowerEmail();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str10, "Book:  by hi!. Location: . Purchasable: false");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        boolean boolean11 = book6.isPurchasable();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9696, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9696, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        double double67 = book6.calculateOverduePenalty();
        java.lang.String str68 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=8773, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Book" + "'", str68, "Book");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        items.Book book6 = new items.Book("LibraryItem [itemId=591, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6049, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "", "LibraryItem [itemId=5208, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        double double7 = book6.calculateOverduePenalty();
        boolean boolean8 = book6.isOverdue();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getTitle();
        java.lang.String str11 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.toString();
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate13, 2165, "Book:  by hi!. Location: Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true. Purchasable: true");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9706, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9706, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        boolean boolean11 = book6.isPurchasable();
        book6.returnItem();
        java.lang.String str13 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9707, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9707, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getPrice();
        java.lang.String str51 = book6.getAuthor();
        java.lang.String str52 = book6.getTitle();
        java.lang.String str53 = book6.getTitle();
        java.lang.String str54 = book6.getDetails();
        java.lang.String str55 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str54, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book" + "'", str55, "Book");
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        items.Book book6 = new items.Book("LibraryItem [itemId=6323, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1727, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4287, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        items.Book book14 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = book14.getAuthor();
        items.Book book22 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book29 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean30 = book29.isOverdue();
        items.Book book37 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean38 = book37.isOverdue();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        book53.returnItem();
        java.lang.String str55 = book53.getAuthor();
        items.Book book62 = new items.Book("", "", true, true, "", "hi!");
        book62.returnItem();
        java.lang.String str64 = book62.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        book71.returnItem();
        java.lang.String str73 = book71.getAuthor();
        java.lang.String str74 = book71.getAuthor();
        items.Book book81 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { book53, book62, book71, book81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = book45.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { book37, book45 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = book14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean92 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getTitle();
        items.Book book16 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str17 = book16.getDetails();
        book16.returnItem();
        java.lang.String str19 = book16.toString();
        book16.returnItem();
        java.lang.String str21 = book16.getBorrowerEmail();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        boolean boolean30 = book28.isPurchasable();
        boolean boolean31 = book28.isRented();
        java.lang.String str32 = book28.getLocation();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        java.lang.String str49 = book47.getAuthor();
        items.Book book56 = new items.Book("", "", true, true, "", "hi!");
        book56.returnItem();
        java.lang.String str58 = book56.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        book65.returnItem();
        java.lang.String str67 = book65.getAuthor();
        java.lang.String str68 = book65.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { book47, book56, book65, book75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = book39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str8, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str17, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=9724, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=9724, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getLocation();
        boolean boolean12 = book6.isRented();
        boolean boolean13 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=1022, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("Book: Book by LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str18 = book6.toString();
        java.lang.String str19 = book6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9731 + "'", int10 == 9731);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=9731, itemType=Book, location=LibraryItem [itemId=1022, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=9731, itemType=Book, location=LibraryItem [itemId=1022, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        java.lang.String str15 = book6.getPrice();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str23 = book22.getDetails();
        book22.returnItem();
        boolean boolean25 = book22.isPurchasable();
        double double26 = book22.calculateOverduePenalty();
        items.Book book33 = new items.Book("", "", true, true, "", "hi!");
        book33.returnItem();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        java.lang.String str43 = book41.getAuthor();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        java.lang.String str52 = book50.getAuthor();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        java.lang.String str62 = book59.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { book41, book50, book59, book69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = book33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        java.lang.String str76 = book6.getTitle();
        java.lang.String str77 = book6.getDetails();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9732 + "'", int9 == 9732);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9732, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9732, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str23, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str77, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=839, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean57 = book6.isOverdue();
        double double58 = book6.calculateOverduePenalty();
        java.lang.String str59 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=8601, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9739, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9739, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "LibraryItem [itemId=9739, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str59, "LibraryItem [itemId=9739, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=871, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = book6.getAuthor();
        boolean boolean16 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9744, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9744, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        items.Book book6 = new items.Book("LibraryItem [itemId=2861, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3461, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3186, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1561, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        java.lang.String str8 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=2861, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=2861, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getTitle();
        book6.returnItem();
        java.lang.String str13 = book6.getDetails();
        boolean boolean14 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str13, "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.getAuthor();
        book6.setBorrowerEmail("");
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9747, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9747, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        java.lang.String str11 = book6.getBorrowerEmail();
        boolean boolean12 = book6.isRented();
        java.lang.String str13 = book6.toString();
        book6.setLocation("");
        java.lang.String str16 = book6.getPrice();
        boolean boolean17 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9748, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9748, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9748, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9748, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        double double7 = book6.calculateOverduePenalty();
        boolean boolean8 = book6.isPurchasable();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getPrice();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getAuthor();
        java.lang.String str12 = book6.getLocation();
        java.lang.String str13 = book6.getLocation();
        boolean boolean14 = book6.isPurchasable();
        book6.setIsPurchasable(false);
        java.lang.String str17 = book6.getPrice();
        book6.setLocation("");
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=839, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean57 = book6.isOverdue();
        java.lang.String str58 = book6.toString();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9751, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9751, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "LibraryItem [itemId=9751, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str58, "LibraryItem [itemId=9751, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getItemType();
        book6.setIsPurchasable(false);
        items.Book book19 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean20 = book19.isRented();
        book19.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean23 = book19.isRented();
        items.Book book30 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str31 = book30.getDetails();
        book30.returnItem();
        boolean boolean33 = book30.isPurchasable();
        double double34 = book30.calculateOverduePenalty();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        java.lang.String str85 = book6.getBorrowerEmail();
        java.lang.String str86 = book6.getItemType();
        java.lang.String str87 = book6.getPrice();
        book6.setBorrowerEmail("LibraryItem [itemId=6497, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str31, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Book" + "'", str86, "Book");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str91 = book6.getItemType();
        int int92 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Book" + "'", str91, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int92 + "' != '" + 9764 + "'", int92 == 9764);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isPurchasable();
        java.lang.String str11 = book6.getPrice();
        boolean boolean12 = book6.isRented();
        int int13 = book6.getItemId();
        book6.setLocation("LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9773 + "'", int13 == 9773);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        java.lang.String str67 = book6.getTitle();
        int int68 = book6.getItemId();
        double double69 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 9774 + "'", int68 == 9774);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getPrice();
        java.lang.String str13 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        double double48 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(true);
        double double51 = book6.calculateOverduePenalty();
        java.lang.String str52 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        java.lang.String str13 = book6.getTitle();
        java.lang.String str14 = book6.getTitle();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9787 + "'", int9 == 9787);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        items.Book book6 = new items.Book("LibraryItem [itemId=4610, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6382, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5404, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5877, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9788, itemType=Book, location=LibraryItem [itemId=4610, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=5404, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9788, itemType=Book, location=LibraryItem [itemId=4610, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=5404, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getItemType();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book" + "'", str14, "Book");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getItemType();
        book6.setIsPurchasable(true);
        java.lang.Class<?> wildcardClass98 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Book" + "'", str95, "Book");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.setBorrowerEmail("Book");
        java.lang.String str10 = book6.getDetails();
        book6.setLocation("");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        boolean boolean12 = book6.isOverdue();
        items.Book book19 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str20 = book19.getDetails();
        java.lang.String str21 = book19.toString();
        book19.setIsPurchasable(false);
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        boolean boolean32 = book30.isPurchasable();
        boolean boolean33 = book30.isRented();
        java.lang.String str34 = book30.getLocation();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        java.lang.Class<?> wildcardClass85 = libraryItemList79.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9801, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9801, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=9802, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=9802, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        book6.returnItem();
        book6.setBorrowerEmail("LibraryItem [itemId=1148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=1846, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("Book:  by hi!. Location: . Purchasable: false");
        java.lang.String str17 = book6.toString();
        java.time.LocalDate localDate18 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate18, 5322, "LibraryItem [itemId=3269, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=9809, itemType=Book, location=Book:  by hi!. Location: . Purchasable: false, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=9809, itemType=Book, location=Book:  by hi!. Location: . Purchasable: false, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        java.lang.String str7 = book6.getTitle();
        java.lang.String str8 = book6.getBorrowerEmail();
        java.lang.String str9 = book6.getPrice();
        java.lang.String str10 = book6.getPrice();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate11, 9153, "LibraryItem [itemId=1286, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getLocation();
        items.Book book16 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = book16.getAuthor();
        java.lang.String str18 = book16.getDetails();
        book16.setLocation("LibraryItem [itemId=1721, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book27 = new items.Book("hi!", "", true, false, "hi!", "");
        book27.setIsPurchasable(true);
        book27.returnItem();
        java.lang.String str31 = book27.getAuthor();
        items.Book book38 = new items.Book("", "", true, true, "", "hi!");
        book38.returnItem();
        java.lang.String str40 = book38.getAuthor();
        java.lang.String str41 = book38.getAuthor();
        double double42 = book38.calculateOverduePenalty();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        book75.returnItem();
        java.lang.String str77 = book75.getAuthor();
        java.lang.String str78 = book75.getAuthor();
        items.Book book85 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { book57, book66, book75, book85 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = book49.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = book38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = book27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean92 = book16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean93 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        java.lang.String str94 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str18, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Book" + "'", str94, "Book");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isRented();
        double double14 = book6.calculateOverduePenalty();
        boolean boolean15 = book6.isPurchasable();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9820 + "'", int9 == 9820);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        boolean boolean50 = book6.isRented();
        boolean boolean51 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        boolean boolean53 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=5327, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass56 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9826, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9826, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        items.Book book17 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str18 = book17.getDetails();
        java.lang.String str19 = book17.getDetails();
        boolean boolean20 = book17.isOverdue();
        items.Book book27 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean28 = book27.isOverdue();
        items.Book book35 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean36 = book35.isOverdue();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        book69.returnItem();
        java.lang.String str71 = book69.getAuthor();
        java.lang.String str72 = book69.getAuthor();
        items.Book book79 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { book51, book60, book69, book79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = book43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book35, book43 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = book17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        book6.returnItem();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9831, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9831, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str18, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        boolean boolean9 = book6.isPurchasable();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getTitle();
        boolean boolean53 = book6.isPurchasable();
        boolean boolean54 = book6.isPurchasable();
        boolean boolean55 = book6.isPurchasable();
        java.lang.String str56 = book6.getTitle();
        java.util.List<items.LibraryItem> libraryItemList57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = book6.hasExceededBorrowingLimit(libraryItemList57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=9842, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=9842, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = book6.getPrice();
        boolean boolean56 = book6.isRented();
        boolean boolean57 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=9847, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=9847, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str13 = book6.getBorrowerEmail();
        java.lang.String str14 = book6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9852, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9852, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9852, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9852, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        items.Book book6 = new items.Book("LibraryItem [itemId=1077, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1114, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1868, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3231, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        java.lang.String str8 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=3231, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=3231, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        book6.returnItem();
        book6.setIsPurchasable(true);
        book6.setBorrowerEmail("LibraryItem [itemId=3593, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9862, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9862, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9862, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9862, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        java.lang.String str52 = book6.getPrice();
        java.lang.String str53 = book6.getPrice();
        java.lang.Class<?> wildcardClass54 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=9863, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=9863, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getItemType();
        java.lang.String str10 = book6.getItemType();
        boolean boolean11 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = book6.getBorrowerEmail();
        boolean boolean18 = book6.isPurchasable();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9870, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9870, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9870, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9870, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getBorrowerEmail();
        int int11 = book6.getItemId();
        java.lang.String str12 = book6.getLocation();
        java.lang.String str13 = book6.getTitle();
        int int14 = book6.getItemId();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9871, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9871, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9871 + "'", int11 == 9871);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9871 + "'", int14 == 9871);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        items.Book book21 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str22 = book21.toString();
        items.Book book29 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean30 = book29.isOverdue();
        items.Book book37 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean38 = book37.isOverdue();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        book53.returnItem();
        java.lang.String str55 = book53.getAuthor();
        items.Book book62 = new items.Book("", "", true, true, "", "hi!");
        book62.returnItem();
        java.lang.String str64 = book62.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        book71.returnItem();
        java.lang.String str73 = book71.getAuthor();
        java.lang.String str74 = book71.getAuthor();
        items.Book book81 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { book53, book62, book71, book81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = book45.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { book37, book45 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = book21.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean92 = book6.isOverdue();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9872, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9872, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9872, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9872, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=9873, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=9873, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        items.Book book6 = new items.Book("Book: LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true", "LibraryItem [itemId=9507, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1382, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3647, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getTitle();
        boolean boolean12 = book6.isPurchasable();
        java.lang.String str13 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getDetails();
        java.lang.String str12 = book6.getItemType();
        java.lang.String str13 = book6.toString();
        java.lang.String str14 = book6.getTitle();
        java.time.LocalDate localDate15 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate15, 3660, "LibraryItem [itemId=6249, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str11, "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9883, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9883, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        int int89 = book6.getItemId();
        boolean boolean90 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=3186, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 9884 + "'", int89 == 9884);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getLocation();
        java.lang.String str10 = book6.getPrice();
        book6.setLocation("LibraryItem [itemId=7669, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = book6.getAuthor();
        java.lang.String str15 = book6.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9899, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9899, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=9899, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=9899, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getPrice();
        items.Book book16 = new items.Book("", "", true, true, "", "hi!");
        book16.returnItem();
        java.lang.String str18 = book16.getAuthor();
        java.lang.String str19 = book16.getAuthor();
        java.lang.String str20 = book16.getDetails();
        double double21 = book16.calculateOverduePenalty();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str91 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str8, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str20, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "LibraryItem [itemId=9900, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str91, "LibraryItem [itemId=9900, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getPrice();
        boolean boolean10 = book6.isRented();
        boolean boolean11 = book6.isPurchasable();
        java.lang.String str12 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=3944, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str9, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str15, "Book:  by hi!. Location: . Purchasable: false");
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getBorrowerEmail();
        book6.setBorrowerEmail("LibraryItem [itemId=4917, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double14 = book6.calculateOverduePenalty();
        java.lang.String str15 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9910 + "'", int10 == 9910);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getItemType();
        book6.setIsPurchasable(false);
        items.Book book19 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean20 = book19.isRented();
        book19.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean23 = book19.isRented();
        items.Book book30 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str31 = book30.getDetails();
        book30.returnItem();
        boolean boolean33 = book30.isPurchasable();
        double double34 = book30.calculateOverduePenalty();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        java.lang.String str85 = book6.getBorrowerEmail();
        java.lang.String str86 = book6.getItemType();
        java.lang.String str87 = book6.getTitle();
        java.lang.String str88 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str31, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Book" + "'", str86, "Book");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str88, "Book: hi! by . Location: hi!. Purchasable: false");
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        items.Book book6 = new items.Book("LibraryItem [itemId=677, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=962, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1155, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        boolean boolean8 = book6.isPurchasable();
        java.lang.String str9 = book6.toString();
        double double10 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9920, itemType=Book, location=LibraryItem [itemId=677, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1155, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9920, itemType=Book, location=LibraryItem [itemId=677, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1155, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getBorrowerEmail();
        java.lang.String str10 = book6.getItemType();
        book6.setIsPurchasable(false);
        java.lang.String str13 = book6.getItemType();
        book6.setLocation("LibraryItem [itemId=6569, itemType=Book, location=LibraryItem [itemId=2183, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        items.Book book6 = new items.Book("LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=6199, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        items.Book book6 = new items.Book("LibraryItem [itemId=3186, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1365, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=3454, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1715, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = book6.getItemId();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getLocation();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9930 + "'", int7 == 9930);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=1715, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=1715, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=3186, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=3186, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.toString();
        boolean boolean51 = book6.isPurchasable();
        java.lang.String str52 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LibraryItem [itemId=9940, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str50, "LibraryItem [itemId=9940, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getLocation();
        java.lang.String str96 = book6.getPrice();
        book6.returnItem();
        java.lang.String str98 = book6.getItemType();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str95, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str96, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Book" + "'", str98, "Book");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.getPrice();
        java.lang.String str9 = book6.getDetails();
        int int10 = book6.getItemId();
        boolean boolean11 = book6.isPurchasable();
        java.lang.String str12 = book6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str9, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9955 + "'", int10 == 9955);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        java.lang.String str8 = book6.getBorrowerEmail();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.toString();
        boolean boolean11 = book6.isPurchasable();
        book6.setBorrowerEmail("LibraryItem [itemId=1593, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9956, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9956, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9956, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9956, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.returnItem();
        boolean boolean13 = book6.isRented();
        book6.setIsPurchasable(false);
        double double16 = book6.calculateOverduePenalty();
        double double17 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.getPrice();
        java.lang.String str9 = book6.getDetails();
        items.Book book16 = new items.Book("LibraryItem [itemId=904, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=933, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        java.lang.String str26 = book23.getAuthor();
        double double27 = book23.calculateOverduePenalty();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        book42.returnItem();
        java.lang.String str44 = book42.getAuthor();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        java.lang.String str63 = book60.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray71 = new items.LibraryItem[] { book42, book51, book60, book70 };
        java.util.ArrayList<items.LibraryItem> libraryItemList72 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList72, libraryItemArray71);
        boolean boolean74 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        boolean boolean75 = book23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        boolean boolean77 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str9, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str81 = book6.toString();
        double double82 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "LibraryItem [itemId=9971, itemType=Book, location=LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str81, "LibraryItem [itemId=9971, itemType=Book, location=LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        boolean boolean12 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=1834, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getPrice();
        book6.setBorrowerEmail("LibraryItem [itemId=8047, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = book6.getTitle();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9980, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9980, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        items.Book book6 = new items.Book("LibraryItem [itemId=4407, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6476, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5582, itemType=Book, location=LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2477, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        boolean boolean50 = book6.isOverdue();
        book6.setBorrowerEmail("");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        book6.setIsPurchasable(false);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        boolean boolean19 = book17.isPurchasable();
        boolean boolean20 = book17.isRented();
        java.lang.String str21 = book17.getLocation();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getItemType();
        java.lang.String str72 = book6.getPrice();
        java.lang.String str73 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9988, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9988, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Book" + "'", str71, "Book");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.getBorrowerEmail();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        items.Book book6 = new items.Book("LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=601, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=615, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isPurchasable();
        book6.setBorrowerEmail("LibraryItem [itemId=2549, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=6908, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book18 = new items.Book("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "Book", "LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book18.returnItem();
        java.lang.String str20 = book18.getDetails();
        items.Book book27 = new items.Book("", "", true, true, "", "hi!");
        book27.returnItem();
        boolean boolean29 = book27.isPurchasable();
        boolean boolean30 = book27.isRented();
        boolean boolean31 = book27.isOverdue();
        boolean boolean32 = book27.isRented();
        java.lang.String str33 = book27.toString();
        java.lang.String str34 = book27.getItemType();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: Book by LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str20, "Book: Book by LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "LibraryItem [itemId=10002, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str33, "LibraryItem [itemId=10002, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Book" + "'", str34, "Book");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getBorrowerEmail();
        java.lang.String str10 = book6.getPrice();
        boolean boolean11 = book6.isPurchasable();
        boolean boolean12 = book6.isPurchasable();
        boolean boolean13 = book6.isPurchasable();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=10013, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=10013, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int13 = book6.getItemId();
        book6.setBorrowerEmail("LibraryItem [itemId=4854, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10014 + "'", int13 == 10014);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setIsPurchasable(true);
        book6.returnItem();
        java.lang.String str10 = book6.getAuthor();
        java.util.List<items.LibraryItem> libraryItemList11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = book6.hasBorrowingPrivileges(libraryItemList11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getBorrowerEmail();
        boolean boolean10 = book6.isOverdue();
        java.lang.String str11 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str8, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.getTitle();
        java.lang.String str51 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=3856, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean54 = book6.isPurchasable();
        double double55 = book6.calculateOverduePenalty();
        java.lang.String str56 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Book" + "'", str56, "Book");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        boolean boolean11 = book6.isPurchasable();
        java.lang.String str12 = book6.getTitle();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        java.lang.String str79 = book6.toString();
        java.lang.String str80 = book6.getAuthor();
        boolean boolean81 = book6.isRented();
        java.lang.String str82 = book6.getLocation();
        java.lang.String str83 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LibraryItem [itemId=10023, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str79, "LibraryItem [itemId=10023, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=839, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean57 = book6.isOverdue();
        java.lang.String str58 = book6.getLocation();
        boolean boolean59 = book6.isOverdue();
        java.lang.String str60 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=10031, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=10031, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isRented();
        book6.setIsPurchasable(false);
        java.lang.String str13 = book6.getAuthor();
        java.lang.String str14 = book6.getBorrowerEmail();
        boolean boolean15 = book6.isPurchasable();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isRented();
        java.lang.String str54 = book6.getTitle();
        boolean boolean55 = book6.isPurchasable();
        boolean boolean56 = book6.isPurchasable();
        double double57 = book6.calculateOverduePenalty();
        java.lang.String str58 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10037 + "'", int52 == 10037);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isRented();
        java.lang.String str54 = book6.getTitle();
        book6.returnItem();
        java.lang.String str56 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10042 + "'", int52 == 10042);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Book" + "'", str56, "Book");
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        java.lang.String str11 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = book6.isRented();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10047, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10047, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = book6.getBorrowerEmail();
        java.lang.String str15 = book6.getItemType();
        java.lang.String str16 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=10048, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=10048, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book" + "'", str15, "Book");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        int int89 = book6.getItemId();
        java.lang.String str90 = book6.getBorrowerEmail();
        book6.setBorrowerEmail("LibraryItem [itemId=933, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str93 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10049 + "'", int89 == 10049);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str90, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.returnItem();
        boolean boolean13 = book6.isRented();
        book6.setIsPurchasable(false);
        double double16 = book6.calculateOverduePenalty();
        java.lang.String str17 = book6.toString();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=10059, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=10059, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean13 = book6.isPurchasable();
        java.lang.String str14 = book6.getItemType();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10060, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10060, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book" + "'", str14, "Book");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        double double11 = book6.calculateOverduePenalty();
        java.lang.String str12 = book6.getItemType();
        boolean boolean13 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10061 + "'", int10 == 10061);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        int int89 = book6.getItemId();
        boolean boolean90 = book6.isOverdue();
        java.lang.String str91 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10062 + "'", int89 == 10062);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str7 = book6.getLocation();
        items.Book book14 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str15 = book14.getDetails();
        java.lang.String str16 = book14.getTitle();
        java.lang.String str17 = book14.getDetails();
        items.Book book24 = new items.Book("", "", true, true, "", "hi!");
        book24.returnItem();
        java.lang.String str26 = book24.getAuthor();
        book24.setIsPurchasable(true);
        items.Book book35 = new items.Book("", "", true, true, "", "hi!");
        book35.returnItem();
        java.lang.String str37 = book35.getAuthor();
        java.lang.String str38 = book35.getAuthor();
        double double39 = book35.calculateOverduePenalty();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        items.Book book63 = new items.Book("", "", true, true, "", "hi!");
        book63.returnItem();
        java.lang.String str65 = book63.getAuthor();
        items.Book book72 = new items.Book("", "", true, true, "", "hi!");
        book72.returnItem();
        java.lang.String str74 = book72.getAuthor();
        java.lang.String str75 = book72.getAuthor();
        items.Book book82 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray83 = new items.LibraryItem[] { book54, book63, book72, book82 };
        java.util.ArrayList<items.LibraryItem> libraryItemList84 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList84, libraryItemArray83);
        boolean boolean86 = book46.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean87 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean88 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean89 = book14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList84);
        book6.setLocation("LibraryItem [itemId=5306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str15, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str17, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        int int14 = book6.getItemId();
        java.lang.String str15 = book6.getDetails();
        book6.returnItem();
        java.lang.String str17 = book6.toString();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10080 + "'", int14 == 10080);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: . Purchasable: false" + "'", str15, "Book: hi! by . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=10080, itemType=Book, location=, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=10080, itemType=Book, location=, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        items.Book book6 = new items.Book("LibraryItem [itemId=1605, itemType=Book, location=LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3573, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book. Purchasable: false", "");
        java.lang.String str7 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=10081, itemType=Book, location=LibraryItem [itemId=1605, itemType=Book, location=LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book. Purchasable: false, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=10081, itemType=Book, location=LibraryItem [itemId=1605, itemType=Book, location=LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book. Purchasable: false, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        items.Book book6 = new items.Book("LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "Book:  by hi!. Location: . Purchasable: true", "LibraryItem [itemId=549, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        items.Book book6 = new items.Book("LibraryItem [itemId=9014, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=9045, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4027, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.toString();
        java.lang.String str11 = book6.getLocation();
        int int12 = book6.getItemId();
        book6.returnItem();
        java.lang.String str14 = book6.getBorrowerEmail();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10084, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10084, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=10084, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=10084, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10084 + "'", int12 == 10084);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        book6.setIsPurchasable(false);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        boolean boolean19 = book17.isPurchasable();
        boolean boolean20 = book17.isRented();
        java.lang.String str21 = book17.getLocation();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getItemType();
        java.lang.String str72 = book6.getBorrowerEmail();
        boolean boolean73 = book6.isOverdue();
        double double74 = book6.calculateOverduePenalty();
        java.lang.String str75 = book6.getLocation();
        java.time.LocalDate localDate76 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate76, 5793, "LibraryItem [itemId=8994, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=10085, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=10085, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Book" + "'", str71, "Book");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getAuthor();
        java.lang.String str11 = book6.toString();
        java.lang.String str12 = book6.getLocation();
        book6.returnItem();
        java.lang.String str14 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=10101, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=10101, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        int int11 = book6.getItemId();
        java.lang.String str12 = book6.getTitle();
        double double13 = book6.calculateOverduePenalty();
        java.lang.String str14 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=3355, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = book6.getItemType();
        java.lang.String str18 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10102 + "'", int11 == 10102);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=10102, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=10102, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book" + "'", str17, "Book");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=397, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=7216, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean82 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        book6.setIsPurchasable(true);
        book6.setIsPurchasable(true);
        java.lang.Class<?> wildcardClass19 = book6.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10111, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10111, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=10111, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=10111, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getTitle();
        boolean boolean53 = book6.isPurchasable();
        boolean boolean54 = book6.isPurchasable();
        boolean boolean55 = book6.isPurchasable();
        java.lang.String str56 = book6.getTitle();
        java.lang.String str57 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=8704, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=10112, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=10112, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        java.lang.String str60 = book6.getLocation();
        book6.setIsPurchasable(true);
        java.lang.Class<?> wildcardClass63 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=2399, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        java.lang.String str12 = book6.getLocation();
        java.lang.Class<?> wildcardClass13 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=2399, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=2399, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        items.Book book6 = new items.Book("LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book:  by hi!. Location: . Purchasable: true", true, false, "Book: hi! by . Location: hi!. Purchasable: false", "LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getLocation();
        book6.setBorrowerEmail("LibraryItem [itemId=4776, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getDetails();
        boolean boolean12 = book6.isOverdue();
        book6.setBorrowerEmail("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str11, "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        java.lang.String str11 = book6.getBorrowerEmail();
        java.lang.String str12 = book6.toString();
        items.Book book19 = new items.Book("LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1727, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        java.lang.String str20 = book19.getLocation();
        items.Book book27 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str28 = book27.getDetails();
        book27.returnItem();
        boolean boolean30 = book27.isPurchasable();
        double double31 = book27.calculateOverduePenalty();
        items.Book book38 = new items.Book("", "", true, true, "", "hi!");
        book38.returnItem();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        java.lang.String str67 = book64.getAuthor();
        items.Book book74 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book46, book55, book64, book74 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean80 = book19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean81 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        book6.setBorrowerEmail("Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10126, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10126, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=10126, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=10126, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str28, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        items.Book book6 = new items.Book("LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book13.setIsPurchasable(false);
        double double16 = book13.calculateOverduePenalty();
        book13.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book25 = new items.Book("hi!", "", true, false, "hi!", "");
        book25.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book34 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean35 = book34.isOverdue();
        items.Book book42 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean43 = book42.isOverdue();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        book76.returnItem();
        java.lang.String str78 = book76.getAuthor();
        java.lang.String str79 = book76.getAuthor();
        items.Book book86 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray87 = new items.LibraryItem[] { book58, book67, book76, book86 };
        java.util.ArrayList<items.LibraryItem> libraryItemList88 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList88, libraryItemArray87);
        boolean boolean90 = book50.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { book42, book50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = book25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = book13.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        java.lang.Class<?> wildcardClass98 = book6.getClass();
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        double double50 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.toString();
        boolean boolean51 = book6.isPurchasable();
        int int52 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LibraryItem [itemId=10149, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str50, "LibraryItem [itemId=10149, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10149 + "'", int52 == 10149);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getLocation();
        java.lang.String str10 = book6.getPrice();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=3360, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str11, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=10154, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=10154, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        boolean boolean89 = book6.isPurchasable();
        java.lang.String str90 = book6.getItemType();
        java.lang.String str91 = book6.toString();
        java.lang.String str92 = book6.getTitle();
        java.lang.String str93 = book6.getPrice();
        book6.setBorrowerEmail("");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book" + "'", str90, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "LibraryItem [itemId=10155, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str91, "LibraryItem [itemId=10155, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        items.Book book6 = new items.Book("LibraryItem [itemId=3698, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2669, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=4191, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2183, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        java.lang.String str8 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=4191, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=4191, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = book6.isOverdue();
        java.lang.String str48 = book6.getDetails();
        java.lang.String str49 = book6.getPrice();
        boolean boolean50 = book6.isPurchasable();
        java.lang.String str51 = book6.getBorrowerEmail();
        boolean boolean52 = book6.isOverdue();
        java.lang.String str53 = book6.toString();
        book6.setLocation("LibraryItem [itemId=4027, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str48, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=10165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=10165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        int int50 = book6.getItemId();
        java.lang.String str51 = book6.getLocation();
        java.time.LocalDate localDate52 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate52, 2181, "LibraryItem [itemId=5287, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10170 + "'", int50 == 10170);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getItemType();
        java.lang.String str14 = book6.getAuthor();
        java.lang.String str15 = book6.getAuthor();
        boolean boolean16 = book6.isOverdue();
        boolean boolean17 = book6.isPurchasable();
        java.lang.String str18 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10175, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10175, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=10175, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=10175, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.getPrice();
        java.lang.String str49 = book6.getLocation();
        boolean boolean50 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        boolean boolean89 = book6.isPurchasable();
        java.lang.String str90 = book6.getItemType();
        java.lang.String str91 = book6.toString();
        java.lang.String str92 = book6.getLocation();
        java.lang.String str93 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=1623, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book" + "'", str90, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "LibraryItem [itemId=10181, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str91, "LibraryItem [itemId=10181, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        items.Book book6 = new items.Book("LibraryItem [itemId=4539, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6645, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=Book, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=5167, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3858, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        java.lang.String str9 = book6.getBorrowerEmail();
        java.lang.String str10 = book6.getItemType();
        double double11 = book6.calculateOverduePenalty();
        int int12 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10191 + "'", int12 == 10191);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getTitle();
        book6.returnItem();
        java.lang.String str13 = book6.getDetails();
        boolean boolean14 = book6.isPurchasable();
        java.lang.String str15 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str13, "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getBorrowerEmail();
        book6.setLocation("Book: LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        double double13 = book6.calculateOverduePenalty();
        java.lang.String str14 = book6.getPrice();
        book6.setBorrowerEmail("LibraryItem [itemId=4831, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        boolean boolean12 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = book6.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=10194, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=10194, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        items.Book book6 = new items.Book("LibraryItem [itemId=4473, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3931, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1237, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        book6.setBorrowerEmail("LibraryItem [itemId=2516, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        book6.setIsPurchasable(true);
        boolean boolean17 = book6.isRented();
        java.lang.String str18 = book6.getItemType();
        java.lang.String str19 = book6.toString();
        boolean boolean20 = book6.isOverdue();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10196, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10196, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=10196, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=10196, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book" + "'", str18, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=10196, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=10196, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        java.lang.String str57 = book6.getItemType();
        java.lang.String str58 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=10197, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=10197, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Book" + "'", str57, "Book");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean13 = book6.isPurchasable();
        int int14 = book6.getItemId();
        java.lang.String str15 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10202, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10202, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10202 + "'", int14 == 10202);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        java.lang.String str53 = book6.toString();
        boolean boolean54 = book6.isPurchasable();
        java.lang.String str55 = book6.getItemType();
        boolean boolean56 = book6.isOverdue();
        boolean boolean57 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=10203, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=10203, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=10203, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=10203, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book" + "'", str55, "Book");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getItemType();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10208 + "'", int10 == 10208);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book" + "'", str11, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=10208, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=10208, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        items.Book book6 = new items.Book("LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book:  by hi!. Location: . Purchasable: true", true, false, "Book: hi! by . Location: hi!. Purchasable: false", "LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=1391, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getBorrowerEmail();
        double double10 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=1391, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=1391, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getItemType();
        book6.setLocation("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book" + "'", str7, "Book");
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        java.lang.String str78 = book6.getItemType();
        java.lang.String str79 = book6.getLocation();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Book" + "'", str78, "Book");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        boolean boolean57 = book6.isRented();
        book6.returnItem();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=10219, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=10219, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getAuthor();
        java.lang.String str12 = book6.getLocation();
        java.lang.String str13 = book6.getLocation();
        boolean boolean14 = book6.isPurchasable();
        book6.setIsPurchasable(false);
        java.lang.String str17 = book6.getPrice();
        book6.setLocation("");
        java.lang.String str20 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        items.Book book6 = new items.Book("LibraryItem [itemId=1469, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=911, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1978, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = book6.getItemId();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10225 + "'", int7 == 10225);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        items.Book book6 = new items.Book("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "Book", "LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        java.lang.String str8 = book6.toString();
        book6.setLocation("LibraryItem [itemId=6931, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=10226, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=Book, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=10226, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=Book, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isPurchasable();
        java.lang.String str11 = book6.getPrice();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        java.lang.String str20 = book18.getAuthor();
        java.lang.String str21 = book18.getAuthor();
        double double22 = book18.calculateOverduePenalty();
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        java.lang.String str58 = book55.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { book37, book46, book55, book65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=3925, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str62 = book6.getPrice();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int13 = book6.getItemId();
        boolean boolean14 = book6.isOverdue();
        items.Book book21 = new items.Book("Book:  by hi!. Location: . Purchasable: true", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str22 = book21.getLocation();
        java.lang.String str23 = book21.getAuthor();
        java.lang.String str24 = book21.toString();
        java.lang.String str25 = book21.getDetails();
        items.Book book32 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str33 = book32.getDetails();
        book32.returnItem();
        boolean boolean35 = book32.isPurchasable();
        double double36 = book32.calculateOverduePenalty();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        book69.returnItem();
        java.lang.String str71 = book69.getAuthor();
        java.lang.String str72 = book69.getAuthor();
        items.Book book79 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { book51, book60, book69, book79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = book43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = book21.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10240 + "'", int13 == 10240);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str22, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str23, "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "LibraryItem [itemId=10241, itemType=Book, location=Book:  by hi!. Location: . Purchasable: true, purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str24, "LibraryItem [itemId=10241, itemType=Book, location=Book:  by hi!. Location: . Purchasable: true, purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true" + "'", str25, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str33, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        int int14 = book6.getItemId();
        java.lang.String str15 = book6.getDetails();
        boolean boolean16 = book6.isRented();
        java.lang.String str17 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10248 + "'", int14 == 10248);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: . Purchasable: false" + "'", str15, "Book: hi! by . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str17, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getAuthor();
        book6.setBorrowerEmail("LibraryItem [itemId=6492, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book13 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = book13.isRented();
        book13.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = book13.isRented();
        items.Book book24 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str25 = book24.getDetails();
        book24.returnItem();
        boolean boolean27 = book24.isPurchasable();
        double double28 = book24.calculateOverduePenalty();
        items.Book book35 = new items.Book("", "", true, true, "", "hi!");
        book35.returnItem();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        java.lang.String str64 = book61.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book43, book52, book61, book71 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean78 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList73);
        int int79 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str25, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10250 + "'", int79 == 10250);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str7 = book6.getLocation();
        java.lang.String str8 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isRented();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isOverdue();
        int int78 = book6.getItemId();
        boolean boolean79 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10260 + "'", int78 == 10260);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        int int12 = book6.getItemId();
        java.lang.String str13 = book6.getBorrowerEmail();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10268, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10268, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10268 + "'", int12 == 10268);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("");
        java.lang.String str13 = book6.getItemType();
        book6.returnItem();
        java.lang.String str15 = book6.getLocation();
        book6.setIsPurchasable(true);
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10269, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10269, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean81 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        items.Book book17 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str18 = book17.getDetails();
        book17.returnItem();
        boolean boolean20 = book17.isPurchasable();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getAuthor();
        int int72 = book6.getItemId();
        java.lang.String str73 = book6.toString();
        boolean boolean74 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str18, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str71, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10278 + "'", int72 == 10278);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "LibraryItem [itemId=10278, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str73, "LibraryItem [itemId=10278, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getTitle();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        int int14 = book6.getItemId();
        java.lang.String str15 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=7851, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10286 + "'", int14 == 10286);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: . Purchasable: false" + "'", str15, "Book: hi! by . Location: . Purchasable: false");
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getLocation();
        java.lang.String str10 = book6.getBorrowerEmail();
        java.lang.String str11 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getPrice();
        java.lang.String str13 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        items.Book book17 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str18 = book17.getDetails();
        java.lang.String str19 = book17.getDetails();
        boolean boolean20 = book17.isOverdue();
        items.Book book27 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean28 = book27.isOverdue();
        items.Book book35 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean36 = book35.isOverdue();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        book69.returnItem();
        java.lang.String str71 = book69.getAuthor();
        java.lang.String str72 = book69.getAuthor();
        items.Book book79 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { book51, book60, book69, book79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = book43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book35, book43 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = book17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        book6.setIsPurchasable(true);
        java.lang.String str92 = book6.getTitle();
        book6.setIsPurchasable(true);
        java.lang.String str95 = book6.getItemType();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10289, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10289, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str18, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Book" + "'", str95, "Book");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        boolean boolean9 = book6.isPurchasable();
        java.lang.String str10 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book23 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str24 = book23.getDetails();
        java.lang.String str25 = book23.getDetails();
        boolean boolean26 = book23.isOverdue();
        items.Book book33 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean34 = book33.isOverdue();
        items.Book book41 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean42 = book41.isOverdue();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        book75.returnItem();
        java.lang.String str77 = book75.getAuthor();
        java.lang.String str78 = book75.getAuthor();
        items.Book book85 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { book57, book66, book75, book85 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = book49.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        items.LibraryItem[] libraryItemArray90 = new items.LibraryItem[] { book41, book49 };
        java.util.ArrayList<items.LibraryItem> libraryItemList91 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList91, libraryItemArray90);
        boolean boolean93 = book33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean94 = book23.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean95 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        java.lang.String str96 = book6.getAuthor();
        java.lang.String str97 = book6.getItemType();
        boolean boolean98 = book6.isOverdue();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=10299, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=10299, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=10299, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=10299, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str24, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str25, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(libraryItemArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Book" + "'", str97, "Book");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        items.Book book6 = new items.Book("Book: hi! by . Location: LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", "LibraryItem [itemId=7059, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=6719, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        items.Book book6 = new items.Book("LibraryItem [itemId=1077, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1114, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1868, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3231, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        java.lang.String str8 = book6.getPrice();
        book6.setLocation("LibraryItem [itemId=8130, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=3231, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=3231, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getItemType();
        java.lang.String str11 = book6.getDetails();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=10310, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=10310, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        items.Book book6 = new items.Book("Book:  by hi!. Location: . Purchasable: true", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        int int8 = book6.getItemId();
        boolean boolean9 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true" + "'", str7, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10311 + "'", int8 == 10311);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getLocation();
        java.lang.String str10 = book6.getPrice();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getItemType();
        book6.setLocation("LibraryItem [itemId=9008, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str11, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
    }
}
