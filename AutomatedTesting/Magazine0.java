package AutomatedTesting;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Magazine0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate8, 100, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.Class<?> wildcardClass7 = magazine6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        java.lang.String str9 = magazine6.getPrice();
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate10, (int) (byte) 1, "Magazine");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        java.util.List<items.LibraryItem> libraryItemList10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = magazine6.hasBorrowingPrivileges(libraryItemList10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=44, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=44, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass56 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        java.lang.String str9 = magazine6.getPrice();
        java.lang.Class<?> wildcardClass10 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate8, (int) '4', "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate11, (int) 'a', "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean64 = magazine6.isPurchasable();
        java.lang.Class<?> wildcardClass65 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass7 = magazine6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate11, 100, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getItemType();
        magazine6.setLocation("");
        java.lang.Class<?> wildcardClass13 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine" + "'", str10, "Magazine");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate10, (int) (byte) -1, "Magazine");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getPrice();
        java.util.List<items.LibraryItem> libraryItemList14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = magazine6.hasExceededBorrowingLimit(libraryItemList14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 238, "LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        java.lang.Class<?> wildcardClass13 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("Magazine: . Location: . Purchasable: false");
        java.lang.Class<?> wildcardClass13 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("");
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate13, (int) '4', "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.String str56 = magazine6.getPrice();
        java.time.LocalDate localDate57 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate57, (int) '4', "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.String str56 = magazine6.getPrice();
        java.time.LocalDate localDate57 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate57, 268, "LibraryItem [itemId=341, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        java.lang.String str11 = magazine6.getPublisher();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 234, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 615 + "'", int8 == 615);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        magazine6.setLocation("");
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate13, (int) 'a', "Magazine");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 623 + "'", int8 == 623);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.Class<?> wildcardClass10 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.Class<?> wildcardClass10 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 652 + "'", int8 == 652);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("");
        java.lang.Class<?> wildcardClass13 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean10 = magazine6.isOverdue();
        java.lang.Class<?> wildcardClass11 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str16 = magazine15.getPublisher();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str24 = magazine23.getTitle();
        java.lang.String str25 = magazine23.getTitle();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getPublisher();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        double double57 = magazine55.calculateOverduePenalty();
        items.Magazine magazine64 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { magazine39, magazine47, magazine55, magazine64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = magazine32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = magazine15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.Class<?> wildcardClass72 = libraryItemList66.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        items.Magazine magazine6 = new items.Magazine("hi!", "Magazine: . Location: . Purchasable: false", false, true, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate7, 422, "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        java.lang.String str55 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("Magazine: . Location: . Purchasable: false");
        java.util.List<items.LibraryItem> libraryItemList58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = magazine6.hasBorrowingPrivileges(libraryItemList58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        magazine6.returnItem();
        java.lang.Class<?> wildcardClass57 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        items.Magazine magazine14 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str15 = magazine14.getTitle();
        java.lang.String str16 = magazine14.getTitle();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        items.Magazine magazine46 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str47 = magazine46.getPublisher();
        double double48 = magazine46.calculateOverduePenalty();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray56 = new items.LibraryItem[] { magazine30, magazine38, magazine46, magazine55 };
        java.util.ArrayList<items.LibraryItem> libraryItemList57 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList57, libraryItemArray56);
        boolean boolean59 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean60 = magazine14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean61 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList57);
        java.lang.Class<?> wildcardClass62 = libraryItemList57.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        java.lang.String str11 = magazine6.getPublisher();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 785 + "'", int8 == 785);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        java.lang.String str55 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getTitle();
        magazine6.returnItem();
        double double69 = magazine6.calculateOverduePenalty();
        java.time.LocalDate localDate70 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate70, (int) '#', "LibraryItem [itemId=606, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPublisher();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str58 = magazine57.getPublisher();
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str66 = magazine65.getPublisher();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str74 = magazine73.getPublisher();
        double double75 = magazine73.calculateOverduePenalty();
        items.Magazine magazine82 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray83 = new items.LibraryItem[] { magazine57, magazine65, magazine73, magazine82 };
        java.util.ArrayList<items.LibraryItem> libraryItemList84 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList84, libraryItemArray83);
        boolean boolean86 = magazine50.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean87 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        java.lang.Class<?> wildcardClass88 = libraryItemList84.getClass();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str16 = magazine15.getPublisher();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str24 = magazine23.getTitle();
        java.lang.String str25 = magazine23.getTitle();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getPublisher();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        double double57 = magazine55.calculateOverduePenalty();
        items.Magazine magazine64 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { magazine39, magazine47, magazine55, magazine64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = magazine32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = magazine15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.time.LocalDate localDate72 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate72, (int) (short) -1, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.setLocation("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate9, (int) '#', "LibraryItem [itemId=606, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.getLocation();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 857 + "'", int8 == 857);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        items.Magazine magazine6 = new items.Magazine("Magazine", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Magazine", "Magazine");
        java.lang.String str7 = magazine6.getDetails();
        java.lang.String str8 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Magazine: Magazine. Location: Magazine. Purchasable: true" + "'", str7, "Magazine: Magazine. Location: Magazine. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Magazine" + "'", str8, "Magazine");
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        boolean boolean13 = magazine6.isOverdue();
        items.Magazine magazine20 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str21 = magazine20.getTitle();
        java.lang.String str22 = magazine20.getTitle();
        magazine20.setIsPurchasable(true);
        boolean boolean25 = magazine20.isOverdue();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        boolean boolean34 = magazine32.isRented();
        items.Magazine magazine41 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str42 = magazine41.getPublisher();
        items.Magazine magazine49 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str50 = magazine49.getTitle();
        java.lang.String str51 = magazine49.getTitle();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str66 = magazine65.getPublisher();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str74 = magazine73.getPublisher();
        items.Magazine magazine81 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str82 = magazine81.getPublisher();
        double double83 = magazine81.calculateOverduePenalty();
        items.Magazine magazine90 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { magazine65, magazine73, magazine81, magazine90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = magazine58.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = magazine49.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = magazine41.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = magazine32.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean98 = magazine20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean99 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        double double11 = magazine6.calculateOverduePenalty();
        java.lang.String str12 = magazine6.getAuthor();
        java.lang.Class<?> wildcardClass13 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 934 + "'", int9 == 934);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPublisher();
        java.lang.String str44 = magazine6.getDetails();
        java.time.LocalDate localDate45 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate45, 148, "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str44, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        int int10 = magazine6.getItemId();
        java.lang.String str11 = magazine6.getLocation();
        java.lang.String str12 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 979 + "'", int8 == 979);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 979 + "'", int10 == 979);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=979, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=979, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.toString();
        boolean boolean13 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=996, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=996, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "hi!", false, false, "LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        boolean boolean7 = magazine6.isRented();
        magazine6.setBorrowerEmail("LibraryItem [itemId=997, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        java.lang.String str9 = magazine6.getLocation();
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate10, (int) '#', "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        magazine6.setBorrowerEmail("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean12 = magazine6.isRented();
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate13, (int) (short) -1, "LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=341, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=341, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate7, 422, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate9, 816, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getPublisher();
        java.lang.String str10 = magazine6.getDetails();
        java.lang.Class<?> wildcardClass11 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str10, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str16 = magazine15.getPublisher();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str24 = magazine23.getTitle();
        java.lang.String str25 = magazine23.getTitle();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getPublisher();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        double double57 = magazine55.calculateOverduePenalty();
        items.Magazine magazine64 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { magazine39, magazine47, magazine55, magazine64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = magazine32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = magazine15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        double double72 = magazine6.calculateOverduePenalty();
        java.time.LocalDate localDate73 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate73, 185, "LibraryItem [itemId=1103, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        boolean boolean10 = magazine6.isOverdue();
        boolean boolean11 = magazine6.isPurchasable();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 1055, "LibraryItem [itemId=980, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1359 + "'", int8 == 1359);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=1359, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=1359, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        items.Magazine magazine6 = new items.Magazine("Magazine", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Magazine", "Magazine");
        magazine6.returnItem();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate8, 845, "LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        java.lang.String str55 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("Magazine: . Location: . Purchasable: false");
        java.lang.Class<?> wildcardClass58 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        java.lang.String str9 = magazine6.getPrice();
        boolean boolean10 = magazine6.isRented();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate11, 147, "LibraryItem [itemId=854, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        items.Magazine magazine6 = new items.Magazine("", "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        java.lang.Class<?> wildcardClass7 = magazine6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        java.lang.String str15 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPrice();
        java.lang.String str44 = magazine6.getPrice();
        java.lang.String str45 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        boolean boolean10 = magazine6.isOverdue();
        boolean boolean11 = magazine6.isPurchasable();
        int int12 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1437 + "'", int12 == 1437);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isPurchasable();
        boolean boolean12 = magazine6.isPurchasable();
        items.Magazine magazine19 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str20 = magazine19.getTitle();
        int int21 = magazine19.getItemId();
        java.lang.String str22 = magazine19.getPrice();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getTitle();
        int int31 = magazine29.getItemId();
        magazine29.returnItem();
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getTitle();
        java.lang.String str41 = magazine39.getTitle();
        boolean boolean42 = magazine39.isOverdue();
        items.Magazine magazine49 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str50 = magazine49.getTitle();
        java.lang.String str51 = magazine49.getTitle();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str66 = magazine65.getPublisher();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str74 = magazine73.getPublisher();
        items.Magazine magazine81 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str82 = magazine81.getPublisher();
        double double83 = magazine81.calculateOverduePenalty();
        items.Magazine magazine90 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { magazine65, magazine73, magazine81, magazine90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = magazine58.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = magazine49.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = magazine39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = magazine29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean98 = magazine19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean99 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1455 + "'", int21 == 1455);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1456 + "'", int31 == 1456);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getAuthor();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 689, "LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        java.lang.String str13 = magazine6.getLocation();
        java.lang.String str14 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1547 + "'", int8 == 1547);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=1547, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=1547, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isPurchasable();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, (int) '#', "LibraryItem [itemId=453, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        magazine6.setBorrowerEmail("LibraryItem [itemId=854, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str71 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getPublisher();
        boolean boolean20 = magazine18.isRented();
        items.Magazine magazine27 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str28 = magazine27.getPublisher();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getTitle();
        java.lang.String str37 = magazine35.getTitle();
        items.Magazine magazine44 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str52 = magazine51.getPublisher();
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        double double69 = magazine67.calculateOverduePenalty();
        items.Magazine magazine76 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { magazine51, magazine59, magazine67, magazine76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = magazine44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = magazine27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean83 = magazine18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean84 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        java.lang.Class<?> wildcardClass85 = libraryItemList78.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.returnItem();
        double double10 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1653 + "'", int8 == 1653);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.Class<?> wildcardClass56 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate8, 1112, "LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPublisher();
        double double44 = magazine6.calculateOverduePenalty();
        java.lang.String str45 = magazine6.getItemType();
        magazine6.returnItem();
        java.lang.String str47 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Magazine" + "'", str45, "Magazine");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        int int65 = magazine6.getItemId();
        java.lang.String str66 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1705 + "'", int65 == 1705);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        boolean boolean56 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("hi!");
        boolean boolean59 = magazine6.isPurchasable();
        java.time.LocalDate localDate60 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate60, 957, "LibraryItem [itemId=1409, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPrice();
        java.lang.String str44 = magazine6.getLocation();
        java.time.LocalDate localDate45 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate45, 1, "LibraryItem [itemId=1056, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getPrice();
        magazine6.returnItem();
        java.lang.String str12 = magazine6.getItemType();
        double double13 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1751 + "'", int9 == 1751);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getDetails();
        boolean boolean12 = magazine6.isOverdue();
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate13, 1253, "Magazine: . Location: Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false. Purchasable: false");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str11, "Magazine: . Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("Magazine: . Location: . Purchasable: false");
        magazine6.setLocation("Magazine");
        java.lang.String str15 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=1773, itemType=Magazine, location=Magazine, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=1773, itemType=Magazine, location=Magazine, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1781 + "'", int8 == 1781);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        double double10 = magazine6.calculateOverduePenalty();
        magazine6.setBorrowerEmail("hi!");
        boolean boolean13 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1782 + "'", int9 == 1782);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        int int65 = magazine6.getItemId();
        java.lang.String str66 = magazine6.getBorrowerEmail();
        java.lang.String str67 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1793 + "'", int65 == 1793);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        items.Magazine magazine6 = new items.Magazine("Magazine", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Magazine", "Magazine");
        magazine6.returnItem();
        java.lang.String str8 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Magazine: Magazine. Location: Magazine. Purchasable: true" + "'", str8, "Magazine: Magazine. Location: Magazine. Purchasable: true");
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getPrice();
        double double11 = magazine6.calculateOverduePenalty();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getDetails();
        double double8 = magazine6.calculateOverduePenalty();
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate9, 1055, "LibraryItem [itemId=1391, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        items.Magazine magazine6 = new items.Magazine("Magazine: Magazine. Location: Magazine. Purchasable: true", "Magazine: . Location: Magazine: Magazine. Location: Magazine. Purchasable: true. Purchasable: false", true, true, "LibraryItem [itemId=453, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean10 = magazine6.isPurchasable();
        int int11 = magazine6.getItemId();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1845 + "'", int11 == 1845);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        java.lang.String str11 = magazine6.getPrice();
        java.lang.String str12 = magazine6.getAuthor();
        items.Magazine magazine19 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str20 = magazine19.getTitle();
        int int21 = magazine19.getItemId();
        magazine19.setBorrowerEmail("");
        java.lang.String str24 = magazine19.getPublisher();
        double double25 = magazine19.calculateOverduePenalty();
        magazine19.setLocation("Magazine: . Location: . Purchasable: false");
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getTitle();
        java.lang.String str36 = magazine34.getTitle();
        java.lang.String str37 = magazine34.toString();
        magazine34.setIsPurchasable(false);
        items.Magazine magazine46 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str47 = magazine46.getPublisher();
        double double48 = magazine46.calculateOverduePenalty();
        int int49 = magazine46.getItemId();
        boolean boolean50 = magazine46.isRented();
        double double51 = magazine46.calculateOverduePenalty();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str66 = magazine65.getPublisher();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str74 = magazine73.getPublisher();
        items.Magazine magazine81 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str82 = magazine81.getPublisher();
        double double83 = magazine81.calculateOverduePenalty();
        items.Magazine magazine90 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { magazine65, magazine73, magazine81, magazine90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = magazine58.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = magazine46.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = magazine34.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = magazine19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean98 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1846 + "'", int9 == 1846);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1847 + "'", int21 == 1847);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=1848, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=1848, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1849 + "'", int49 == 1849);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPrice();
        boolean boolean44 = magazine6.isOverdue();
        java.time.LocalDate localDate45 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate45, 77, "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getDetails();
        magazine6.setLocation("Magazine");
        java.lang.Class<?> wildcardClass70 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str67, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getPrice();
        java.lang.Class<?> wildcardClass11 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1868 + "'", int9 == 1868);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        boolean boolean43 = magazine6.isPurchasable();
        java.lang.String str44 = magazine6.getLocation();
        magazine6.setLocation("LibraryItem [itemId=1391, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        boolean boolean67 = magazine6.isRented();
        java.lang.String str68 = magazine6.getDetails();
        int int69 = magazine6.getItemId();
        java.lang.String str70 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str68, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1894 + "'", int69 == 1894);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str70, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        java.lang.String str9 = magazine6.getLocation();
        java.lang.String str10 = magazine6.getDetails();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate11, 1803, "LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str10, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getPublisher();
        magazine6.setLocation("Magazine");
        java.lang.String str14 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Magazine" + "'", str14, "Magazine");
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.util.List<items.LibraryItem> libraryItemList56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = magazine6.hasExceededBorrowingLimit(libraryItemList56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getPrice();
        java.lang.String str11 = magazine6.getLocation();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        items.Magazine magazine19 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str20 = magazine19.getTitle();
        int int21 = magazine19.getItemId();
        magazine19.setBorrowerEmail("");
        java.lang.String str24 = magazine19.getPublisher();
        double double25 = magazine19.calculateOverduePenalty();
        magazine19.setLocation("Magazine: . Location: . Purchasable: false");
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getTitle();
        java.lang.String str36 = magazine34.getTitle();
        java.lang.String str37 = magazine34.toString();
        magazine34.setIsPurchasable(false);
        items.Magazine magazine46 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str47 = magazine46.getPublisher();
        double double48 = magazine46.calculateOverduePenalty();
        int int49 = magazine46.getItemId();
        boolean boolean50 = magazine46.isRented();
        double double51 = magazine46.calculateOverduePenalty();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str66 = magazine65.getPublisher();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str74 = magazine73.getPublisher();
        items.Magazine magazine81 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str82 = magazine81.getPublisher();
        double double83 = magazine81.calculateOverduePenalty();
        items.Magazine magazine90 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { magazine65, magazine73, magazine81, magazine90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = magazine58.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = magazine46.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = magazine34.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = magazine19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean98 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        java.lang.String str99 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1985 + "'", int21 == 1985);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=1986, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=1986, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1987 + "'", int49 == 1987);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "hi!" + "'", str99, "hi!");
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        magazine6.returnItem();
        int int67 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2011 + "'", int67 == 2011);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        magazine6.setLocation("LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        items.Magazine magazine14 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str15 = magazine14.getTitle();
        java.lang.String str16 = magazine14.getTitle();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        items.Magazine magazine46 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str47 = magazine46.getPublisher();
        double double48 = magazine46.calculateOverduePenalty();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray56 = new items.LibraryItem[] { magazine30, magazine38, magazine46, magazine55 };
        java.util.ArrayList<items.LibraryItem> libraryItemList57 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList57, libraryItemArray56);
        boolean boolean59 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean60 = magazine14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean61 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList57);
        java.lang.String str62 = magazine6.getItemType();
        java.lang.String str63 = magazine6.toString();
        boolean boolean64 = magazine6.isRented();
        java.lang.Class<?> wildcardClass65 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Magazine" + "'", str62, "Magazine");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "LibraryItem [itemId=2038, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str63, "LibraryItem [itemId=2038, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getPrice();
        magazine6.returnItem();
        java.lang.String str12 = magazine6.getItemType();
        java.lang.String str13 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2084 + "'", int9 == 2084);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        java.lang.String str13 = magazine6.getLocation();
        boolean boolean14 = magazine6.isOverdue();
        java.lang.String str15 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2157 + "'", int8 == 2157);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.returnItem();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        boolean boolean19 = magazine16.isOverdue();
        items.Magazine magazine26 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str27 = magazine26.getTitle();
        java.lang.String str28 = magazine26.getTitle();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getPublisher();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        double double60 = magazine58.calculateOverduePenalty();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { magazine42, magazine50, magazine58, magazine67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean72 = magazine26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean73 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean74 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        magazine6.setLocation("LibraryItem [itemId=1493, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2159 + "'", int8 == 2159);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        magazine6.returnItem();
        java.lang.String str67 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str67, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.getLocation();
        int int12 = magazine6.getItemId();
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate13, 185, "LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2212 + "'", int8 == 2212);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2212 + "'", int12 == 2212);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getLocation();
        boolean boolean11 = magazine6.isPurchasable();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2222 + "'", int8 == 2222);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPrice();
        java.lang.String str44 = magazine6.getLocation();
        java.lang.String str45 = magazine6.toString();
        java.time.LocalDate localDate46 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate46, 1400, "LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "LibraryItem [itemId=2251, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str45, "LibraryItem [itemId=2251, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getItemType();
        magazine6.setLocation("");
        int int13 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine" + "'", str10, "Magazine");
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2256 + "'", int13 == 2256);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        magazine6.setBorrowerEmail("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass69 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isPurchasable();
        java.lang.String str55 = magazine6.getPrice();
        java.time.LocalDate localDate56 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate56, 1927, "Magazine: Magazine. Location: Magazine. Purchasable: true");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        double double56 = magazine6.calculateOverduePenalty();
        boolean boolean57 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getPublisher();
        magazine6.setLocation("Magazine");
        java.lang.String str14 = magazine6.getPrice();
        java.lang.String str15 = magazine6.getTitle();
        int int16 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2342 + "'", int16 == 2342);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.setLocation("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getBorrowerEmail();
        magazine6.setIsPurchasable(false);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2343 + "'", int9 == 2343);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        double double12 = magazine6.calculateOverduePenalty();
        boolean boolean13 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        java.lang.String str11 = magazine6.getPublisher();
        double double12 = magazine6.calculateOverduePenalty();
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        java.lang.String str15 = magazine6.getItemType();
        int int16 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2374 + "'", int8 == 2374);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Magazine" + "'", str15, "Magazine");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2374 + "'", int16 == 2374);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str16 = magazine15.getPublisher();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str24 = magazine23.getTitle();
        java.lang.String str25 = magazine23.getTitle();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getPublisher();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        double double57 = magazine55.calculateOverduePenalty();
        items.Magazine magazine64 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { magazine39, magazine47, magazine55, magazine64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = magazine32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = magazine15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        double double72 = magazine6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass73 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getPublisher();
        magazine6.setLocation("LibraryItem [itemId=2141, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2394 + "'", int8 == 2394);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.String str56 = magazine6.getPrice();
        boolean boolean57 = magazine6.isPurchasable();
        java.lang.String str58 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        boolean boolean43 = magazine6.isOverdue();
        java.lang.String str44 = magazine6.getPrice();
        java.lang.Class<?> wildcardClass45 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getTitle();
        java.lang.String str67 = magazine6.toString();
        magazine6.setIsPurchasable(false);
        java.lang.String str70 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "LibraryItem [itemId=2451, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str67, "LibraryItem [itemId=2451, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Magazine" + "'", str70, "Magazine");
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean10 = magazine6.isPurchasable();
        int int11 = magazine6.getItemId();
        java.lang.String str12 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2468 + "'", int11 == 2468);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        items.Magazine magazine17 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine24 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str25 = magazine24.getPublisher();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        double double42 = magazine40.calculateOverduePenalty();
        items.Magazine magazine49 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray50 = new items.LibraryItem[] { magazine24, magazine32, magazine40, magazine49 };
        java.util.ArrayList<items.LibraryItem> libraryItemList51 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList51, libraryItemArray50);
        boolean boolean53 = magazine17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList51);
        boolean boolean54 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList51);
        magazine6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=2305, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.returnItem();
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.setLocation("LibraryItem [itemId=1587, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Magazine magazine20 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str21 = magazine20.getPublisher();
        java.lang.String str22 = magazine20.getBorrowerEmail();
        magazine20.setIsPurchasable(true);
        items.Magazine magazine31 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str32 = magazine31.getPublisher();
        java.lang.String str33 = magazine31.getBorrowerEmail();
        java.lang.String str34 = magazine31.getPrice();
        items.Magazine magazine41 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str42 = magazine41.getPublisher();
        items.Magazine magazine49 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str50 = magazine49.getTitle();
        java.lang.String str51 = magazine49.getTitle();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str66 = magazine65.getPublisher();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str74 = magazine73.getPublisher();
        items.Magazine magazine81 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str82 = magazine81.getPublisher();
        double double83 = magazine81.calculateOverduePenalty();
        items.Magazine magazine90 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { magazine65, magazine73, magazine81, magazine90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = magazine58.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = magazine49.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = magazine41.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = magazine31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean98 = magazine20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean99 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2522 + "'", int8 == 2522);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        java.lang.String str11 = magazine6.getPublisher();
        double double12 = magazine6.calculateOverduePenalty();
        double double13 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2540 + "'", int8 == 2540);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1502, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2496, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1888, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getPrice();
        java.lang.String str14 = magazine6.getAuthor();
        java.lang.String str15 = magazine6.getPublisher();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2215, itemType=Magazine, location=LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getTitle();
        magazine6.setBorrowerEmail("Magazine: . Location: . Purchasable: false");
        magazine6.setBorrowerEmail("LibraryItem [itemId=1203, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str71 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getBorrowerEmail();
        java.lang.String str67 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.returnItem();
        java.lang.String str10 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2681 + "'", int8 == 2681);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getPublisher();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.Class<?> wildcardClass10 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setLocation("Magazine: Magazine. Location: Magazine. Purchasable: true");
        java.lang.String str13 = magazine6.getBorrowerEmail();
        java.lang.String str14 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getTitle();
        java.lang.String str67 = magazine6.toString();
        magazine6.setLocation("LibraryItem [itemId=1765, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str70 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "LibraryItem [itemId=2787, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str67, "LibraryItem [itemId=2787, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getDetails();
        java.lang.String str13 = magazine6.getPublisher();
        int int14 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str12, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2795 + "'", int14 == 2795);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getPublisher();
        java.lang.String str10 = magazine6.getDetails();
        java.lang.String str11 = magazine6.getPublisher();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str10, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        java.lang.String str66 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        boolean boolean11 = magazine6.isOverdue();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getTitle();
        java.lang.String str20 = magazine18.getTitle();
        java.lang.String str21 = magazine18.getItemType();
        java.lang.String str22 = magazine18.getAuthor();
        java.lang.String str23 = magazine18.getItemType();
        java.lang.String str24 = magazine18.getItemType();
        items.Magazine magazine31 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str32 = magazine31.getTitle();
        java.lang.String str33 = magazine31.getTitle();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        items.Magazine magazine63 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str64 = magazine63.getPublisher();
        double double65 = magazine63.calculateOverduePenalty();
        items.Magazine magazine72 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { magazine47, magazine55, magazine63, magazine72 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = magazine40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = magazine31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean78 = magazine18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean79 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        magazine6.setBorrowerEmail("LibraryItem [itemId=796, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2805 + "'", int9 == 2805);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Magazine" + "'", str21, "Magazine");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Magazine" + "'", str23, "Magazine");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Magazine" + "'", str24, "Magazine");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        java.lang.String str9 = magazine6.getPrice();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getPublisher();
        items.Magazine magazine24 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str25 = magazine24.getTitle();
        java.lang.String str26 = magazine24.getTitle();
        items.Magazine magazine33 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        items.Magazine magazine56 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str57 = magazine56.getPublisher();
        double double58 = magazine56.calculateOverduePenalty();
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { magazine40, magazine48, magazine56, magazine65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = magazine33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = magazine24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = magazine16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean72 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.Class<?> wildcardClass73 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        boolean boolean13 = magazine6.isOverdue();
        java.lang.String str14 = magazine6.getAuthor();
        java.time.LocalDate localDate15 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate15, 0, "LibraryItem [itemId=2141, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        java.lang.String str55 = magazine6.getAuthor();
        java.lang.String str56 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getDetails();
        java.lang.String str12 = magazine6.getItemType();
        java.lang.String str13 = magazine6.getPrice();
        boolean boolean14 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str11, "Magazine: . Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getPrice();
        java.lang.String str14 = magazine6.getAuthor();
        java.lang.String str15 = magazine6.getPublisher();
        magazine6.setLocation("LibraryItem [itemId=2215, itemType=Magazine, location=LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.time.LocalDate localDate64 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate64, 303, "LibraryItem [itemId=854, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        boolean boolean13 = magazine6.isPurchasable();
        boolean boolean14 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2982 + "'", int8 == 2982);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("Magazine: . Location: . Purchasable: false");
        java.lang.String str13 = magazine6.getBorrowerEmail();
        boolean boolean14 = magazine6.isOverdue();
        java.lang.Class<?> wildcardClass15 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str13, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.returnItem();
        magazine6.setIsPurchasable(false);
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 2468, "LibraryItem [itemId=979, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2986 + "'", int8 == 2986);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.returnItem();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        boolean boolean19 = magazine16.isOverdue();
        items.Magazine magazine26 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str27 = magazine26.getTitle();
        java.lang.String str28 = magazine26.getTitle();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getPublisher();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        double double60 = magazine58.calculateOverduePenalty();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { magazine42, magazine50, magazine58, magazine67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean72 = magazine26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean73 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean74 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        java.lang.Class<?> wildcardClass75 = libraryItemList69.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2997 + "'", int8 == 2997);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        boolean boolean13 = magazine6.isOverdue();
        java.lang.String str14 = magazine6.getBorrowerEmail();
        java.lang.String str15 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        int int65 = magazine6.getItemId();
        double double66 = magazine6.calculateOverduePenalty();
        java.time.LocalDate localDate67 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate67, 2241, "LibraryItem [itemId=1056, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3022 + "'", int65 == 3022);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        items.Magazine magazine6 = new items.Magazine("", "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine20 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str21 = magazine20.getPublisher();
        items.Magazine magazine28 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str29 = magazine28.getPublisher();
        items.Magazine magazine36 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str37 = magazine36.getPublisher();
        double double38 = magazine36.calculateOverduePenalty();
        items.Magazine magazine45 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray46 = new items.LibraryItem[] { magazine20, magazine28, magazine36, magazine45 };
        java.util.ArrayList<items.LibraryItem> libraryItemList47 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList47, libraryItemArray46);
        boolean boolean49 = magazine13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList47);
        java.lang.String str50 = magazine13.getPublisher();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine64 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str65 = magazine64.getPublisher();
        items.Magazine magazine72 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str73 = magazine72.getPublisher();
        items.Magazine magazine80 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str81 = magazine80.getPublisher();
        double double82 = magazine80.calculateOverduePenalty();
        items.Magazine magazine89 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray90 = new items.LibraryItem[] { magazine64, magazine72, magazine80, magazine89 };
        java.util.ArrayList<items.LibraryItem> libraryItemList91 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList91, libraryItemArray90);
        boolean boolean93 = magazine57.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean94 = magazine13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean95 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        java.lang.String str96 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Magazine" + "'", str96, "Magazine");
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getTitle();
        magazine6.returnItem();
        java.lang.Class<?> wildcardClass69 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isPurchasable();
        boolean boolean12 = magazine6.isPurchasable();
        items.Magazine magazine19 = new items.Magazine("hi!", "Magazine: . Location: . Purchasable: false", false, true, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine");
        items.Magazine magazine26 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str27 = magazine26.getTitle();
        java.lang.String str28 = magazine26.getTitle();
        boolean boolean29 = magazine26.isOverdue();
        java.lang.String str30 = magazine26.getAuthor();
        boolean boolean31 = magazine26.isOverdue();
        java.lang.String str32 = magazine26.getBorrowerEmail();
        java.lang.String str33 = magazine26.toString();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getTitle();
        java.lang.String str50 = magazine48.getTitle();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine64 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str65 = magazine64.getPublisher();
        items.Magazine magazine72 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str73 = magazine72.getPublisher();
        items.Magazine magazine80 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str81 = magazine80.getPublisher();
        double double82 = magazine80.calculateOverduePenalty();
        items.Magazine magazine89 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray90 = new items.LibraryItem[] { magazine64, magazine72, magazine80, magazine89 };
        java.util.ArrayList<items.LibraryItem> libraryItemList91 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList91, libraryItemArray90);
        boolean boolean93 = magazine57.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean94 = magazine48.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean95 = magazine40.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean96 = magazine26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean97 = magazine19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean98 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "LibraryItem [itemId=3067, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str33, "LibraryItem [itemId=3067, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.toString();
        double double13 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=3090, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=3090, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        magazine6.setIsPurchasable(false);
        magazine6.setBorrowerEmail("");
        double double14 = magazine6.calculateOverduePenalty();
        magazine6.setIsPurchasable(false);
        magazine6.setLocation("LibraryItem [itemId=1888, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate19 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate19, 0, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=3091, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=3091, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        java.lang.String str11 = magazine6.getPrice();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getTitle();
        java.lang.String str20 = magazine18.getTitle();
        boolean boolean21 = magazine18.isOverdue();
        items.Magazine magazine28 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str29 = magazine28.getTitle();
        java.lang.String str30 = magazine28.getTitle();
        items.Magazine magazine37 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine44 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str45 = magazine44.getPublisher();
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str53 = magazine52.getPublisher();
        items.Magazine magazine60 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str61 = magazine60.getPublisher();
        double double62 = magazine60.calculateOverduePenalty();
        items.Magazine magazine69 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { magazine44, magazine52, magazine60, magazine69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = magazine37.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = magazine28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = magazine18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean76 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean77 = magazine6.isOverdue();
        java.lang.String str78 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3092 + "'", int9 == 3092);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getBorrowerEmail();
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getDetails();
        boolean boolean13 = magazine6.isOverdue();
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate14, 1086, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str12, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=997, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1228, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        java.util.List<items.LibraryItem> libraryItemList8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = magazine6.hasBorrowingPrivileges(libraryItemList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        java.lang.String str11 = magazine6.getItemType();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 795, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine" + "'", str11, "Magazine");
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getPublisher();
        java.lang.String str10 = magazine6.getDetails();
        java.util.List<items.LibraryItem> libraryItemList11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = magazine6.hasBorrowingPrivileges(libraryItemList11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str10, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        boolean boolean13 = magazine6.isPurchasable();
        boolean boolean14 = magazine6.isPurchasable();
        java.lang.String str15 = magazine6.getTitle();
        double double16 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        double double56 = magazine6.calculateOverduePenalty();
        boolean boolean57 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        boolean boolean11 = magazine6.isRented();
        boolean boolean12 = magazine6.isRented();
        java.lang.String str13 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3174 + "'", int9 == 3174);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        boolean boolean67 = magazine6.isRented();
        magazine6.setIsPurchasable(false);
        java.lang.String str70 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        items.Magazine magazine6 = new items.Magazine("Magazine", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Magazine", "Magazine");
        java.lang.String str7 = magazine6.getDetails();
        magazine6.setBorrowerEmail("LibraryItem [itemId=1228, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Magazine: Magazine. Location: Magazine. Purchasable: true" + "'", str7, "Magazine: Magazine. Location: Magazine. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        java.lang.String str9 = magazine6.getPrice();
        java.lang.String str10 = magazine6.getPrice();
        java.lang.String str11 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3207 + "'", int8 == 3207);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        java.lang.String str55 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str58 = magazine6.toString();
        magazine6.setLocation("LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass61 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "LibraryItem [itemId=3208, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str58, "LibraryItem [itemId=3208, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPrice();
        boolean boolean44 = magazine6.isOverdue();
        java.lang.String str45 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getTitle();
        magazine6.returnItem();
        magazine6.setBorrowerEmail("");
        int int71 = magazine6.getItemId();
        magazine6.returnItem();
        boolean boolean73 = magazine6.isOverdue();
        java.lang.String str74 = magazine6.getBorrowerEmail();
        java.lang.String str75 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 3240 + "'", int71 == 3240);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "LibraryItem [itemId=3240, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str75, "LibraryItem [itemId=3240, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        items.Magazine magazine14 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str15 = magazine14.getTitle();
        java.lang.String str16 = magazine14.getTitle();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        items.Magazine magazine46 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str47 = magazine46.getPublisher();
        double double48 = magazine46.calculateOverduePenalty();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray56 = new items.LibraryItem[] { magazine30, magazine38, magazine46, magazine55 };
        java.util.ArrayList<items.LibraryItem> libraryItemList57 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList57, libraryItemArray56);
        boolean boolean59 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean60 = magazine14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean61 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList57);
        java.lang.String str62 = magazine6.getItemType();
        java.lang.String str63 = magazine6.toString();
        boolean boolean64 = magazine6.isRented();
        java.util.List<items.LibraryItem> libraryItemList65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = magazine6.hasBorrowingPrivileges(libraryItemList65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Magazine" + "'", str62, "Magazine");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "LibraryItem [itemId=3247, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str63, "LibraryItem [itemId=3247, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        boolean boolean13 = magazine6.isPurchasable();
        boolean boolean14 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("");
        magazine6.setLocation("LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str19 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        magazine6.setIsPurchasable(false);
        java.lang.String str12 = magazine6.getDetails();
        boolean boolean13 = magazine6.isRented();
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate14, 1577, "LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=3261, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=3261, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str12, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getLocation();
        java.lang.String str14 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        int int65 = magazine6.getItemId();
        java.lang.String str66 = magazine6.getBorrowerEmail();
        java.lang.String str67 = magazine6.getItemType();
        java.time.LocalDate localDate68 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate68, 1368, "LibraryItem [itemId=1645, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3264 + "'", int65 == 3264);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Magazine" + "'", str67, "Magazine");
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean64 = magazine6.isPurchasable();
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        int int67 = magazine6.getItemId();
        magazine6.setIsPurchasable(true);
        java.lang.String str70 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3280 + "'", int67 == 3280);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        java.lang.Class<?> wildcardClass11 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3287 + "'", int9 == 3287);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        java.lang.String str11 = magazine6.getItemType();
        java.lang.String str12 = magazine6.getItemType();
        boolean boolean13 = magazine6.isOverdue();
        java.lang.Class<?> wildcardClass14 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine" + "'", str11, "Magazine");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        java.lang.String str9 = magazine6.getLocation();
        boolean boolean10 = magazine6.isPurchasable();
        java.lang.String str11 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=3300, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=3300, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isPurchasable();
        java.lang.String str11 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3316 + "'", int9 == 3316);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.setLocation("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getDetails();
        java.lang.Class<?> wildcardClass11 = magazine6.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3317 + "'", int9 == 3317);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine: LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str10, "Magazine: LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getPrice();
        java.lang.String str14 = magazine6.getAuthor();
        java.lang.Class<?> wildcardClass15 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        double double11 = magazine6.calculateOverduePenalty();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str26 = magazine25.getPublisher();
        items.Magazine magazine33 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str34 = magazine33.getPublisher();
        items.Magazine magazine41 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str42 = magazine41.getPublisher();
        double double43 = magazine41.calculateOverduePenalty();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray51 = new items.LibraryItem[] { magazine25, magazine33, magazine41, magazine50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList52 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList52, libraryItemArray51);
        boolean boolean54 = magazine18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList52);
        boolean boolean55 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList52);
        java.lang.String str56 = magazine6.getItemType();
        java.lang.String str57 = magazine6.getTitle();
        magazine6.setLocation("LibraryItem [itemId=981, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass60 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3329 + "'", int9 == 3329);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Magazine" + "'", str56, "Magazine");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        double double11 = magazine6.calculateOverduePenalty();
        java.lang.String str12 = magazine6.getAuthor();
        boolean boolean13 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3343 + "'", int9 == 3343);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getPrice();
        boolean boolean68 = magazine6.isRented();
        magazine6.setIsPurchasable(false);
        java.lang.String str71 = magazine6.getAuthor();
        double double72 = magazine6.calculateOverduePenalty();
        java.lang.String str73 = magazine6.getPublisher();
        java.lang.String str74 = magazine6.toString();
        java.time.LocalDate localDate75 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate75, 100, "LibraryItem [itemId=1359, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "LibraryItem [itemId=3346, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str74, "LibraryItem [itemId=3346, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getPublisher();
        boolean boolean20 = magazine18.isRented();
        items.Magazine magazine27 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str28 = magazine27.getPublisher();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getTitle();
        java.lang.String str37 = magazine35.getTitle();
        items.Magazine magazine44 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str52 = magazine51.getPublisher();
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        double double69 = magazine67.calculateOverduePenalty();
        items.Magazine magazine76 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { magazine51, magazine59, magazine67, magazine76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = magazine44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = magazine27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean83 = magazine18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean84 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        java.lang.String str85 = magazine6.getLocation();
        java.lang.String str86 = magazine6.getLocation();
        java.lang.String str87 = magazine6.getPrice();
        magazine6.returnItem();
        int int89 = magazine6.getItemId();
        java.lang.String str90 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 3372 + "'", int89 == 3372);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str90, "Magazine: . Location: . Purchasable: true");
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        java.lang.String str13 = magazine6.getLocation();
        boolean boolean14 = magazine6.isRented();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getTitle();
        java.lang.String str23 = magazine21.getTitle();
        boolean boolean24 = magazine21.isOverdue();
        java.lang.String str25 = magazine21.getAuthor();
        boolean boolean26 = magazine21.isOverdue();
        java.lang.String str27 = magazine21.getBorrowerEmail();
        java.lang.String str28 = magazine21.toString();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getPublisher();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str44 = magazine43.getTitle();
        java.lang.String str45 = magazine43.getTitle();
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str76 = magazine75.getPublisher();
        double double77 = magazine75.calculateOverduePenalty();
        items.Magazine magazine84 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { magazine59, magazine67, magazine75, magazine84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = magazine52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = magazine35.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = magazine21.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str93 = magazine6.toString();
        java.lang.Class<?> wildcardClass94 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3382 + "'", int8 == 3382);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LibraryItem [itemId=3383, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str28, "LibraryItem [itemId=3383, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "LibraryItem [itemId=3382, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str93, "LibraryItem [itemId=3382, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        items.Magazine magazine6 = new items.Magazine("Magazine", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Magazine", "Magazine");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate7, 1624, "LibraryItem [itemId=2242, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        magazine6.returnItem();
        java.lang.String str57 = magazine6.getBorrowerEmail();
        java.lang.String str58 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=341, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=654, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "Magazine: . Location: . Purchasable: false", "hi!");
        java.lang.String str7 = magazine6.getAuthor();
        magazine6.setIsPurchasable(false);
        magazine6.setLocation("LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 2099, "LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        int int65 = magazine6.getItemId();
        java.lang.String str66 = magazine6.getLocation();
        magazine6.setLocation("LibraryItem [itemId=1203, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3442 + "'", int65 == 3442);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getAuthor();
        double double8 = magazine6.calculateOverduePenalty();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str16 = magazine15.getTitle();
        int int17 = magazine15.getItemId();
        java.lang.String str18 = magazine15.getPrice();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str26 = magazine25.getTitle();
        int int27 = magazine25.getItemId();
        magazine25.returnItem();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getTitle();
        java.lang.String str37 = magazine35.getTitle();
        boolean boolean38 = magazine35.isOverdue();
        items.Magazine magazine45 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str46 = magazine45.getTitle();
        java.lang.String str47 = magazine45.getTitle();
        items.Magazine magazine54 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine61 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str62 = magazine61.getPublisher();
        items.Magazine magazine69 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str70 = magazine69.getPublisher();
        items.Magazine magazine77 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str78 = magazine77.getPublisher();
        double double79 = magazine77.calculateOverduePenalty();
        items.Magazine magazine86 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray87 = new items.LibraryItem[] { magazine61, magazine69, magazine77, magazine86 };
        java.util.ArrayList<items.LibraryItem> libraryItemList88 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList88, libraryItemArray87);
        boolean boolean90 = magazine54.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean91 = magazine45.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean92 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean93 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean94 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean95 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        magazine6.setBorrowerEmail("LibraryItem [itemId=1910, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3453 + "'", int17 == 3453);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3454 + "'", int27 == 3454);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getPrice();
        magazine6.returnItem();
        java.lang.String str12 = magazine6.getItemType();
        java.lang.Class<?> wildcardClass13 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3472 + "'", int9 == 3472);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        boolean boolean56 = magazine6.isPurchasable();
        java.lang.String str57 = magazine6.getItemType();
        java.lang.String str58 = magazine6.getItemType();
        boolean boolean59 = magazine6.isOverdue();
        int int60 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Magazine" + "'", str57, "Magazine");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Magazine" + "'", str58, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3475 + "'", int60 == 3475);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPublisher();
        double double44 = magazine6.calculateOverduePenalty();
        java.lang.String str45 = magazine6.getItemType();
        magazine6.returnItem();
        boolean boolean47 = magazine6.isRented();
        java.lang.Class<?> wildcardClass48 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Magazine" + "'", str45, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isPurchasable();
        java.lang.String str12 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.String str56 = magazine6.getPrice();
        magazine6.returnItem();
        magazine6.setLocation("LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str60 = magazine6.getPrice();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2735, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        java.lang.String str9 = magazine6.getPrice();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getPublisher();
        items.Magazine magazine24 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str25 = magazine24.getTitle();
        java.lang.String str26 = magazine24.getTitle();
        items.Magazine magazine33 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        items.Magazine magazine56 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str57 = magazine56.getPublisher();
        double double58 = magazine56.calculateOverduePenalty();
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { magazine40, magazine48, magazine56, magazine65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = magazine33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = magazine24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = magazine16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean72 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.Class<?> wildcardClass73 = libraryItemList67.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        double double65 = magazine6.calculateOverduePenalty();
        java.time.LocalDate localDate66 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate66, 2651, "LibraryItem [itemId=997, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=2436, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=796, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1044, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1986, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=981, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.setBorrowerEmail("LibraryItem [itemId=854, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        int int10 = magazine6.getItemId();
        java.lang.String str11 = magazine6.getDetails();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getTitle();
        java.lang.String str20 = magazine18.getTitle();
        items.Magazine magazine27 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getPublisher();
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getPublisher();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        double double52 = magazine50.calculateOverduePenalty();
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray60 = new items.LibraryItem[] { magazine34, magazine42, magazine50, magazine59 };
        java.util.ArrayList<items.LibraryItem> libraryItemList61 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList61, libraryItemArray60);
        boolean boolean63 = magazine27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList61);
        boolean boolean64 = magazine18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList61);
        boolean boolean65 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList61);
        java.lang.String str66 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3612 + "'", int8 == 3612);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3612 + "'", int10 == 3612);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str11, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        boolean boolean11 = magazine6.isRented();
        java.lang.String str12 = magazine6.getPublisher();
        java.lang.String str13 = magazine6.getItemType();
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate14, 1080, "LibraryItem [itemId=3433, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3620 + "'", int9 == 3620);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Magazine" + "'", str13, "Magazine");
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        boolean boolean11 = magazine6.isPurchasable();
        java.lang.String str12 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3636 + "'", int8 == 3636);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        boolean boolean13 = magazine6.isOverdue();
        java.lang.String str14 = magazine6.getAuthor();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getTitle();
        java.lang.String str23 = magazine21.getTitle();
        java.lang.String str24 = magazine21.getItemType();
        java.lang.String str25 = magazine21.getAuthor();
        java.lang.String str26 = magazine21.getItemType();
        java.lang.String str27 = magazine21.getItemType();
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getTitle();
        java.lang.String str36 = magazine34.getTitle();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        double double68 = magazine66.calculateOverduePenalty();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { magazine50, magazine58, magazine66, magazine75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = magazine34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = magazine21.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        java.lang.Class<?> wildcardClass83 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Magazine" + "'", str24, "Magazine");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Magazine" + "'", str26, "Magazine");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Magazine" + "'", str27, "Magazine");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        double double12 = magazine6.calculateOverduePenalty();
        boolean boolean13 = magazine6.isPurchasable();
        items.Magazine magazine20 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str21 = magazine20.getTitle();
        java.lang.String str22 = magazine20.getTitle();
        boolean boolean23 = magazine20.isOverdue();
        java.lang.String str24 = magazine20.getAuthor();
        boolean boolean25 = magazine20.isOverdue();
        java.lang.String str26 = magazine20.getBorrowerEmail();
        java.lang.String str27 = magazine20.toString();
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getPublisher();
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getTitle();
        java.lang.String str44 = magazine42.getTitle();
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        items.Magazine magazine74 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str75 = magazine74.getPublisher();
        double double76 = magazine74.calculateOverduePenalty();
        items.Magazine magazine83 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { magazine58, magazine66, magazine74, magazine83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = magazine51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = magazine42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = magazine34.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = magazine20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        java.lang.String str92 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "LibraryItem [itemId=3646, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str27, "LibraryItem [itemId=3646, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.toString();
        java.lang.String str11 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=3661, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=3661, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        boolean boolean67 = magazine6.isRented();
        java.lang.String str68 = magazine6.getDetails();
        double double69 = magazine6.calculateOverduePenalty();
        boolean boolean70 = magazine6.isOverdue();
        magazine6.returnItem();
        java.lang.String str72 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str68, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str72, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate13, (int) (short) 10, "LibraryItem [itemId=616, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3684 + "'", int8 == 3684);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getPrice();
        java.lang.String str68 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "LibraryItem [itemId=3685, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str68, "LibraryItem [itemId=3685, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1044, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1986, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=981, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        java.util.List<items.LibraryItem> libraryItemList8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = magazine6.hasExceededBorrowingLimit(libraryItemList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=981, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=981, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.setLocation("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getBorrowerEmail();
        magazine6.setLocation("LibraryItem [itemId=854, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3721 + "'", int9 == 3721);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean10 = magazine6.isPurchasable();
        java.lang.String str11 = magazine6.getBorrowerEmail();
        double double12 = magazine6.calculateOverduePenalty();
        java.lang.String str13 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str13, "Magazine: . Location: . Purchasable: true");
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        boolean boolean67 = magazine6.isRented();
        java.lang.String str68 = magazine6.getDetails();
        java.lang.String str69 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str68, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Magazine" + "'", str69, "Magazine");
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.String str56 = magazine6.getPrice();
        boolean boolean57 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2451, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1044, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1986, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=981, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getLocation();
        int int9 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=981, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=981, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=1044, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=1044, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3791 + "'", int9 == 3791);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        java.lang.String str11 = magazine6.getItemType();
        java.lang.String str12 = magazine6.getItemType();
        java.lang.String str13 = magazine6.getPrice();
        java.lang.Class<?> wildcardClass14 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine" + "'", str11, "Magazine");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        java.lang.String str13 = magazine6.getLocation();
        boolean boolean14 = magazine6.isRented();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getTitle();
        java.lang.String str23 = magazine21.getTitle();
        boolean boolean24 = magazine21.isOverdue();
        java.lang.String str25 = magazine21.getAuthor();
        boolean boolean26 = magazine21.isOverdue();
        java.lang.String str27 = magazine21.getBorrowerEmail();
        java.lang.String str28 = magazine21.toString();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getPublisher();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str44 = magazine43.getTitle();
        java.lang.String str45 = magazine43.getTitle();
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str76 = magazine75.getPublisher();
        double double77 = magazine75.calculateOverduePenalty();
        items.Magazine magazine84 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { magazine59, magazine67, magazine75, magazine84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = magazine52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = magazine35.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = magazine21.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str93 = magazine6.getBorrowerEmail();
        boolean boolean94 = magazine6.isOverdue();
        java.time.LocalDate localDate95 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate95, 1849, "LibraryItem [itemId=3416, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3800 + "'", int8 == 3800);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LibraryItem [itemId=3801, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str28, "LibraryItem [itemId=3801, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=997, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1228, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        magazine6.setLocation("LibraryItem [itemId=3301, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPublisher();
        double double44 = magazine6.calculateOverduePenalty();
        java.lang.String str45 = magazine6.getItemType();
        magazine6.returnItem();
        boolean boolean47 = magazine6.isRented();
        java.time.LocalDate localDate48 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate48, 3122, "LibraryItem [itemId=979, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Magazine" + "'", str45, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        java.lang.String str66 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "LibraryItem [itemId=3839, itemType=Magazine, location=Magazine: . Location: . Purchasable: false, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str66, "LibraryItem [itemId=3839, itemType=Magazine, location=Magazine: . Location: . Purchasable: false, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3862 + "'", int8 == 3862);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.returnItem();
        java.lang.String str66 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        boolean boolean67 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(false);
        java.lang.String str70 = magazine6.getDetails();
        java.lang.Class<?> wildcardClass71 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str70, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setLocation("Magazine: Magazine. Location: Magazine. Purchasable: true");
        java.lang.String str13 = magazine6.getBorrowerEmail();
        java.lang.String str14 = magazine6.getDetails();
        java.lang.String str15 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Magazine: . Location: Magazine: Magazine. Location: Magazine. Purchasable: true. Purchasable: false" + "'", str14, "Magazine: . Location: Magazine: Magazine. Location: Magazine. Purchasable: true. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        double double12 = magazine6.calculateOverduePenalty();
        java.lang.String str13 = magazine6.getPublisher();
        double double14 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        java.lang.String str9 = magazine6.getLocation();
        java.lang.String str10 = magazine6.getPublisher();
        boolean boolean11 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        items.Magazine magazine6 = new items.Magazine("hi!", "LibraryItem [itemId=2038, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: . Location: . Purchasable: true");
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1391, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = magazine6.isOverdue();
        java.lang.Class<?> wildcardClass8 = magazine6.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean64 = magazine6.isPurchasable();
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        magazine6.returnItem();
        magazine6.returnItem();
        double double69 = magazine6.calculateOverduePenalty();
        magazine6.setLocation("LibraryItem [itemId=2574, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        magazine6.setBorrowerEmail("LibraryItem [itemId=1848, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getPublisher();
        double double18 = magazine16.calculateOverduePenalty();
        int int19 = magazine16.getItemId();
        boolean boolean20 = magazine16.isRented();
        boolean boolean21 = magazine16.isOverdue();
        items.Magazine magazine28 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str29 = magazine28.getTitle();
        java.lang.String str30 = magazine28.getTitle();
        java.lang.String str31 = magazine28.getItemType();
        java.lang.String str32 = magazine28.getAuthor();
        java.lang.String str33 = magazine28.getItemType();
        java.lang.String str34 = magazine28.getItemType();
        items.Magazine magazine41 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str42 = magazine41.getTitle();
        java.lang.String str43 = magazine41.getTitle();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str58 = magazine57.getPublisher();
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str66 = magazine65.getPublisher();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str74 = magazine73.getPublisher();
        double double75 = magazine73.calculateOverduePenalty();
        items.Magazine magazine82 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray83 = new items.LibraryItem[] { magazine57, magazine65, magazine73, magazine82 };
        java.util.ArrayList<items.LibraryItem> libraryItemList84 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList84, libraryItemArray83);
        boolean boolean86 = magazine50.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean87 = magazine41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean88 = magazine28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean89 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean90 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3978 + "'", int19 == 3978);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Magazine" + "'", str31, "Magazine");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Magazine" + "'", str33, "Magazine");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Magazine" + "'", str34, "Magazine");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("");
        magazine6.setBorrowerEmail("hi!");
        java.lang.String str15 = magazine6.getPublisher();
        java.lang.String str16 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        magazine6.setBorrowerEmail("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean12 = magazine6.isRented();
        java.lang.String str13 = magazine6.toString();
        items.Magazine magazine20 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str21 = magazine20.getPublisher();
        boolean boolean22 = magazine20.isRented();
        int int23 = magazine20.getItemId();
        java.lang.String str24 = magazine20.getPublisher();
        items.Magazine magazine31 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str32 = magazine31.getPublisher();
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getTitle();
        java.lang.String str41 = magazine39.getTitle();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        items.Magazine magazine63 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str64 = magazine63.getPublisher();
        items.Magazine magazine71 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str72 = magazine71.getPublisher();
        double double73 = magazine71.calculateOverduePenalty();
        items.Magazine magazine80 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { magazine55, magazine63, magazine71, magazine80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = magazine48.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = magazine39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = magazine31.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean87 = magazine20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean88 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        int int89 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=4041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=4041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4042 + "'", int23 == 4042);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 4041 + "'", int89 == 4041);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getPrice();
        java.lang.Class<?> wildcardClass14 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        magazine6.setIsPurchasable(false);
        magazine6.setIsPurchasable(true);
        java.lang.String str14 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str14, "Magazine: . Location: . Purchasable: true");
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        java.lang.String str11 = magazine6.getPrice();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getTitle();
        java.lang.String str20 = magazine18.getTitle();
        boolean boolean21 = magazine18.isOverdue();
        items.Magazine magazine28 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str29 = magazine28.getTitle();
        java.lang.String str30 = magazine28.getTitle();
        items.Magazine magazine37 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine44 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str45 = magazine44.getPublisher();
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str53 = magazine52.getPublisher();
        items.Magazine magazine60 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str61 = magazine60.getPublisher();
        double double62 = magazine60.calculateOverduePenalty();
        items.Magazine magazine69 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { magazine44, magazine52, magazine60, magazine69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = magazine37.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = magazine28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = magazine18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean76 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean77 = magazine6.isOverdue();
        java.time.LocalDate localDate78 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate78, 3371, "Magazine: . Location: Magazine: Magazine. Location: Magazine. Purchasable: true. Purchasable: false");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4075 + "'", int9 == 4075);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        int int65 = magazine6.getItemId();
        java.lang.String str66 = magazine6.getLocation();
        magazine6.setIsPurchasable(false);
        java.lang.String str69 = magazine6.getPublisher();
        magazine6.returnItem();
        java.lang.String str71 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4093 + "'", int65 == 4093);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Magazine" + "'", str71, "Magazine");
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        magazine6.setLocation("LibraryItem [itemId=2589, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate13, 1292, "LibraryItem [itemId=3518, itemType=Magazine, location=Magazine, purchasable=true, title=Magazine, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPrice();
        java.lang.String str44 = magazine6.getPrice();
        magazine6.returnItem();
        magazine6.setLocation("LibraryItem [itemId=654, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        magazine6.returnItem();
        boolean boolean11 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getLocation();
        magazine6.setLocation("Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str13 = magazine6.getDetails();
        magazine6.returnItem();
        java.time.LocalDate localDate15 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate15, 302, "LibraryItem [itemId=3916, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4139 + "'", int9 == 4139);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Magazine: . Location: Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false. Purchasable: false" + "'", str13, "Magazine: . Location: Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false. Purchasable: false");
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        magazine6.returnItem();
        items.Magazine magazine17 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str18 = magazine17.getPublisher();
        java.lang.String str19 = magazine17.getBorrowerEmail();
        java.lang.String str20 = magazine17.getPrice();
        items.Magazine magazine27 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str28 = magazine27.getPublisher();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getTitle();
        java.lang.String str37 = magazine35.getTitle();
        items.Magazine magazine44 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str52 = magazine51.getPublisher();
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        double double69 = magazine67.calculateOverduePenalty();
        items.Magazine magazine76 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { magazine51, magazine59, magazine67, magazine76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = magazine44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = magazine27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean83 = magazine17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean84 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        java.lang.String str85 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        items.Magazine magazine17 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine24 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str25 = magazine24.getPublisher();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        double double42 = magazine40.calculateOverduePenalty();
        items.Magazine magazine49 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray50 = new items.LibraryItem[] { magazine24, magazine32, magazine40, magazine49 };
        java.util.ArrayList<items.LibraryItem> libraryItemList51 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList51, libraryItemArray50);
        boolean boolean53 = magazine17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList51);
        boolean boolean54 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList51);
        java.time.LocalDate localDate55 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate55, 1937, "LibraryItem [itemId=3827, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getPrice();
        double double11 = magazine6.calculateOverduePenalty();
        java.lang.String str12 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getPublisher();
        boolean boolean20 = magazine18.isRented();
        items.Magazine magazine27 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str28 = magazine27.getPublisher();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getTitle();
        java.lang.String str37 = magazine35.getTitle();
        items.Magazine magazine44 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str52 = magazine51.getPublisher();
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        double double69 = magazine67.calculateOverduePenalty();
        items.Magazine magazine76 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { magazine51, magazine59, magazine67, magazine76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = magazine44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = magazine27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean83 = magazine18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean84 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        magazine6.setBorrowerEmail("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        java.lang.String str9 = magazine6.getPrice();
        java.lang.String str10 = magazine6.getPrice();
        java.lang.String str11 = magazine6.toString();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4207 + "'", int8 == 4207);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=4207, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=4207, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        items.Magazine magazine14 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str15 = magazine14.getTitle();
        java.lang.String str16 = magazine14.getTitle();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        items.Magazine magazine46 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str47 = magazine46.getPublisher();
        double double48 = magazine46.calculateOverduePenalty();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray56 = new items.LibraryItem[] { magazine30, magazine38, magazine46, magazine55 };
        java.util.ArrayList<items.LibraryItem> libraryItemList57 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList57, libraryItemArray56);
        boolean boolean59 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean60 = magazine14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean61 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean62 = magazine6.isPurchasable();
        java.lang.String str63 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getPrice();
        boolean boolean68 = magazine6.isRented();
        magazine6.setIsPurchasable(false);
        java.lang.String str71 = magazine6.getAuthor();
        java.lang.String str72 = magazine6.getLocation();
        java.lang.Class<?> wildcardClass73 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        java.lang.String str54 = magazine6.getDetails();
        java.lang.String str55 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str54, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str55, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setIsPurchasable(true);
        boolean boolean13 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        boolean boolean11 = magazine6.isPurchasable();
        java.lang.String str12 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4252 + "'", int8 == 4252);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getPrice();
        boolean boolean68 = magazine6.isRented();
        magazine6.setIsPurchasable(false);
        java.lang.String str71 = magazine6.toString();
        java.lang.String str72 = magazine6.getPublisher();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2325, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "LibraryItem [itemId=4262, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str71, "LibraryItem [itemId=4262, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=3089, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4262, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1359, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4250, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        boolean boolean55 = magazine6.isRented();
        java.lang.String str56 = magazine6.getItemType();
        java.lang.String str57 = magazine6.getItemType();
        java.lang.String str58 = magazine6.getTitle();
        java.lang.String str59 = magazine6.getPrice();
        double double60 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Magazine" + "'", str56, "Magazine");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Magazine" + "'", str57, "Magazine");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        java.lang.String str9 = magazine6.getPrice();
        boolean boolean10 = magazine6.isRented();
        items.Magazine magazine17 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str18 = magazine17.getPublisher();
        double double19 = magazine17.calculateOverduePenalty();
        int int20 = magazine17.getItemId();
        boolean boolean21 = magazine17.isRented();
        boolean boolean22 = magazine17.isOverdue();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getTitle();
        java.lang.String str31 = magazine29.getTitle();
        java.lang.String str32 = magazine29.getItemType();
        java.lang.String str33 = magazine29.getAuthor();
        java.lang.String str34 = magazine29.getItemType();
        java.lang.String str35 = magazine29.getItemType();
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getTitle();
        java.lang.String str44 = magazine42.getTitle();
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        items.Magazine magazine74 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str75 = magazine74.getPublisher();
        double double76 = magazine74.calculateOverduePenalty();
        items.Magazine magazine83 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { magazine58, magazine66, magazine74, magazine83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = magazine51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = magazine42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = magazine29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = magazine17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean92 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4314 + "'", int20 == 4314);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Magazine" + "'", str32, "Magazine");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Magazine" + "'", str34, "Magazine");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Magazine" + "'", str35, "Magazine");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "hi!", false, false, "LibraryItem [itemId=654, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str7 = magazine6.getAuthor();
        boolean boolean8 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=2325, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3325, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.returnItem();
        magazine6.setIsPurchasable(false);
        boolean boolean12 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4336 + "'", int8 == 4336);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        boolean boolean43 = magazine6.isOverdue();
        java.lang.String str44 = magazine6.getPrice();
        java.lang.String str45 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str45, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        magazine6.setBorrowerEmail("Magazine");
        java.lang.String str9 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getTitle();
        magazine6.returnItem();
        magazine6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getTitle();
        int int13 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 4353 + "'", int13 == 4353);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("");
        magazine6.setBorrowerEmail("hi!");
        boolean boolean15 = magazine6.isOverdue();
        java.lang.String str16 = magazine6.getLocation();
        java.lang.Class<?> wildcardClass17 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getLocation();
        magazine6.setLocation("Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str13 = magazine6.getDetails();
        java.lang.String str14 = magazine6.getItemType();
        boolean boolean15 = magazine6.isRented();
        int int16 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4366 + "'", int9 == 4366);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Magazine: . Location: Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false. Purchasable: false" + "'", str13, "Magazine: . Location: Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Magazine" + "'", str14, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4366 + "'", int16 == 4366);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        boolean boolean67 = magazine6.isRented();
        java.lang.String str68 = magazine6.getDetails();
        int int69 = magazine6.getItemId();
        java.time.LocalDate localDate70 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate70, 2830, "LibraryItem [itemId=2641, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str68, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4375 + "'", int69 == 4375);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        java.lang.String str11 = magazine6.getPublisher();
        double double12 = magazine6.calculateOverduePenalty();
        java.lang.String str13 = magazine6.getAuthor();
        java.lang.String str14 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4383 + "'", int8 == 4383);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getTitle();
        magazine6.returnItem();
        double double69 = magazine6.calculateOverduePenalty();
        magazine6.setIsPurchasable(true);
        java.time.LocalDate localDate72 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate72, 3896, "LibraryItem [itemId=4261, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        magazine6.returnItem();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2451, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getBorrowerEmail();
        java.time.LocalDate localDate67 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate67, 1083, "LibraryItem [itemId=2787, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.getPrice();
        boolean boolean12 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4416 + "'", int9 == 4416);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.String str56 = magazine6.getPrice();
        boolean boolean57 = magazine6.isOverdue();
        java.lang.String str58 = magazine6.getLocation();
        java.lang.Class<?> wildcardClass59 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        boolean boolean11 = magazine6.isOverdue();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getTitle();
        java.lang.String str20 = magazine18.getTitle();
        java.lang.String str21 = magazine18.getItemType();
        java.lang.String str22 = magazine18.getAuthor();
        java.lang.String str23 = magazine18.getItemType();
        java.lang.String str24 = magazine18.getItemType();
        items.Magazine magazine31 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str32 = magazine31.getTitle();
        java.lang.String str33 = magazine31.getTitle();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        items.Magazine magazine63 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str64 = magazine63.getPublisher();
        double double65 = magazine63.calculateOverduePenalty();
        items.Magazine magazine72 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { magazine47, magazine55, magazine63, magazine72 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = magazine40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = magazine31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean78 = magazine18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean79 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str80 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4444 + "'", int9 == 4444);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Magazine" + "'", str21, "Magazine");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Magazine" + "'", str23, "Magazine");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Magazine" + "'", str24, "Magazine");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        magazine6.returnItem();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate11, 3280, "LibraryItem [itemId=1910, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=4452, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=4452, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=3067, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=2096, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3716, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        boolean boolean56 = magazine6.isPurchasable();
        java.lang.String str57 = magazine6.getItemType();
        double double58 = magazine6.calculateOverduePenalty();
        java.lang.String str59 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Magazine" + "'", str57, "Magazine");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1044, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", true, false, "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = magazine6.calculateOverduePenalty();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getLocation();
        magazine6.setLocation("");
        java.lang.String str16 = magazine6.getItemType();
        java.lang.String str17 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Magazine" + "'", str16, "Magazine");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        java.lang.String str13 = magazine6.getLocation();
        boolean boolean14 = magazine6.isRented();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getTitle();
        java.lang.String str23 = magazine21.getTitle();
        boolean boolean24 = magazine21.isOverdue();
        java.lang.String str25 = magazine21.getAuthor();
        boolean boolean26 = magazine21.isOverdue();
        java.lang.String str27 = magazine21.getBorrowerEmail();
        java.lang.String str28 = magazine21.toString();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getPublisher();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str44 = magazine43.getTitle();
        java.lang.String str45 = magazine43.getTitle();
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str76 = magazine75.getPublisher();
        double double77 = magazine75.calculateOverduePenalty();
        items.Magazine magazine84 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { magazine59, magazine67, magazine75, magazine84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = magazine52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = magazine35.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = magazine21.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        magazine6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4539 + "'", int8 == 4539);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LibraryItem [itemId=4540, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str28, "LibraryItem [itemId=4540, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=654, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.Class<?> wildcardClass7 = magazine6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getLocation();
        magazine6.setLocation("");
        magazine6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        boolean boolean55 = magazine6.isRented();
        java.lang.String str56 = magazine6.getDetails();
        java.lang.String str57 = magazine6.getPublisher();
        java.lang.String str58 = magazine6.getLocation();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2830, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str56, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        boolean boolean67 = magazine6.isRented();
        boolean boolean68 = magazine6.isOverdue();
        boolean boolean69 = magazine6.isPurchasable();
        java.lang.String str70 = magazine6.getPublisher();
        java.lang.String str71 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str71, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getPublisher();
        boolean boolean20 = magazine18.isRented();
        items.Magazine magazine27 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str28 = magazine27.getPublisher();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getTitle();
        java.lang.String str37 = magazine35.getTitle();
        items.Magazine magazine44 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str52 = magazine51.getPublisher();
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        double double69 = magazine67.calculateOverduePenalty();
        items.Magazine magazine76 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { magazine51, magazine59, magazine67, magazine76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = magazine44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = magazine27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean83 = magazine18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean84 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        java.lang.String str85 = magazine6.getLocation();
        java.lang.String str86 = magazine6.getLocation();
        java.lang.String str87 = magazine6.getPrice();
        magazine6.returnItem();
        int int89 = magazine6.getItemId();
        boolean boolean90 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 4588 + "'", int89 == 4588);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=2777, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2685, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=2949, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2363, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = magazine6.isPurchasable();
        java.lang.String str15 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=4607, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=4607, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        boolean boolean67 = magazine6.isPurchasable();
        java.lang.String str68 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        java.lang.String str56 = magazine6.getLocation();
        java.lang.String str57 = magazine6.getPublisher();
        boolean boolean58 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getPrice();
        java.lang.String str11 = magazine6.getLocation();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        items.Magazine magazine19 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str20 = magazine19.getTitle();
        int int21 = magazine19.getItemId();
        magazine19.setBorrowerEmail("");
        java.lang.String str24 = magazine19.getPublisher();
        double double25 = magazine19.calculateOverduePenalty();
        magazine19.setLocation("Magazine: . Location: . Purchasable: false");
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getTitle();
        java.lang.String str36 = magazine34.getTitle();
        java.lang.String str37 = magazine34.toString();
        magazine34.setIsPurchasable(false);
        items.Magazine magazine46 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str47 = magazine46.getPublisher();
        double double48 = magazine46.calculateOverduePenalty();
        int int49 = magazine46.getItemId();
        boolean boolean50 = magazine46.isRented();
        double double51 = magazine46.calculateOverduePenalty();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str66 = magazine65.getPublisher();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str74 = magazine73.getPublisher();
        items.Magazine magazine81 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str82 = magazine81.getPublisher();
        double double83 = magazine81.calculateOverduePenalty();
        items.Magazine magazine90 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { magazine65, magazine73, magazine81, magazine90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = magazine58.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = magazine46.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = magazine34.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = magazine19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean98 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        double double99 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4653 + "'", int21 == 4653);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=4654, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=4654, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4655 + "'", int49 == 4655);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isPurchasable();
        int int55 = magazine6.getItemId();
        java.lang.String str56 = magazine6.getAuthor();
        java.lang.String str57 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4666 + "'", int55 == 4666);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getPrice();
        boolean boolean11 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4673 + "'", int9 == 4673);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        boolean boolean67 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(false);
        boolean boolean70 = magazine6.isRented();
        java.lang.String str71 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Magazine" + "'", str71, "Magazine");
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=981, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4374, itemType=Magazine, location=LibraryItem [itemId=997, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3599, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        boolean boolean13 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int16 = magazine6.getItemId();
        java.lang.String str17 = magazine6.getDetails();
        boolean boolean18 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4731 + "'", int16 == 4731);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str17, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        magazine6.setLocation("");
        java.lang.String str13 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4742 + "'", int8 == 4742);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        magazine6.returnItem();
        java.lang.String str11 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=4758, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=4758, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getTitle();
        double double10 = magazine6.calculateOverduePenalty();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate11, 350, "LibraryItem [itemId=3491, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str11, "Magazine: . Location: . Purchasable: true");
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getLocation();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 2728, "LibraryItem [itemId=1228, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getPrice();
        double double11 = magazine6.calculateOverduePenalty();
        magazine6.returnItem();
        boolean boolean13 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getTitle();
        magazine6.returnItem();
        magazine6.setBorrowerEmail("");
        int int71 = magazine6.getItemId();
        magazine6.returnItem();
        boolean boolean73 = magazine6.isOverdue();
        boolean boolean74 = magazine6.isRented();
        int int75 = magazine6.getItemId();
        java.time.LocalDate localDate76 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate76, 3050, "LibraryItem [itemId=2831, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4772 + "'", int71 == 4772);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 4772 + "'", int75 == 4772);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isPurchasable();
        int int55 = magazine6.getItemId();
        java.lang.String str56 = magazine6.getAuthor();
        java.time.LocalDate localDate57 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate57, 1055, "LibraryItem [itemId=2574, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4781 + "'", int55 == 4781);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1986, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", false, false, "LibraryItem [itemId=1951, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2085, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Magazine magazine13 = new items.Magazine("hi!", "Magazine: . Location: . Purchasable: false", false, true, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine");
        items.Magazine magazine20 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str21 = magazine20.getTitle();
        java.lang.String str22 = magazine20.getTitle();
        boolean boolean23 = magazine20.isOverdue();
        java.lang.String str24 = magazine20.getAuthor();
        boolean boolean25 = magazine20.isOverdue();
        java.lang.String str26 = magazine20.getBorrowerEmail();
        java.lang.String str27 = magazine20.toString();
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getPublisher();
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getTitle();
        java.lang.String str44 = magazine42.getTitle();
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        items.Magazine magazine74 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str75 = magazine74.getPublisher();
        double double76 = magazine74.calculateOverduePenalty();
        items.Magazine magazine83 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { magazine58, magazine66, magazine74, magazine83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = magazine51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = magazine42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = magazine34.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = magazine20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = magazine13.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean92 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        java.lang.String str93 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "LibraryItem [itemId=4802, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str27, "LibraryItem [itemId=4802, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Magazine: LibraryItem [itemId=1951, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1986, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str93, "Magazine: LibraryItem [itemId=1951, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1986, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3425, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=2458, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1765, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.String str56 = magazine6.getPrice();
        magazine6.returnItem();
        magazine6.setLocation("LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str60 = magazine6.getPrice();
        double double61 = magazine6.calculateOverduePenalty();
        magazine6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=654, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=796, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "", "LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Magazine: . Location: LibraryItem [itemId=654, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Magazine: . Location: LibraryItem [itemId=654, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        boolean boolean67 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(false);
        boolean boolean70 = magazine6.isRented();
        boolean boolean71 = magazine6.isRented();
        magazine6.setBorrowerEmail("LibraryItem [itemId=1502, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        boolean boolean43 = magazine6.isPurchasable();
        boolean boolean44 = magazine6.isOverdue();
        magazine6.setIsPurchasable(true);
        java.lang.String str47 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "LibraryItem [itemId=4829, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str47, "LibraryItem [itemId=4829, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        java.lang.String str13 = magazine6.getLocation();
        boolean boolean14 = magazine6.isRented();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getTitle();
        java.lang.String str23 = magazine21.getTitle();
        boolean boolean24 = magazine21.isOverdue();
        java.lang.String str25 = magazine21.getAuthor();
        boolean boolean26 = magazine21.isOverdue();
        java.lang.String str27 = magazine21.getBorrowerEmail();
        java.lang.String str28 = magazine21.toString();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getPublisher();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str44 = magazine43.getTitle();
        java.lang.String str45 = magazine43.getTitle();
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str76 = magazine75.getPublisher();
        double double77 = magazine75.calculateOverduePenalty();
        items.Magazine magazine84 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { magazine59, magazine67, magazine75, magazine84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = magazine52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = magazine35.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = magazine21.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str93 = magazine6.getBorrowerEmail();
        boolean boolean94 = magazine6.isOverdue();
        boolean boolean95 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4834 + "'", int8 == 4834);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LibraryItem [itemId=4835, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str28, "LibraryItem [itemId=4835, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        boolean boolean11 = magazine6.isRented();
        boolean boolean12 = magazine6.isPurchasable();
        double double13 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4876 + "'", int9 == 4876);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        boolean boolean67 = magazine6.isPurchasable();
        double double68 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getPublisher();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        magazine6.setBorrowerEmail("LibraryItem [itemId=1848, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate10, 3174, "LibraryItem [itemId=1645, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1391, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = magazine6.isOverdue();
        boolean boolean8 = magazine6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getPrice();
        java.lang.String str11 = magazine6.getAuthor();
        boolean boolean12 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        java.lang.Class<?> wildcardClass11 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getDetails();
        java.lang.String str13 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str12, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getPrice();
        double double11 = magazine6.calculateOverduePenalty();
        magazine6.returnItem();
        magazine6.returnItem();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2697, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int16 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4999 + "'", int16 == 4999);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        int int65 = magazine6.getItemId();
        java.lang.String str66 = magazine6.getLocation();
        java.lang.String str67 = magazine6.getBorrowerEmail();
        java.time.LocalDate localDate68 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate68, 4471, "LibraryItem [itemId=4401, itemType=Magazine, location=LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 5015 + "'", int65 == 5015);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getTitle();
        boolean boolean13 = magazine6.isOverdue();
        boolean boolean14 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        items.Magazine magazine17 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine24 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str25 = magazine24.getPublisher();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        double double42 = magazine40.calculateOverduePenalty();
        items.Magazine magazine49 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray50 = new items.LibraryItem[] { magazine24, magazine32, magazine40, magazine49 };
        java.util.ArrayList<items.LibraryItem> libraryItemList51 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList51, libraryItemArray50);
        boolean boolean53 = magazine17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList51);
        boolean boolean54 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList51);
        java.lang.String str55 = magazine6.getTitle();
        double double56 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        boolean boolean13 = magazine6.isOverdue();
        java.lang.String str14 = magazine6.getAuthor();
        boolean boolean15 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getTitle();
        java.lang.String str67 = magazine6.toString();
        magazine6.setIsPurchasable(false);
        magazine6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "LibraryItem [itemId=5036, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str67, "LibraryItem [itemId=5036, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getPrice();
        java.lang.String str14 = magazine6.getAuthor();
        java.lang.String str15 = magazine6.getPublisher();
        boolean boolean16 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        double double12 = magazine6.calculateOverduePenalty();
        boolean boolean13 = magazine6.isPurchasable();
        items.Magazine magazine20 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str21 = magazine20.getTitle();
        java.lang.String str22 = magazine20.getTitle();
        boolean boolean23 = magazine20.isOverdue();
        java.lang.String str24 = magazine20.getAuthor();
        boolean boolean25 = magazine20.isOverdue();
        java.lang.String str26 = magazine20.getBorrowerEmail();
        java.lang.String str27 = magazine20.toString();
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getPublisher();
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getTitle();
        java.lang.String str44 = magazine42.getTitle();
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        items.Magazine magazine74 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str75 = magazine74.getPublisher();
        double double76 = magazine74.calculateOverduePenalty();
        items.Magazine magazine83 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { magazine58, magazine66, magazine74, magazine83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = magazine51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = magazine42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = magazine34.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = magazine20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        int int92 = magazine6.getItemId();
        java.lang.Class<?> wildcardClass93 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "LibraryItem [itemId=5048, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str27, "LibraryItem [itemId=5048, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int92 + "' != '" + 5047 + "'", int92 == 5047);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        items.Magazine magazine14 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str15 = magazine14.getTitle();
        java.lang.String str16 = magazine14.getTitle();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        items.Magazine magazine46 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str47 = magazine46.getPublisher();
        double double48 = magazine46.calculateOverduePenalty();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray56 = new items.LibraryItem[] { magazine30, magazine38, magazine46, magazine55 };
        java.util.ArrayList<items.LibraryItem> libraryItemList57 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList57, libraryItemArray56);
        boolean boolean59 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean60 = magazine14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean61 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList57);
        java.lang.String str62 = magazine6.getItemType();
        boolean boolean63 = magazine6.isOverdue();
        java.lang.String str64 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Magazine" + "'", str62, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=341, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=341, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str7 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "hi!", false, false, "LibraryItem [itemId=654, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        magazine6.setBorrowerEmail("LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate9, 2159, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=3318, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2325, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1103, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getTitle();
        java.lang.String str15 = magazine13.getTitle();
        java.lang.String str16 = magazine13.getItemType();
        java.lang.String str17 = magazine13.getAuthor();
        java.lang.String str18 = magazine13.getItemType();
        java.lang.String str19 = magazine13.getItemType();
        items.Magazine magazine26 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str27 = magazine26.getTitle();
        java.lang.String str28 = magazine26.getTitle();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getPublisher();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        double double60 = magazine58.calculateOverduePenalty();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { magazine42, magazine50, magazine58, magazine67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean72 = magazine26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean73 = magazine13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean74 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        java.lang.String str75 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Magazine" + "'", str16, "Magazine");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Magazine" + "'", str18, "Magazine");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Magazine" + "'", str19, "Magazine");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Magazine: LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str75, "Magazine: LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        boolean boolean43 = magazine6.isPurchasable();
        java.lang.String str44 = magazine6.getLocation();
        java.lang.String str45 = magazine6.getLocation();
        java.lang.String str46 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Magazine" + "'", str46, "Magazine");
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=3208, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5114, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=796, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: . Location: . Purchasable: true");
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        java.lang.String str11 = magazine6.getItemType();
        java.lang.String str12 = magazine6.getItemType();
        items.Magazine magazine19 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str20 = magazine19.getTitle();
        java.lang.String str21 = magazine19.getTitle();
        items.Magazine magazine28 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getPublisher();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str44 = magazine43.getPublisher();
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str52 = magazine51.getPublisher();
        double double53 = magazine51.calculateOverduePenalty();
        items.Magazine magazine60 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray61 = new items.LibraryItem[] { magazine35, magazine43, magazine51, magazine60 };
        java.util.ArrayList<items.LibraryItem> libraryItemList62 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList62, libraryItemArray61);
        boolean boolean64 = magazine28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean65 = magazine19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean66 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList62);
        java.lang.String str67 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine" + "'", str11, "Magazine");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "LibraryItem [itemId=5139, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str67, "LibraryItem [itemId=5139, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=453, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", false, false, "Magazine", "");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate7, 4022, "LibraryItem [itemId=3819, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        boolean boolean11 = magazine6.isOverdue();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getTitle();
        java.lang.String str20 = magazine18.getTitle();
        java.lang.String str21 = magazine18.getItemType();
        java.lang.String str22 = magazine18.getAuthor();
        java.lang.String str23 = magazine18.getItemType();
        java.lang.String str24 = magazine18.getItemType();
        items.Magazine magazine31 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str32 = magazine31.getTitle();
        java.lang.String str33 = magazine31.getTitle();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        items.Magazine magazine63 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str64 = magazine63.getPublisher();
        double double65 = magazine63.calculateOverduePenalty();
        items.Magazine magazine72 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { magazine47, magazine55, magazine63, magazine72 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = magazine40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = magazine31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean78 = magazine18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean79 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str80 = magazine6.getDetails();
        java.lang.String str81 = magazine6.getPublisher();
        java.lang.String str82 = magazine6.getPrice();
        boolean boolean83 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5151 + "'", int9 == 5151);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Magazine" + "'", str21, "Magazine");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Magazine" + "'", str23, "Magazine");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Magazine" + "'", str24, "Magazine");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str80, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        magazine6.setIsPurchasable(false);
        java.lang.String str58 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        java.lang.String str11 = magazine6.getItemType();
        java.lang.String str12 = magazine6.getAuthor();
        java.lang.String str13 = magazine6.toString();
        java.lang.String str14 = magazine6.getItemType();
        java.lang.String str15 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine" + "'", str11, "Magazine");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=5178, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=5178, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Magazine" + "'", str14, "Magazine");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getLocation();
        magazine6.setLocation("");
        java.lang.String str16 = magazine6.getItemType();
        java.lang.String str17 = magazine6.getLocation();
        boolean boolean18 = magazine6.isPurchasable();
        java.util.List<items.LibraryItem> libraryItemList19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = magazine6.hasBorrowingPrivileges(libraryItemList19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Magazine" + "'", str16, "Magazine");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        java.lang.String str11 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5198 + "'", int9 == 5198);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        boolean boolean13 = magazine6.isOverdue();
        java.lang.String str14 = magazine6.getAuthor();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getTitle();
        java.lang.String str23 = magazine21.getTitle();
        java.lang.String str24 = magazine21.getItemType();
        java.lang.String str25 = magazine21.getAuthor();
        java.lang.String str26 = magazine21.getItemType();
        java.lang.String str27 = magazine21.getItemType();
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getTitle();
        java.lang.String str36 = magazine34.getTitle();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        double double68 = magazine66.calculateOverduePenalty();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { magazine50, magazine58, magazine66, magazine75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = magazine34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = magazine21.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        int int83 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Magazine" + "'", str24, "Magazine");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Magazine" + "'", str26, "Magazine");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Magazine" + "'", str27, "Magazine");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 5201 + "'", int83 == 5201);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        magazine6.setBorrowerEmail("Magazine");
        boolean boolean9 = magazine6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getItemType();
        java.lang.String str9 = magazine6.toString();
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate10, 3382, "LibraryItem [itemId=3382, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Magazine" + "'", str8, "Magazine");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=5216, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=5216, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str16 = magazine15.getPublisher();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str24 = magazine23.getTitle();
        java.lang.String str25 = magazine23.getTitle();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getPublisher();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        double double57 = magazine55.calculateOverduePenalty();
        items.Magazine magazine64 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { magazine39, magazine47, magazine55, magazine64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = magazine32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = magazine15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        double double72 = magazine6.calculateOverduePenalty();
        java.lang.String str73 = magazine6.toString();
        boolean boolean74 = magazine6.isRented();
        boolean boolean75 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "LibraryItem [itemId=5217, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str73, "LibraryItem [itemId=5217, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getTitle();
        boolean boolean13 = magazine6.isOverdue();
        java.lang.String str14 = magazine6.getPublisher();
        java.lang.String str15 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        boolean boolean13 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean10 = magazine6.isPurchasable();
        int int11 = magazine6.getItemId();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getPublisher();
        double double20 = magazine18.calculateOverduePenalty();
        boolean boolean21 = magazine18.isPurchasable();
        items.Magazine magazine28 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str29 = magazine28.getTitle();
        java.lang.String str30 = magazine28.getTitle();
        boolean boolean31 = magazine28.isOverdue();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getTitle();
        java.lang.String str40 = magazine38.getTitle();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine54 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str55 = magazine54.getPublisher();
        items.Magazine magazine62 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str63 = magazine62.getPublisher();
        items.Magazine magazine70 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str71 = magazine70.getPublisher();
        double double72 = magazine70.calculateOverduePenalty();
        items.Magazine magazine79 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { magazine54, magazine62, magazine70, magazine79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = magazine47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = magazine38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = magazine28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = magazine18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean87 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5235 + "'", int11 == 5235);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=5138, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1493, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4845, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4540, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean64 = magazine6.isPurchasable();
        java.lang.String str65 = magazine6.getDetails();
        java.lang.String str66 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str65, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        magazine6.returnItem();
        java.lang.String str57 = magazine6.getBorrowerEmail();
        java.lang.String str58 = magazine6.getPrice();
        java.lang.String str59 = magazine6.toString();
        java.lang.String str60 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("LibraryItem [itemId=3944, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str63 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "LibraryItem [itemId=5256, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str59, "LibraryItem [itemId=5256, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "LibraryItem [itemId=5256, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str63, "LibraryItem [itemId=5256, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getDetails();
        magazine6.setLocation("");
        magazine6.setIsPurchasable(false);
        boolean boolean17 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2589, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str12, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        java.lang.String str67 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getPrice();
        boolean boolean68 = magazine6.isRented();
        magazine6.setIsPurchasable(false);
        java.lang.String str71 = magazine6.getAuthor();
        double double72 = magazine6.calculateOverduePenalty();
        java.time.LocalDate localDate73 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate73, 3219, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getPublisher();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getPublisher();
        double double31 = magazine29.calculateOverduePenalty();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { magazine13, magazine21, magazine29, magazine38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str43 = magazine6.getPublisher();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str58 = magazine57.getPublisher();
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str66 = magazine65.getPublisher();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str74 = magazine73.getPublisher();
        double double75 = magazine73.calculateOverduePenalty();
        items.Magazine magazine82 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray83 = new items.LibraryItem[] { magazine57, magazine65, magazine73, magazine82 };
        java.util.ArrayList<items.LibraryItem> libraryItemList84 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList84, libraryItemArray83);
        boolean boolean86 = magazine50.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean87 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        java.lang.String str88 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        boolean boolean8 = magazine6.isRented();
        double double9 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        int int9 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5354 + "'", int8 == 5354);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5354 + "'", int9 == 5354);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getPrice();
        boolean boolean68 = magazine6.isRented();
        magazine6.setIsPurchasable(false);
        java.lang.String str71 = magazine6.getAuthor();
        java.lang.String str72 = magazine6.getItemType();
        java.lang.String str73 = magazine6.getLocation();
        java.lang.String str74 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Magazine" + "'", str72, "Magazine");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str74, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getPrice();
        java.lang.String str11 = magazine6.getAuthor();
        java.lang.String str12 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getPrice();
        boolean boolean68 = magazine6.isRented();
        magazine6.setIsPurchasable(false);
        java.lang.String str71 = magazine6.getAuthor();
        java.lang.Class<?> wildcardClass72 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.toString();
        java.lang.String str13 = magazine6.getLocation();
        magazine6.setBorrowerEmail("LibraryItem [itemId=5334, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=5383, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=5383, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        double double11 = magazine6.calculateOverduePenalty();
        int int12 = magazine6.getItemId();
        items.Magazine magazine19 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str20 = magazine19.getTitle();
        java.lang.String str21 = magazine19.getTitle();
        magazine19.setIsPurchasable(true);
        java.lang.String str24 = magazine19.getBorrowerEmail();
        magazine19.returnItem();
        java.lang.String str26 = magazine19.getPrice();
        items.Magazine magazine33 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str34 = magazine33.getPublisher();
        java.lang.String str35 = magazine33.getBorrowerEmail();
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getTitle();
        java.lang.String str44 = magazine42.getTitle();
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        items.Magazine magazine74 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str75 = magazine74.getPublisher();
        double double76 = magazine74.calculateOverduePenalty();
        items.Magazine magazine83 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { magazine58, magazine66, magazine74, magazine83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = magazine51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = magazine42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = magazine33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = magazine19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5384 + "'", int12 == 5384);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean64 = magazine6.isPurchasable();
        java.lang.String str65 = magazine6.getDetails();
        java.lang.String str66 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str65, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str66, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.getPublisher();
        java.lang.String str12 = magazine6.getPrice();
        java.lang.String str13 = magazine6.getBorrowerEmail();
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate14, 302, "LibraryItem [itemId=5256, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=5416, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=5416, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        java.lang.String str11 = magazine6.getPublisher();
        double double12 = magazine6.calculateOverduePenalty();
        java.lang.String str13 = magazine6.getLocation();
        magazine6.setBorrowerEmail("LibraryItem [itemId=980, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = magazine6.isOverdue();
        java.time.LocalDate localDate17 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate17, 4335, "LibraryItem [itemId=4829, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5436 + "'", int8 == 5436);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=338, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getDetails();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isRented();
        boolean boolean10 = magazine6.isRented();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate11, 4885, "LibraryItem [itemId=1773, itemType=Magazine, location=Magazine, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        magazine6.returnItem();
        magazine6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "Magazine: . Location: . Purchasable: true", "LibraryItem [itemId=341, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = magazine6.calculateOverduePenalty();
        items.Magazine magazine14 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str15 = magazine14.getTitle();
        java.lang.String str16 = magazine14.getTitle();
        magazine14.setIsPurchasable(true);
        java.lang.String str19 = magazine14.getBorrowerEmail();
        java.lang.String str20 = magazine14.getItemType();
        boolean boolean21 = magazine14.isOverdue();
        java.lang.String str22 = magazine14.getAuthor();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getTitle();
        java.lang.String str31 = magazine29.getTitle();
        java.lang.String str32 = magazine29.getItemType();
        java.lang.String str33 = magazine29.getAuthor();
        java.lang.String str34 = magazine29.getItemType();
        java.lang.String str35 = magazine29.getItemType();
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getTitle();
        java.lang.String str44 = magazine42.getTitle();
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        items.Magazine magazine74 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str75 = magazine74.getPublisher();
        double double76 = magazine74.calculateOverduePenalty();
        items.Magazine magazine83 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { magazine58, magazine66, magazine74, magazine83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = magazine51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = magazine42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = magazine29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = magazine14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean92 = magazine6.isPurchasable();
        double double93 = magazine6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Magazine" + "'", str20, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Magazine" + "'", str32, "Magazine");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Magazine" + "'", str34, "Magazine");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Magazine" + "'", str35, "Magazine");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        boolean boolean11 = magazine6.isRented();
        java.util.List<items.LibraryItem> libraryItemList12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = magazine6.hasBorrowingPrivileges(libraryItemList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5492 + "'", int9 == 5492);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.Class<?> wildcardClass12 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5493 + "'", int8 == 5493);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1228, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=606, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=606, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPrice();
        magazine6.setBorrowerEmail("LibraryItem [itemId=1888, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str10 = magazine6.getTitle();
        boolean boolean11 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=606, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=606, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        magazine6.setIsPurchasable(true);
        magazine6.setBorrowerEmail("LibraryItem [itemId=1888, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=5044, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2673, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3115, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4982, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.time.LocalDate localDate66 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate66, 2575, "LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        magazine6.returnItem();
        java.lang.String str57 = magazine6.getBorrowerEmail();
        java.lang.String str58 = magazine6.getPrice();
        java.lang.String str59 = magazine6.toString();
        java.lang.String str60 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("LibraryItem [itemId=3944, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str63 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "LibraryItem [itemId=5524, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str59, "LibraryItem [itemId=5524, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "LibraryItem [itemId=3944, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str63, "LibraryItem [itemId=3944, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getTitle();
        magazine6.returnItem();
        magazine6.setBorrowerEmail("LibraryItem [itemId=3425, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean71 = magazine6.isRented();
        java.time.LocalDate localDate72 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate72, 3130, "LibraryItem [itemId=5217, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1888, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4829, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1951, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Magazine" + "'", str8, "Magazine");
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.getPublisher();
        java.lang.String str12 = magazine6.getPrice();
        boolean boolean13 = magazine6.isRented();
        int int14 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=5557, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=5557, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5557 + "'", int14 == 5557);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("");
        java.lang.String str13 = magazine6.getPrice();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2141, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        boolean boolean56 = magazine6.isPurchasable();
        java.lang.String str57 = magazine6.getItemType();
        java.lang.String str58 = magazine6.getItemType();
        boolean boolean59 = magazine6.isPurchasable();
        java.lang.String str60 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Magazine" + "'", str57, "Magazine");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Magazine" + "'", str58, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Magazine" + "'", str60, "Magazine");
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        magazine6.setIsPurchasable(false);
        boolean boolean12 = magazine6.isOverdue();
        java.lang.String str13 = magazine6.getTitle();
        magazine6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        java.lang.String str55 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("Magazine: . Location: . Purchasable: false");
        boolean boolean58 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        boolean boolean19 = magazine16.isOverdue();
        items.Magazine magazine26 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str27 = magazine26.getTitle();
        java.lang.String str28 = magazine26.getTitle();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getPublisher();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        double double60 = magazine58.calculateOverduePenalty();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { magazine42, magazine50, magazine58, magazine67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean72 = magazine26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean73 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean74 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        double double75 = magazine6.calculateOverduePenalty();
        java.lang.String str76 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "LibraryItem [itemId=5657, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str76, "LibraryItem [itemId=5657, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        java.lang.String str13 = magazine6.getLocation();
        boolean boolean14 = magazine6.isRented();
        java.lang.String str15 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5673 + "'", int8 == 5673);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=997, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1228, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getItemType();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str16 = magazine15.getTitle();
        java.lang.String str17 = magazine15.getTitle();
        items.Magazine magazine24 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine31 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str32 = magazine31.getPublisher();
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getPublisher();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        double double49 = magazine47.calculateOverduePenalty();
        items.Magazine magazine56 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray57 = new items.LibraryItem[] { magazine31, magazine39, magazine47, magazine56 };
        java.util.ArrayList<items.LibraryItem> libraryItemList58 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList58, libraryItemArray57);
        boolean boolean60 = magazine24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList58);
        boolean boolean61 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList58);
        boolean boolean62 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList58);
        java.lang.Class<?> wildcardClass63 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Magazine" + "'", str8, "Magazine");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.setLocation("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = magazine6.getBorrowerEmail();
        int int10 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5694 + "'", int10 == 5694);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        items.Magazine magazine6 = new items.Magazine("", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=453, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.returnItem();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate8, 617, "LibraryItem [itemId=4249, itemType=Magazine, location=Magazine, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getPrice();
        boolean boolean68 = magazine6.isRented();
        magazine6.setIsPurchasable(false);
        int int71 = magazine6.getItemId();
        boolean boolean72 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 5707 + "'", int71 == 5707);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.returnItem();
        int int11 = magazine6.getItemId();
        java.lang.String str12 = magazine6.getPrice();
        java.lang.String str13 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5714 + "'", int8 == 5714);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5714 + "'", int11 == 5714);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean64 = magazine6.isPurchasable();
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        int int67 = magazine6.getItemId();
        java.lang.String str68 = magazine6.getBorrowerEmail();
        magazine6.setBorrowerEmail("LibraryItem [itemId=2038, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 5716 + "'", int67 == 5716);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean64 = magazine6.isPurchasable();
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        magazine6.returnItem();
        magazine6.returnItem();
        double double69 = magazine6.calculateOverduePenalty();
        java.lang.String str70 = magazine6.getDetails();
        boolean boolean71 = magazine6.isPurchasable();
        java.lang.String str72 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Magazine: . Location: Magazine: . Location: . Purchasable: false. Purchasable: false" + "'", str70, "Magazine: . Location: Magazine: . Location: . Purchasable: false. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        boolean boolean55 = magazine6.isRented();
        java.lang.String str56 = magazine6.getDetails();
        java.lang.String str57 = magazine6.getAuthor();
        boolean boolean58 = magazine6.isRented();
        java.lang.String str59 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str56, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getBorrowerEmail();
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.setBorrowerEmail("Magazine: . Location: Magazine: . Location: . Purchasable: false. Purchasable: false");
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate14, 4444, "LibraryItem [itemId=979, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        boolean boolean56 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("hi!");
        magazine6.setLocation("LibraryItem [itemId=1359, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        magazine6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        java.lang.String str67 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "LibraryItem [itemId=5856, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str67, "LibraryItem [itemId=5856, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isPurchasable();
        magazine6.setLocation("LibraryItem [itemId=1645, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass13 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5871 + "'", int9 == 5871);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        boolean boolean67 = magazine6.isRented();
        boolean boolean68 = magazine6.isOverdue();
        magazine6.returnItem();
        java.lang.String str70 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=4829, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5124, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=828, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2938, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getPublisher();
        boolean boolean12 = magazine6.isPurchasable();
        boolean boolean13 = magazine6.isPurchasable();
        java.lang.String str14 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate10, 2401, "LibraryItem [itemId=3325, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getItemType();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("Magazine: . Location: . Purchasable: false");
        magazine6.setLocation("hi!");
        magazine6.setLocation("LibraryItem [itemId=1587, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine" + "'", str9, "Magazine");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Magazine" + "'", str17, "Magazine");
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        boolean boolean11 = magazine6.isRented();
        java.lang.String str12 = magazine6.getPublisher();
        java.lang.String str13 = magazine6.getItemType();
        double double14 = magazine6.calculateOverduePenalty();
        magazine6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5933 + "'", int9 == 5933);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Magazine" + "'", str13, "Magazine");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getTitle();
        boolean boolean13 = magazine6.isPurchasable();
        java.lang.Class<?> wildcardClass14 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        boolean boolean13 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int16 = magazine6.getItemId();
        java.lang.String str17 = magazine6.getDetails();
        int int18 = magazine6.getItemId();
        java.lang.String str19 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5952 + "'", int16 == 5952);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str17, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5952 + "'", int18 == 5952);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        magazine6.setBorrowerEmail("LibraryItem [itemId=854, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str71 = magazine6.getItemType();
        java.lang.String str72 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Magazine" + "'", str71, "Magazine");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        items.Magazine magazine14 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str15 = magazine14.getTitle();
        java.lang.String str16 = magazine14.getTitle();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        items.Magazine magazine46 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str47 = magazine46.getPublisher();
        double double48 = magazine46.calculateOverduePenalty();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray56 = new items.LibraryItem[] { magazine30, magazine38, magazine46, magazine55 };
        java.util.ArrayList<items.LibraryItem> libraryItemList57 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList57, libraryItemArray56);
        boolean boolean59 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean60 = magazine14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList57);
        boolean boolean61 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList57);
        java.lang.String str62 = magazine6.getItemType();
        boolean boolean63 = magazine6.isOverdue();
        int int64 = magazine6.getItemId();
        magazine6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Magazine" + "'", str62, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5966 + "'", int64 == 5966);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        boolean boolean67 = magazine6.isRented();
        java.lang.String str68 = magazine6.getDetails();
        double double69 = magazine6.calculateOverduePenalty();
        java.lang.String str70 = magazine6.getLocation();
        java.lang.String str71 = magazine6.getPrice();
        java.lang.String str72 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str68, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getPrice();
        magazine6.returnItem();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate13, 1772, "LibraryItem [itemId=2085, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5980 + "'", int9 == 5980);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.returnItem();
        magazine6.setIsPurchasable(false);
        java.lang.String str12 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5981 + "'", int8 == 5981);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("");
        magazine6.setBorrowerEmail("hi!");
        java.lang.String str15 = magazine6.getPublisher();
        java.lang.String str16 = magazine6.getAuthor();
        java.lang.String str17 = magazine6.getItemType();
        magazine6.setBorrowerEmail("LibraryItem [itemId=5738, itemType=Magazine, location=Magazine: Magazine. Location: Magazine. Purchasable: true, purchasable=false, title=LibraryItem [itemId=1391, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Magazine" + "'", str17, "Magazine");
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        items.Magazine magazine6 = new items.Magazine("Magazine", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Magazine", "Magazine");
        java.lang.String str7 = magazine6.getDetails();
        magazine6.setBorrowerEmail("LibraryItem [itemId=1228, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str10 = magazine6.toString();
        java.lang.String str11 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Magazine: Magazine. Location: Magazine. Purchasable: true" + "'", str7, "Magazine: Magazine. Location: Magazine. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=5999, itemType=Magazine, location=Magazine, purchasable=true, title=Magazine, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=5999, itemType=Magazine, location=Magazine, purchasable=true, title=Magazine, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine" + "'", str11, "Magazine");
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        magazine6.setBorrowerEmail("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int69 = magazine6.getItemId();
        java.lang.String str70 = magazine6.getDetails();
        int int71 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 6000 + "'", int69 == 6000);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str70, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 6000 + "'", int71 == 6000);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        boolean boolean13 = magazine6.isPurchasable();
        boolean boolean14 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("");
        magazine6.setBorrowerEmail("LibraryItem [itemId=4540, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int19 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 6007 + "'", int19 == 6007);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.String str56 = magazine6.getPrice();
        double double57 = magazine6.calculateOverduePenalty();
        java.lang.String str58 = magazine6.getPrice();
        java.lang.String str59 = magazine6.toString();
        boolean boolean60 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "LibraryItem [itemId=6010, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str59, "LibraryItem [itemId=6010, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        magazine6.setLocation("Magazine");
        java.lang.String str13 = magazine6.getTitle();
        items.Magazine magazine20 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine20.setLocation("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str23 = magazine20.getBorrowerEmail();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getTitle();
        java.lang.String str32 = magazine30.getTitle();
        java.lang.String str33 = magazine30.getItemType();
        java.lang.String str34 = magazine30.getAuthor();
        java.lang.String str35 = magazine30.getItemType();
        java.lang.String str36 = magazine30.getItemType();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str44 = magazine43.getTitle();
        java.lang.String str45 = magazine43.getTitle();
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str76 = magazine75.getPublisher();
        double double77 = magazine75.calculateOverduePenalty();
        items.Magazine magazine84 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { magazine59, magazine67, magazine75, magazine84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = magazine52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = magazine30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = magazine20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6035 + "'", int8 == 6035);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Magazine" + "'", str33, "Magazine");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Magazine" + "'", str35, "Magazine");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Magazine" + "'", str36, "Magazine");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        java.lang.String str11 = magazine6.getPublisher();
        double double12 = magazine6.calculateOverduePenalty();
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getTitle();
        java.lang.String str23 = magazine21.getTitle();
        java.lang.String str24 = magazine21.toString();
        magazine21.setIsPurchasable(false);
        items.Magazine magazine33 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str34 = magazine33.getPublisher();
        double double35 = magazine33.calculateOverduePenalty();
        int int36 = magazine33.getItemId();
        boolean boolean37 = magazine33.isRented();
        double double38 = magazine33.calculateOverduePenalty();
        items.Magazine magazine45 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str53 = magazine52.getPublisher();
        items.Magazine magazine60 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str61 = magazine60.getPublisher();
        items.Magazine magazine68 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str69 = magazine68.getPublisher();
        double double70 = magazine68.calculateOverduePenalty();
        items.Magazine magazine77 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { magazine52, magazine60, magazine68, magazine77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = magazine45.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = magazine33.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = magazine21.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        java.lang.String str85 = magazine6.getTitle();
        double double86 = magazine6.calculateOverduePenalty();
        java.lang.String str87 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6044 + "'", int8 == 6044);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "LibraryItem [itemId=6045, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str24, "LibraryItem [itemId=6045, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 6046 + "'", int36 == 6046);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.returnItem();
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.setLocation("LibraryItem [itemId=1587, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6064 + "'", int8 == 6064);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=1587, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=1587, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "hi!", false, false, "LibraryItem [itemId=654, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        boolean boolean7 = magazine6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        int int65 = magazine6.getItemId();
        java.lang.String str66 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 6079 + "'", int65 == 6079);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=4305, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", true, false, "LibraryItem [itemId=2421, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false");
        java.lang.Class<?> wildcardClass7 = magazine6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.toString();
        magazine6.setLocation("LibraryItem [itemId=5587, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6092 + "'", int9 == 6092);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6092, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6092, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        java.lang.String str9 = magazine6.getPrice();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getPublisher();
        items.Magazine magazine24 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str25 = magazine24.getTitle();
        java.lang.String str26 = magazine24.getTitle();
        items.Magazine magazine33 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        items.Magazine magazine56 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str57 = magazine56.getPublisher();
        double double58 = magazine56.calculateOverduePenalty();
        items.Magazine magazine65 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { magazine40, magazine48, magazine56, magazine65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = magazine33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = magazine24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = magazine16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean72 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        java.time.LocalDate localDate73 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate73, 1072, "LibraryItem [itemId=854, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        int int9 = magazine6.getItemId();
        boolean boolean10 = magazine6.isRented();
        double double11 = magazine6.calculateOverduePenalty();
        java.lang.String str12 = magazine6.getAuthor();
        boolean boolean13 = magazine6.isOverdue();
        boolean boolean14 = magazine6.isPurchasable();
        java.lang.String str15 = magazine6.getPublisher();
        java.lang.String str16 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6101 + "'", int9 == 6101);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Magazine" + "'", str16, "Magazine");
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "hi!", false, false, "LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        java.lang.Class<?> wildcardClass7 = magazine6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("LibraryItem [itemId=918, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int14 = magazine6.getItemId();
        java.lang.String str15 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6103 + "'", int14 == 6103);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1910, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5179, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=4023, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5786, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.returnItem();
        java.lang.String str9 = magazine6.getPublisher();
        java.lang.String str10 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        java.lang.String str67 = magazine6.getPublisher();
        java.lang.String str68 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        magazine6.setLocation("Magazine: . Location: . Purchasable: false");
        magazine6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "hi!", false, false, "LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        boolean boolean7 = magazine6.isRented();
        java.lang.String str8 = magazine6.getItemType();
        java.lang.String str9 = magazine6.toString();
        java.lang.String str10 = magazine6.getLocation();
        boolean boolean11 = magazine6.isRented();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 3416, "LibraryItem [itemId=3685, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Magazine" + "'", str8, "Magazine");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6149, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6149, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        boolean boolean66 = magazine6.isRented();
        magazine6.returnItem();
        boolean boolean68 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        magazine6.setBorrowerEmail("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int69 = magazine6.getItemId();
        java.lang.String str70 = magazine6.getLocation();
        java.lang.String str71 = magazine6.getPublisher();
        magazine6.returnItem();
        java.lang.String str73 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 6167 + "'", int69 == 6167);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str73, "LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getDetails();
        magazine6.setLocation("");
        magazine6.setIsPurchasable(false);
        int int17 = magazine6.getItemId();
        java.lang.String str18 = magazine6.getPublisher();
        magazine6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str12, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 6175 + "'", int17 == 6175);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getPublisher();
        items.Magazine magazine17 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str18 = magazine17.getPublisher();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str26 = magazine25.getTitle();
        java.lang.String str27 = magazine25.getTitle();
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine41 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str42 = magazine41.getPublisher();
        items.Magazine magazine49 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str50 = magazine49.getPublisher();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str58 = magazine57.getPublisher();
        double double59 = magazine57.calculateOverduePenalty();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray67 = new items.LibraryItem[] { magazine41, magazine49, magazine57, magazine66 };
        java.util.ArrayList<items.LibraryItem> libraryItemList68 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList68, libraryItemArray67);
        boolean boolean70 = magazine34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList68);
        boolean boolean71 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList68);
        boolean boolean72 = magazine17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList68);
        boolean boolean73 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList68);
        java.lang.Class<?> wildcardClass74 = libraryItemList68.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6176 + "'", int9 == 6176);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        magazine6.setIsPurchasable(false);
        java.lang.String str12 = magazine6.getDetails();
        java.lang.Class<?> wildcardClass13 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6184, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6184, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str12, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        boolean boolean56 = magazine6.isPurchasable();
        magazine6.setBorrowerEmail("hi!");
        java.lang.String str59 = magazine6.getPublisher();
        java.lang.String str60 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        items.Magazine magazine6 = new items.Magazine("Magazine", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Magazine", "Magazine");
        boolean boolean7 = magazine6.isRented();
        java.lang.String str8 = magazine6.toString();
        magazine6.returnItem();
        java.lang.String str10 = magazine6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6205, itemType=Magazine, location=Magazine, purchasable=true, title=Magazine, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6205, itemType=Magazine, location=Magazine, purchasable=true, title=Magazine, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine: Magazine. Location: Magazine. Purchasable: true" + "'", str10, "Magazine: Magazine. Location: Magazine. Purchasable: true");
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        magazine6.setBorrowerEmail("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean12 = magazine6.isRented();
        java.lang.String str13 = magazine6.toString();
        java.lang.Class<?> wildcardClass14 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=6207, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=6207, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        magazine6.setLocation("");
        java.lang.String str66 = magazine6.getItemType();
        boolean boolean67 = magazine6.isRented();
        java.lang.String str68 = magazine6.getDetails();
        int int69 = magazine6.getItemId();
        magazine6.setLocation("LibraryItem [itemId=1044, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str72 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Magazine" + "'", str66, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str68, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 6220 + "'", int69 == 6220);
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "LibraryItem [itemId=6220, itemType=Magazine, location=LibraryItem [itemId=1044, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str72, "LibraryItem [itemId=6220, itemType=Magazine, location=LibraryItem [itemId=1044, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5587, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=2735, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1910, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        java.lang.String str9 = magazine6.getPrice();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6260, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6260, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        java.lang.String str9 = magazine6.getPrice();
        boolean boolean10 = magazine6.isOverdue();
        java.lang.String str11 = magazine6.getPublisher();
        java.lang.String str12 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6270 + "'", int8 == 6270);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getDetails();
        boolean boolean12 = magazine6.isOverdue();
        java.lang.String str13 = magazine6.toString();
        java.lang.String str14 = magazine6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str11, "Magazine: . Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=6278, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=6278, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        magazine6.setIsPurchasable(false);
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate12, 4734, "LibraryItem [itemId=3491, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "hi!", false, false, "LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        boolean boolean7 = magazine6.isRented();
        magazine6.setLocation("LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass10 = magazine6.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getItemType();
        magazine6.setLocation("");
        magazine6.setBorrowerEmail("");
        double double15 = magazine6.calculateOverduePenalty();
        magazine6.returnItem();
        java.lang.String str17 = magazine6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine" + "'", str10, "Magazine");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        int int65 = magazine6.getItemId();
        java.lang.String str66 = magazine6.getLocation();
        magazine6.setIsPurchasable(false);
        java.lang.String str69 = magazine6.getPublisher();
        magazine6.returnItem();
        java.lang.String str71 = magazine6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 6306 + "'", int65 == 6306);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        double double11 = magazine6.calculateOverduePenalty();
        magazine6.setLocation("LibraryItem [itemId=6227, itemType=Magazine, location=Magazine, purchasable=true, title=Magazine, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        java.lang.String str9 = magazine6.getPrice();
        boolean boolean10 = magazine6.isRented();
        items.Magazine magazine17 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str18 = magazine17.getPublisher();
        double double19 = magazine17.calculateOverduePenalty();
        int int20 = magazine17.getItemId();
        boolean boolean21 = magazine17.isRented();
        boolean boolean22 = magazine17.isOverdue();
        items.Magazine magazine29 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str30 = magazine29.getTitle();
        java.lang.String str31 = magazine29.getTitle();
        java.lang.String str32 = magazine29.getItemType();
        java.lang.String str33 = magazine29.getAuthor();
        java.lang.String str34 = magazine29.getItemType();
        java.lang.String str35 = magazine29.getItemType();
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getTitle();
        java.lang.String str44 = magazine42.getTitle();
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        items.Magazine magazine74 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str75 = magazine74.getPublisher();
        double double76 = magazine74.calculateOverduePenalty();
        items.Magazine magazine83 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { magazine58, magazine66, magazine74, magazine83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = magazine51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = magazine42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = magazine29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = magazine17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        magazine6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 6318 + "'", int20 == 6318);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Magazine" + "'", str32, "Magazine");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Magazine" + "'", str34, "Magazine");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Magazine" + "'", str35, "Magazine");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isPurchasable();
        double double12 = magazine6.calculateOverduePenalty();
        java.lang.String str13 = magazine6.getDetails();
        magazine6.setLocation("LibraryItem [itemId=2038, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str13, "Magazine: . Location: . Purchasable: false");
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        java.lang.String str67 = magazine6.getAuthor();
        java.lang.String str68 = magazine6.getLocation();
        java.lang.Class<?> wildcardClass69 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=2451, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3661, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5634, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate7, 1669, "LibraryItem [itemId=1041, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(true);
        java.lang.String str12 = magazine6.getLocation();
        java.lang.String str13 = magazine6.getLocation();
        boolean boolean14 = magazine6.isRented();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getTitle();
        java.lang.String str23 = magazine21.getTitle();
        boolean boolean24 = magazine21.isOverdue();
        java.lang.String str25 = magazine21.getAuthor();
        boolean boolean26 = magazine21.isOverdue();
        java.lang.String str27 = magazine21.getBorrowerEmail();
        java.lang.String str28 = magazine21.toString();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getPublisher();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str44 = magazine43.getTitle();
        java.lang.String str45 = magazine43.getTitle();
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str76 = magazine75.getPublisher();
        double double77 = magazine75.calculateOverduePenalty();
        items.Magazine magazine84 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { magazine59, magazine67, magazine75, magazine84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = magazine52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = magazine35.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = magazine21.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str93 = magazine6.getBorrowerEmail();
        java.lang.String str94 = magazine6.getDetails();
        java.time.LocalDate localDate95 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate95, 1653, "LibraryItem [itemId=4829, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6346 + "'", int8 == 6346);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LibraryItem [itemId=6347, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str28, "LibraryItem [itemId=6347, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str94, "Magazine: . Location: . Purchasable: true");
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setBorrowerEmail("Magazine: LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.Class<?> wildcardClass11 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        double double12 = magazine6.calculateOverduePenalty();
        boolean boolean13 = magazine6.isPurchasable();
        boolean boolean14 = magazine6.isPurchasable();
        magazine6.setIsPurchasable(false);
        java.lang.String str17 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        int int10 = magazine6.getItemId();
        java.lang.String str11 = magazine6.getLocation();
        magazine6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6370 + "'", int8 == 6370);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6370 + "'", int10 == 6370);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        java.lang.String str9 = magazine6.getPrice();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        boolean boolean19 = magazine16.isOverdue();
        java.lang.String str20 = magazine16.getAuthor();
        boolean boolean21 = magazine16.isOverdue();
        java.lang.String str22 = magazine16.getBorrowerEmail();
        java.lang.String str23 = magazine16.toString();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getTitle();
        java.lang.String str40 = magazine38.getTitle();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine54 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str55 = magazine54.getPublisher();
        items.Magazine magazine62 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str63 = magazine62.getPublisher();
        items.Magazine magazine70 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str71 = magazine70.getPublisher();
        double double72 = magazine70.calculateOverduePenalty();
        items.Magazine magazine79 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { magazine54, magazine62, magazine70, magazine79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = magazine47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = magazine38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = magazine30.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = magazine16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean87 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        magazine6.setIsPurchasable(true);
        java.lang.String str90 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "LibraryItem [itemId=6379, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str23, "LibraryItem [itemId=6379, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1493, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2142, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=5225, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4279, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        magazine6.setLocation("");
        java.lang.String str13 = magazine6.getLocation();
        magazine6.setIsPurchasable(true);
        java.lang.String str16 = magazine6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6410 + "'", int8 == 6410);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str16, "Magazine: . Location: . Purchasable: true");
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.getPublisher();
        int int12 = magazine6.getItemId();
        magazine6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6411, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6411, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 6411 + "'", int12 == 6411);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean53 = magazine6.isRented();
        boolean boolean54 = magazine6.isOverdue();
        java.lang.String str55 = magazine6.getLocation();
        java.lang.String str56 = magazine6.getPrice();
        double double57 = magazine6.calculateOverduePenalty();
        java.lang.String str58 = magazine6.getPrice();
        java.lang.String str59 = magazine6.toString();
        java.lang.String str60 = magazine6.getItemType();
        java.lang.String str61 = magazine6.getBorrowerEmail();
        magazine6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "LibraryItem [itemId=6412, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str59, "LibraryItem [itemId=6412, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Magazine" + "'", str60, "Magazine");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.setLocation("LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int9 = magazine6.getItemId();
        java.lang.String str10 = magazine6.getLocation();
        magazine6.setIsPurchasable(false);
        int int13 = magazine6.getItemId();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6418 + "'", int9 == 6418);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 6418 + "'", int13 == 6418);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        boolean boolean10 = magazine6.isOverdue();
        boolean boolean11 = magazine6.isPurchasable();
        java.lang.String str12 = magazine6.getLocation();
        boolean boolean13 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        magazine6.setLocation("LibraryItem [itemId=2589, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str13 = magazine6.getAuthor();
        java.lang.Class<?> wildcardClass14 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1391, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        magazine6.setLocation("Magazine: Magazine. Location: Magazine. Purchasable: true");
        java.lang.String str9 = magazine6.getPublisher();
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate10, 2613, "LibraryItem [itemId=3383, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getPrice();
        double double11 = magazine6.calculateOverduePenalty();
        magazine6.returnItem();
        magazine6.returnItem();
        double double14 = magazine6.calculateOverduePenalty();
        java.lang.String str15 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        java.lang.String str55 = magazine6.getAuthor();
        magazine6.setBorrowerEmail("LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate58 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate58, 1253, "LibraryItem [itemId=5334, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1587, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: . Location: Magazine: Magazine. Location: Magazine. Purchasable: true. Purchasable: false", true, false, "LibraryItem [itemId=4207, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=918, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        boolean boolean11 = magazine6.isOverdue();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getPublisher();
        boolean boolean20 = magazine18.isRented();
        items.Magazine magazine27 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str28 = magazine27.getPublisher();
        items.Magazine magazine35 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str36 = magazine35.getTitle();
        java.lang.String str37 = magazine35.getTitle();
        items.Magazine magazine44 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine51 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str52 = magazine51.getPublisher();
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str60 = magazine59.getPublisher();
        items.Magazine magazine67 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str68 = magazine67.getPublisher();
        double double69 = magazine67.calculateOverduePenalty();
        items.Magazine magazine76 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { magazine51, magazine59, magazine67, magazine76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = magazine44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = magazine35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = magazine27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean83 = magazine18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean84 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        java.lang.String str85 = magazine6.getLocation();
        java.lang.String str86 = magazine6.getLocation();
        java.lang.String str87 = magazine6.getPrice();
        magazine6.returnItem();
        double double89 = magazine6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass90 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        items.Magazine magazine6 = new items.Magazine("", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=453, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = magazine6.calculateOverduePenalty();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate8, 5557, "LibraryItem [itemId=6026, itemType=Magazine, location=LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1391, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        boolean boolean67 = magazine6.isPurchasable();
        java.lang.String str68 = magazine6.getDetails();
        java.lang.String str69 = magazine6.toString();
        magazine6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str68, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "LibraryItem [itemId=6481, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str69, "LibraryItem [itemId=6481, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        java.lang.Class<?> wildcardClass9 = magazine6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        magazine6.returnItem();
        boolean boolean9 = magazine6.isOverdue();
        boolean boolean10 = magazine6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        items.Magazine magazine6 = new items.Magazine("Magazine", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Magazine", "Magazine");
        boolean boolean7 = magazine6.isRented();
        java.lang.String str8 = magazine6.toString();
        boolean boolean9 = magazine6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6498, itemType=Magazine, location=Magazine, purchasable=true, title=Magazine, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6498, itemType=Magazine, location=Magazine, purchasable=true, title=Magazine, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        java.lang.String str10 = magazine6.getLocation();
        java.lang.String str11 = magazine6.getPublisher();
        double double12 = magazine6.calculateOverduePenalty();
        boolean boolean13 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6508, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6508, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=5415, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6010, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=3819, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2421, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=2106, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5383, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        items.Magazine magazine16 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str17 = magazine16.getTitle();
        java.lang.String str18 = magazine16.getTitle();
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getPublisher();
        items.Magazine magazine40 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str41 = magazine40.getPublisher();
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        double double50 = magazine48.calculateOverduePenalty();
        items.Magazine magazine57 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray58 = new items.LibraryItem[] { magazine32, magazine40, magazine48, magazine57 };
        java.util.ArrayList<items.LibraryItem> libraryItemList59 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList59, libraryItemArray58);
        boolean boolean61 = magazine25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean62 = magazine16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        boolean boolean63 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList59);
        java.lang.String str64 = magazine6.getDetails();
        magazine6.setIsPurchasable(false);
        magazine6.setBorrowerEmail("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int69 = magazine6.getItemId();
        java.lang.String str70 = magazine6.getLocation();
        magazine6.returnItem();
        boolean boolean72 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str64, "Magazine: . Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 6528 + "'", int69 == 6528);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        magazine6.setBorrowerEmail("");
        java.lang.String str11 = magazine6.getPublisher();
        items.Magazine magazine18 = new items.Magazine("hi!", "Magazine: . Location: . Purchasable: false", false, true, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine");
        items.Magazine magazine25 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str26 = magazine25.getTitle();
        java.lang.String str27 = magazine25.getTitle();
        boolean boolean28 = magazine25.isOverdue();
        java.lang.String str29 = magazine25.getAuthor();
        boolean boolean30 = magazine25.isOverdue();
        java.lang.String str31 = magazine25.getBorrowerEmail();
        java.lang.String str32 = magazine25.toString();
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getPublisher();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getTitle();
        java.lang.String str49 = magazine47.getTitle();
        items.Magazine magazine56 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine63 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str64 = magazine63.getPublisher();
        items.Magazine magazine71 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str72 = magazine71.getPublisher();
        items.Magazine magazine79 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str80 = magazine79.getPublisher();
        double double81 = magazine79.calculateOverduePenalty();
        items.Magazine magazine88 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { magazine63, magazine71, magazine79, magazine88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = magazine56.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = magazine47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = magazine39.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = magazine25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = magazine18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean97 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean98 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6537 + "'", int8 == 6537);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "LibraryItem [itemId=6539, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str32, "LibraryItem [itemId=6539, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        java.lang.String str12 = magazine6.getItemType();
        boolean boolean13 = magazine6.isOverdue();
        java.lang.String str14 = magazine6.getAuthor();
        items.Magazine magazine21 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str22 = magazine21.getTitle();
        java.lang.String str23 = magazine21.getTitle();
        java.lang.String str24 = magazine21.getItemType();
        java.lang.String str25 = magazine21.getAuthor();
        java.lang.String str26 = magazine21.getItemType();
        java.lang.String str27 = magazine21.getItemType();
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getTitle();
        java.lang.String str36 = magazine34.getTitle();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        double double68 = magazine66.calculateOverduePenalty();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { magazine50, magazine58, magazine66, magazine75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = magazine34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = magazine21.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        java.lang.String str83 = magazine6.getDetails();
        java.time.LocalDate localDate84 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate84, 2921, "LibraryItem [itemId=4374, itemType=Magazine, location=LibraryItem [itemId=997, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1186, itemType=Magazine, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine" + "'", str12, "Magazine");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Magazine" + "'", str24, "Magazine");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Magazine" + "'", str26, "Magazine");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Magazine" + "'", str27, "Magazine");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str83, "Magazine: . Location: . Purchasable: true");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=2436, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true", false, false, "LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine: . Location: Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false. Purchasable: false");
        boolean boolean7 = magazine6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        magazine6.setLocation("Magazine: Magazine. Location: Magazine. Purchasable: true");
        java.lang.String str13 = magazine6.getBorrowerEmail();
        java.lang.String str14 = magazine6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Magazine" + "'", str14, "Magazine");
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=122, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Magazine", true, false, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getPrice();
        boolean boolean9 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=144, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        items.Magazine magazine6 = new items.Magazine("Magazine", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "Magazine", "Magazine");
        java.lang.String str7 = magazine6.getDetails();
        magazine6.setLocation("Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str10 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Magazine: Magazine. Location: Magazine. Purchasable: true" + "'", str7, "Magazine: Magazine. Location: Magazine. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Magazine" + "'", str10, "Magazine");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.toString();
        magazine6.setIsPurchasable(false);
        java.lang.String str12 = magazine6.getDetails();
        boolean boolean13 = magazine6.isRented();
        java.lang.String str14 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6590, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6590, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str12, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        double double8 = magazine6.calculateOverduePenalty();
        boolean boolean9 = magazine6.isPurchasable();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getDetails();
        magazine6.setLocation("");
        magazine6.setIsPurchasable(false);
        java.lang.String str17 = magazine6.getPrice();
        int int18 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str12, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 6591 + "'", int18 == 6591);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setLocation("");
        boolean boolean11 = magazine6.isRented();
        magazine6.setBorrowerEmail("LibraryItem [itemId=1677, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Magazine magazine20 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str21 = magazine20.getPublisher();
        boolean boolean22 = magazine20.isRented();
        int int23 = magazine20.getItemId();
        java.lang.String str24 = magazine20.getTitle();
        items.Magazine magazine31 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str32 = magazine31.getPublisher();
        double double33 = magazine31.calculateOverduePenalty();
        int int34 = magazine31.getItemId();
        boolean boolean35 = magazine31.isRented();
        double double36 = magazine31.calculateOverduePenalty();
        items.Magazine magazine43 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        items.Magazine magazine58 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str59 = magazine58.getPublisher();
        items.Magazine magazine66 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str67 = magazine66.getPublisher();
        double double68 = magazine66.calculateOverduePenalty();
        items.Magazine magazine75 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { magazine50, magazine58, magazine66, magazine75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = magazine43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = magazine31.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = magazine20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        int int83 = magazine6.getItemId();
        magazine6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 6593 + "'", int23 == 6593);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 6594 + "'", int34 == 6594);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 6592 + "'", int83 == 6592);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        int int10 = magazine6.getItemId();
        java.lang.String str11 = magazine6.getDetails();
        items.Magazine magazine18 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str19 = magazine18.getTitle();
        java.lang.String str20 = magazine18.getTitle();
        items.Magazine magazine27 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getPublisher();
        items.Magazine magazine42 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str43 = magazine42.getPublisher();
        items.Magazine magazine50 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str51 = magazine50.getPublisher();
        double double52 = magazine50.calculateOverduePenalty();
        items.Magazine magazine59 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray60 = new items.LibraryItem[] { magazine34, magazine42, magazine50, magazine59 };
        java.util.ArrayList<items.LibraryItem> libraryItemList61 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList61, libraryItemArray60);
        boolean boolean63 = magazine27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList61);
        boolean boolean64 = magazine18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList61);
        boolean boolean65 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList61);
        double double66 = magazine6.calculateOverduePenalty();
        magazine6.setBorrowerEmail("LibraryItem [itemId=3661, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double69 = magazine6.calculateOverduePenalty();
        java.time.LocalDate localDate70 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate70, 263, "LibraryItem [itemId=3590, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6609 + "'", int8 == 6609);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6609 + "'", int10 == 6609);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine: . Location: . Purchasable: false" + "'", str11, "Magazine: . Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.toString();
        magazine6.setIsPurchasable(false);
        boolean boolean13 = magazine6.isOverdue();
        java.lang.String str14 = magazine6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=6622, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=6622, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getPublisher();
        items.Magazine magazine30 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str31 = magazine30.getPublisher();
        items.Magazine magazine38 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str39 = magazine38.getPublisher();
        double double40 = magazine38.calculateOverduePenalty();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { magazine22, magazine30, magazine38, magazine47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = magazine15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = magazine6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList49);
        magazine6.setBorrowerEmail("");
        double double55 = magazine6.calculateOverduePenalty();
        java.lang.String str56 = magazine6.getLocation();
        magazine6.setIsPurchasable(true);
        java.lang.String str59 = magazine6.getPublisher();
        java.lang.String str60 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        java.lang.String str8 = magazine6.getBorrowerEmail();
        int int9 = magazine6.getItemId();
        magazine6.setLocation("LibraryItem [itemId=1502, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = magazine6.toString();
        magazine6.setBorrowerEmail("LibraryItem [itemId=616, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6648 + "'", int9 == 6648);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6648, itemType=Magazine, location=LibraryItem [itemId=1502, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6648, itemType=Magazine, location=LibraryItem [itemId=1502, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        int int8 = magazine6.getItemId();
        boolean boolean9 = magazine6.isPurchasable();
        magazine6.returnItem();
        int int11 = magazine6.getItemId();
        java.lang.String str12 = magazine6.getPrice();
        java.lang.String str13 = magazine6.getPublisher();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6649 + "'", int8 == 6649);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 6649 + "'", int11 == 6649);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        java.lang.String str9 = magazine6.getPrice();
        boolean boolean10 = magazine6.isPurchasable();
        magazine6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getPublisher();
        boolean boolean8 = magazine6.isRented();
        items.Magazine magazine15 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str16 = magazine15.getPublisher();
        items.Magazine magazine23 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str24 = magazine23.getTitle();
        java.lang.String str25 = magazine23.getTitle();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine39 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str40 = magazine39.getPublisher();
        items.Magazine magazine47 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str48 = magazine47.getPublisher();
        items.Magazine magazine55 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str56 = magazine55.getPublisher();
        double double57 = magazine55.calculateOverduePenalty();
        items.Magazine magazine64 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { magazine39, magazine47, magazine55, magazine64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = magazine32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = magazine23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = magazine15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        int int72 = magazine6.getItemId();
        magazine6.returnItem();
        magazine6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 6651 + "'", int72 == 6651);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        double double12 = magazine6.calculateOverduePenalty();
        boolean boolean13 = magazine6.isPurchasable();
        boolean boolean14 = magazine6.isPurchasable();
        double double15 = magazine6.calculateOverduePenalty();
        boolean boolean16 = magazine6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getDetails();
        boolean boolean12 = magazine6.isOverdue();
        boolean boolean13 = magazine6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Magazine: . Location: . Purchasable: true" + "'", str11, "Magazine: . Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        boolean boolean9 = magazine6.isOverdue();
        java.lang.String str10 = magazine6.getAuthor();
        boolean boolean11 = magazine6.isOverdue();
        java.lang.String str12 = magazine6.getTitle();
        java.lang.String str13 = magazine6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=1228, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=606, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=606, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = magazine6.getPrice();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            magazine6.rentItem(localDate8, 1721, "LibraryItem [itemId=6412, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=4957, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1056, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=4023, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5738, itemType=Magazine, location=Magazine: Magazine. Location: Magazine. Purchasable: true, purchasable=false, title=LibraryItem [itemId=1391, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Magazine magazine13 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str14 = magazine13.getPublisher();
        double double15 = magazine13.calculateOverduePenalty();
        items.Magazine magazine22 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str23 = magazine22.getTitle();
        java.lang.String str24 = magazine22.getTitle();
        boolean boolean25 = magazine22.isOverdue();
        items.Magazine magazine32 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str33 = magazine32.getTitle();
        java.lang.String str34 = magazine32.getTitle();
        items.Magazine magazine41 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine48 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str49 = magazine48.getPublisher();
        items.Magazine magazine56 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str57 = magazine56.getPublisher();
        items.Magazine magazine64 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str65 = magazine64.getPublisher();
        double double66 = magazine64.calculateOverduePenalty();
        items.Magazine magazine73 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray74 = new items.LibraryItem[] { magazine48, magazine56, magazine64, magazine73 };
        java.util.ArrayList<items.LibraryItem> libraryItemList75 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList75, libraryItemArray74);
        boolean boolean77 = magazine41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList75);
        boolean boolean78 = magazine32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList75);
        boolean boolean79 = magazine22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList75);
        boolean boolean80 = magazine13.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList75);
        boolean boolean81 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList75);
        int int82 = magazine6.getItemId();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 6671 + "'", int82 == 6671);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        items.Magazine magazine6 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str7 = magazine6.getTitle();
        java.lang.String str8 = magazine6.getTitle();
        magazine6.setIsPurchasable(true);
        java.lang.String str11 = magazine6.getBorrowerEmail();
        magazine6.returnItem();
        java.lang.String str13 = magazine6.getLocation();
        magazine6.setLocation("");
        java.lang.String str16 = magazine6.getItemType();
        java.lang.String str17 = magazine6.getLocation();
        items.Magazine magazine24 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str25 = magazine24.getTitle();
        java.lang.String str26 = magazine24.getTitle();
        boolean boolean27 = magazine24.isOverdue();
        items.Magazine magazine34 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str35 = magazine34.getTitle();
        java.lang.String str36 = magazine34.getTitle();
        magazine34.setIsPurchasable(true);
        items.Magazine magazine45 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.Magazine magazine52 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str53 = magazine52.getPublisher();
        items.Magazine magazine60 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str61 = magazine60.getPublisher();
        items.Magazine magazine68 = new items.Magazine("", "hi!", false, true, "", "hi!");
        java.lang.String str69 = magazine68.getPublisher();
        double double70 = magazine68.calculateOverduePenalty();
        items.Magazine magazine77 = new items.Magazine("", "hi!", false, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { magazine52, magazine60, magazine68, magazine77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = magazine45.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = magazine34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = magazine24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = magazine6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        magazine6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Magazine" + "'", str16, "Magazine");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        items.Magazine magazine6 = new items.Magazine("LibraryItem [itemId=3326, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1493, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=2881, itemType=Magazine, location=LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=980, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = magazine6.isRented();
        java.lang.String str8 = magazine6.getPublisher();
        java.lang.String str9 = magazine6.getDetails();
        magazine6.setBorrowerEmail("LibraryItem [itemId=4936, itemType=Magazine, location=Magazine: LibraryItem [itemId=20, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=423, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = magazine6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=980, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=980, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Magazine: LibraryItem [itemId=2881, itemType=Magazine, location=LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=3326, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str9, "Magazine: LibraryItem [itemId=2881, itemType=Magazine, location=LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=3326, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Magazine: LibraryItem [itemId=2881, itemType=Magazine, location=LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=3326, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str12, "Magazine: LibraryItem [itemId=2881, itemType=Magazine, location=LibraryItem [itemId=1184, itemType=Magazine, location=LibraryItem [itemId=405, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=667, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=3326, itemType=Magazine, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }
}
