package AutomatedTesting;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class CD2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.toString();
        java.lang.String str18 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6744 + "'", int14 == 6744);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=6744, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=6744, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        boolean boolean18 = cD15.isPurchasable();
        boolean boolean19 = cD15.isOverdue();
        cD15.returnItem();
        items.CD cD27 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str28 = cD27.getLocation();
        java.lang.String str29 = cD27.getLocation();
        int int30 = cD27.getItemId();
        cD27.setBorrowerEmail("CD");
        java.lang.String str33 = cD27.getArtist();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str41 = cD40.getLocation();
        java.lang.String str42 = cD40.getLocation();
        items.CD cD49 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { cD49, cD56, cD65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = cD40.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = cD15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean72 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        cD6.setLocation("CD: LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str75 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 6747 + "'", int30 == 6747);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str75, "LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        double double15 = cD6.calculateOverduePenalty();
        java.lang.String str16 = cD6.getTitle();
        java.lang.String str17 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6752 + "'", int14 == 6752);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getPrice();
        java.lang.String str51 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=1463, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean54 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6753 + "'", int9 == 6753);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=94, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isRented();
        boolean boolean9 = cD6.isRented();
        boolean boolean10 = cD6.isOverdue();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 6759 + "'", int7 == 6759);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        items.CD cD6 = new items.CD("LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=814, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD13 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD13.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str39 = cD38.getLocation();
        java.lang.String str40 = cD38.getLocation();
        items.CD cD47 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { cD31, cD38, cD47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = cD22.isOverdue();
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str76 = cD75.getLocation();
        java.lang.String str77 = cD75.getLocation();
        items.CD cD84 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { cD68, cD75, cD84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = cD59.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = cD13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str92 = cD6.getPrice();
        java.lang.String str93 = cD6.getTitle();
        java.util.List<items.LibraryItem> libraryItemList94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = cD6.hasExceededBorrowingLimit(libraryItemList94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str93, "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        cD6.returnItem();
        items.CD cD18 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str19 = cD18.getLocation();
        java.lang.String str20 = cD18.getLocation();
        items.CD cD27 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD34 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str35 = cD34.getLocation();
        java.lang.String str36 = cD34.getLocation();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray44 = new items.LibraryItem[] { cD27, cD34, cD43 };
        java.util.ArrayList<items.LibraryItem> libraryItemList45 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList45, libraryItemArray44);
        boolean boolean47 = cD18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList45);
        boolean boolean48 = cD18.isOverdue();
        java.lang.String str49 = cD18.getLocation();
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str73 = cD72.getLocation();
        java.lang.String str74 = cD72.getLocation();
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { cD65, cD72, cD81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = cD56.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = cD18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        cD6.setIsPurchasable(true);
        cD6.setBorrowerEmail("");
        cD6.setBorrowerEmail("LibraryItem [itemId=3979, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        double double13 = cD6.calculateOverduePenalty();
        int int14 = cD6.getItemId();
        java.lang.String str15 = cD6.getArtist();
        cD6.returnItem();
        java.lang.String str17 = cD6.getTitle();
        java.lang.String str18 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6780, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6780, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6780 + "'", int14 == 6780);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getLocation();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getItemType();
        java.lang.Class<?> wildcardClass14 = cD6.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6781, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6781, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getPrice();
        boolean boolean18 = cD6.isRented();
        cD6.setLocation("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6782 + "'", int14 == 6782);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        items.CD cD6 = new items.CD("LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass7 = cD6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isPurchasable();
        boolean boolean15 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 6791 + "'", int11 == 6791);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        boolean boolean89 = cD6.isOverdue();
        cD6.setLocation("LibraryItem [itemId=1892, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str92 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6792, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6792, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=6792, itemType=CD, location=LibraryItem [itemId=1892, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=6792, itemType=CD, location=LibraryItem [itemId=1892, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getLocation();
        java.lang.String str11 = cD6.getDetails();
        java.lang.String str12 = cD6.getPrice();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 6801 + "'", int7 == 6801);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD:  by hi!. Location: . Purchasable: false" + "'", str11, "CD:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        cD6.returnItem();
        java.lang.String str40 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=5215, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "LibraryItem [itemId=6802, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str40, "LibraryItem [itemId=6802, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        items.CD cD6 = new items.CD("LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=4607, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        boolean boolean38 = cD6.isOverdue();
        int int39 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 6808 + "'", int39 == 6808);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        items.CD cD6 = new items.CD("LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=359, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1964, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD16 = new items.CD("LibraryItem [itemId=1945, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=2677, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str17 = cD16.getArtist();
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.getLocation();
        int int27 = cD24.getItemId();
        java.lang.String str28 = cD24.getBorrowerEmail();
        boolean boolean29 = cD24.isOverdue();
        java.lang.String str30 = cD24.getAuthor();
        java.lang.String str31 = cD24.getBorrowerEmail();
        items.CD cD38 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD38.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD47 = new items.CD("", "", false, true, "", "hi!");
        int int48 = cD47.getItemId();
        boolean boolean49 = cD47.isPurchasable();
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str73 = cD72.getLocation();
        java.lang.String str74 = cD72.getLocation();
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { cD65, cD72, cD81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = cD56.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = cD47.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = cD38.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean88 = cD24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean89 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean90 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        java.lang.String str91 = cD6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 6814 + "'", int27 == 6814);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 6816 + "'", int48 == 6816);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str91, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        cD6.returnItem();
        cD6.setIsPurchasable(true);
        double double89 = cD6.calculateOverduePenalty();
        java.lang.String str90 = cD6.getPrice();
        java.lang.String str91 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6821, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6821, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        java.lang.String str16 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getItemType();
        cD6.setBorrowerEmail("LibraryItem [itemId=4652, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int14 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6836 + "'", int14 == 6836);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        items.CD cD6 = new items.CD("LibraryItem [itemId=6556, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=6185, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5478, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getTitle();
        boolean boolean12 = cD6.isPurchasable();
        java.lang.String str13 = cD6.toString();
        int int14 = cD6.getItemId();
        java.lang.String str15 = cD6.getTitle();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 6839 + "'", int7 == 6839);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=6839, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=6839, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6839 + "'", int14 == 6839);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        boolean boolean12 = cD6.isOverdue();
        java.lang.String str13 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6840, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6840, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getItemType();
        java.lang.String str40 = cD6.toString();
        boolean boolean41 = cD6.isOverdue();
        java.lang.String str42 = cD6.getArtist();
        boolean boolean43 = cD6.isOverdue();
        java.lang.String str44 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 6841 + "'", int37 == 6841);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CD" + "'", str39, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "LibraryItem [itemId=6841, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str40, "LibraryItem [itemId=6841, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getPrice();
        java.lang.String str9 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        cD6.setLocation("LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int40 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=6044, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 6846 + "'", int40 == 6846);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getLocation();
        java.lang.String str12 = cD6.getDetails();
        boolean boolean13 = cD6.isRented();
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate14, 0, "LibraryItem [itemId=1616, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6850, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6850, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str12, "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        boolean boolean18 = cD6.isRented();
        cD6.setIsPurchasable(true);
        java.lang.String str21 = cD6.toString();
        java.lang.Class<?> wildcardClass22 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=6859, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=6859, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getPrice();
        java.lang.String str9 = cD6.getArtist();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.toString();
        java.lang.String str19 = cD16.getBorrowerEmail();
        java.lang.String str20 = cD16.getPrice();
        items.CD cD27 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str28 = cD27.getLocation();
        java.lang.String str29 = cD27.getLocation();
        boolean boolean30 = cD27.isPurchasable();
        boolean boolean31 = cD27.isOverdue();
        boolean boolean32 = cD27.isPurchasable();
        cD27.setBorrowerEmail("CD");
        java.lang.String str35 = cD27.getDetails();
        java.lang.String str36 = cD27.getAuthor();
        cD27.setIsPurchasable(false);
        items.CD cD45 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str46 = cD45.getBorrowerEmail();
        java.lang.String str47 = cD45.getBorrowerEmail();
        cD45.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD56.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD65 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str66 = cD65.getLocation();
        java.lang.String str67 = cD65.getLocation();
        items.CD cD74 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str82 = cD81.getLocation();
        java.lang.String str83 = cD81.getLocation();
        items.CD cD90 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { cD74, cD81, cD90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = cD65.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = cD56.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = cD45.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean98 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean99 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=6861, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=6861, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str35, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        double double13 = cD6.calculateOverduePenalty();
        int int14 = cD6.getItemId();
        java.lang.String str15 = cD6.getArtist();
        cD6.returnItem();
        java.lang.String str17 = cD6.getTitle();
        java.lang.String str18 = cD6.getArtist();
        java.lang.String str19 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6870, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6870, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6870 + "'", int14 == 6870);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        items.CD cD6 = new items.CD("LibraryItem [itemId=5304, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3448, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=862, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5367, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getArtist();
        boolean boolean15 = cD6.isRented();
        java.lang.String str16 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=357, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        int int8 = cD6.getItemId();
        cD6.setLocation("LibraryItem [itemId=1823, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean11 = cD6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6873 + "'", int8 == 6873);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isOverdue();
        java.lang.String str9 = cD6.getPrice();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getLocation();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getLocation();
        java.lang.Class<?> wildcardClass10 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { cD53, cD60, cD69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = cD44.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        java.lang.String str75 = cD6.getPrice();
        java.lang.String str76 = cD6.getItemType();
        java.lang.String str77 = cD6.getDetails();
        int int78 = cD6.getItemId();
        java.lang.String str79 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "CD" + "'", str76, "CD");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str77, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 6880 + "'", int78 == 6880);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str20 = cD6.getBorrowerEmail();
        java.lang.String str21 = cD6.getLocation();
        boolean boolean22 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6888, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6888, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=6889, itemType=CD, location=LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=6889, itemType=CD, location=LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=3869, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6894, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6894, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getPrice();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean58 = cD6.isRented();
        java.lang.String str59 = cD6.getAuthor();
        java.lang.String str60 = cD6.getTitle();
        boolean boolean61 = cD6.isOverdue();
        java.lang.String str62 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6895, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6895, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 6901 + "'", int11 == 6901);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        items.CD cD6 = new items.CD("LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=359, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=566, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate9, 965, "LibraryItem [itemId=3483, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getDetails();
        boolean boolean13 = cD6.isRented();
        java.lang.String str14 = cD6.getItemType();
        boolean boolean15 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6904 + "'", int9 == 6904);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6904, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6904, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        java.lang.String str12 = cD6.getTitle();
        java.lang.String str13 = cD6.getItemType();
        java.lang.String str14 = cD6.toString();
        java.lang.Class<?> wildcardClass15 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6905 + "'", int9 == 6905);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=6905, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=6905, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=6905, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=6905, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getAuthor();
        java.lang.String str8 = cD6.getTitle();
        java.lang.String str9 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getLocation();
        boolean boolean16 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1945, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=2677, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        cD6.setBorrowerEmail("LibraryItem [itemId=2727, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        java.lang.String str87 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6910, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6910, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        cD6.setLocation("LibraryItem [itemId=1614, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double52 = cD6.calculateOverduePenalty();
        java.lang.String str53 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6919 + "'", int9 == 6919);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "CD" + "'", str53, "CD");
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3483, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2724, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=5947, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4978, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD" + "'", str7, "CD");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getItemType();
        java.lang.String str40 = cD6.toString();
        java.lang.String str41 = cD6.getLocation();
        java.lang.String str42 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 6931 + "'", int37 == 6931);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CD" + "'", str39, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "LibraryItem [itemId=6931, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str40, "LibraryItem [itemId=6931, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.returnItem();
        cD6.setBorrowerEmail("LibraryItem [itemId=3540, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD20 = new items.CD("LibraryItem [itemId=1281, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2249, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3147, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1069, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD27 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str28 = cD27.getLocation();
        java.lang.String str29 = cD27.getLocation();
        int int30 = cD27.getItemId();
        java.lang.String str31 = cD27.toString();
        java.lang.String str32 = cD27.getTitle();
        java.lang.String str33 = cD27.getAuthor();
        cD27.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str36 = cD27.getTitle();
        java.lang.String str37 = cD27.getLocation();
        items.CD cD44 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str45 = cD44.getBorrowerEmail();
        java.lang.String str46 = cD44.getBorrowerEmail();
        cD44.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD55 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD55.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD64 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str65 = cD64.getLocation();
        java.lang.String str66 = cD64.getLocation();
        items.CD cD73 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD80 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str81 = cD80.getLocation();
        java.lang.String str82 = cD80.getLocation();
        items.CD cD89 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray90 = new items.LibraryItem[] { cD73, cD80, cD89 };
        java.util.ArrayList<items.LibraryItem> libraryItemList91 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList91, libraryItemArray90);
        boolean boolean93 = cD64.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean94 = cD55.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean95 = cD44.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean96 = cD27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean97 = cD20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean98 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6935, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6935, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 6937 + "'", int30 == 6937);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "LibraryItem [itemId=6937, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str31, "LibraryItem [itemId=6937, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        items.CD cD52 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { cD52, cD59, cD68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean73 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList70);
        java.lang.String str74 = cD6.getArtist();
        java.lang.String str75 = cD6.getBorrowerEmail();
        java.lang.Class<?> wildcardClass76 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        java.lang.String str16 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=6952, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=6952, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=6952, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=6952, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=357, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        boolean boolean8 = cD6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        items.CD cD6 = new items.CD("LibraryItem [itemId=397, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1068, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=69, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate7, 3492, "LibraryItem [itemId=2058, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        java.lang.String str89 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6955, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6955, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str89, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getPrice();
        java.lang.String str12 = cD6.toString();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 6964 + "'", int7 == 6964);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6964, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6964, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=357, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        int int8 = cD6.getItemId();
        double double9 = cD6.calculateOverduePenalty();
        java.lang.String str10 = cD6.getItemType();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6965 + "'", int8 == 6965);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD" + "'", str10, "CD");
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.toString();
        java.lang.String str17 = cD14.getBorrowerEmail();
        java.lang.String str18 = cD14.getBorrowerEmail();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        items.CD cD34 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray51 = new items.LibraryItem[] { cD34, cD41, cD50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList52 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList52, libraryItemArray51);
        boolean boolean54 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList52);
        boolean boolean55 = cD25.isOverdue();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str79 = cD78.getLocation();
        java.lang.String str80 = cD78.getLocation();
        items.CD cD87 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { cD71, cD78, cD87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = cD62.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = cD14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=2267, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str99 = cD6.getItemType();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 6967 + "'", int7 == 6967);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=6968, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=6968, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "CD" + "'", str99, "CD");
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        items.CD cD6 = new items.CD("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass8 = cD6.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        double double13 = cD6.calculateOverduePenalty();
        java.lang.String str14 = cD6.toString();
        double double15 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6987 + "'", int9 == 6987);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=6987, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=6987, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6987, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6987, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=6987, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=6987, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getArtist();
        cD6.setBorrowerEmail("LibraryItem [itemId=2367, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1188, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1122, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        cD6.setIsPurchasable(false);
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate11, 450, "LibraryItem [itemId=3760, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        cD6.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        boolean boolean17 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        double double15 = cD6.calculateOverduePenalty();
        java.lang.String str16 = cD6.getTitle();
        java.lang.Class<?> wildcardClass17 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6991 + "'", int14 == 6991);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        items.CD cD6 = new items.CD("LibraryItem [itemId=5544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5742, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "CD: hi! by hi!. Location: LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", "LibraryItem [itemId=465, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        items.CD cD6 = new items.CD("LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        cD6.setBorrowerEmail("LibraryItem [itemId=577, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double10 = cD6.calculateOverduePenalty();
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6993, itemType=CD, location=LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6993, itemType=CD, location=LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        int int11 = cD6.getItemId();
        boolean boolean12 = cD6.isPurchasable();
        double double13 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6994, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6994, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 6994 + "'", int11 == 6994);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getAuthor();
        boolean boolean9 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        cD6.setIsPurchasable(true);
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate14, 841, "LibraryItem [itemId=1234, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6996 + "'", int9 == 6996);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=6996, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=6996, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.toString();
        java.lang.String str13 = cD6.toString();
        boolean boolean14 = cD6.isRented();
        java.lang.String str15 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6997, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6997, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=6997, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=6997, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        cD6.setBorrowerEmail("LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=1126, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str43 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        boolean boolean10 = cD6.isPurchasable();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7002 + "'", int7 == 7002);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        items.CD cD6 = new items.CD("LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getPrice();
        boolean boolean9 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        double double9 = cD6.calculateOverduePenalty();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.getDetails();
        double double12 = cD6.calculateOverduePenalty();
        boolean boolean13 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7004, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7004, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        java.lang.String str40 = cD6.getPrice();
        boolean boolean41 = cD6.isOverdue();
        java.lang.String str42 = cD6.getAuthor();
        java.lang.String str43 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getItemType();
        java.lang.String str14 = cD6.getAuthor();
        boolean boolean15 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7024 + "'", int11 == 7024);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.toString();
        java.lang.String str17 = cD14.getBorrowerEmail();
        java.lang.String str18 = cD14.getBorrowerEmail();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        items.CD cD34 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray51 = new items.LibraryItem[] { cD34, cD41, cD50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList52 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList52, libraryItemArray51);
        boolean boolean54 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList52);
        boolean boolean55 = cD25.isOverdue();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str79 = cD78.getLocation();
        java.lang.String str80 = cD78.getLocation();
        items.CD cD87 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { cD71, cD78, cD87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = cD62.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = cD14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        cD6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=7026, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=7026, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str14 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7035 + "'", int9 == 7035);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7035, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7035, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        boolean boolean18 = cD6.isRented();
        cD6.setIsPurchasable(true);
        java.lang.String str21 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CD" + "'", str21, "CD");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.getTitle();
        items.CD cD18 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str19 = cD18.getLocation();
        java.lang.String str20 = cD18.getLocation();
        int int21 = cD18.getItemId();
        java.lang.String str22 = cD18.getBorrowerEmail();
        boolean boolean23 = cD18.isOverdue();
        java.lang.String str24 = cD18.getAuthor();
        java.lang.String str25 = cD18.getBorrowerEmail();
        items.CD cD32 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD32.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD41 = new items.CD("", "", false, true, "", "hi!");
        int int42 = cD41.getItemId();
        boolean boolean43 = cD41.isPurchasable();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str51 = cD50.getLocation();
        java.lang.String str52 = cD50.getLocation();
        items.CD cD59 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD66 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str67 = cD66.getLocation();
        java.lang.String str68 = cD66.getLocation();
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { cD59, cD66, cD75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = cD50.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = cD41.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = cD32.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = cD18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean83 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        java.lang.String str84 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7037 + "'", int9 == 7037);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 7038 + "'", int21 == 7038);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 7040 + "'", int42 == 7040);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        boolean boolean12 = cD6.isOverdue();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getTitle();
        int int15 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7045 + "'", int15 == 7045);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        items.CD cD6 = new items.CD("LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        cD6.setBorrowerEmail("LibraryItem [itemId=577, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double10 = cD6.calculateOverduePenalty();
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.getDetails();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str12, "CD: LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str91 = cD6.getAuthor();
        java.lang.String str92 = cD6.getLocation();
        java.lang.String str93 = cD6.getAuthor();
        java.lang.String str94 = cD6.getTitle();
        boolean boolean95 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7047, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7047, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!" + "'", str94, "hi!");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        java.lang.String str18 = cD6.getBorrowerEmail();
        java.time.LocalDate localDate19 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate19, 3981, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        int int9 = cD6.getItemId();
        items.CD cD16 = new items.CD("LibraryItem [itemId=1281, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2249, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3147, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1069, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD23 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str24 = cD23.getLocation();
        java.lang.String str25 = cD23.getLocation();
        int int26 = cD23.getItemId();
        java.lang.String str27 = cD23.toString();
        java.lang.String str28 = cD23.getTitle();
        java.lang.String str29 = cD23.getAuthor();
        cD23.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str32 = cD23.getTitle();
        java.lang.String str33 = cD23.getLocation();
        items.CD cD40 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str41 = cD40.getBorrowerEmail();
        java.lang.String str42 = cD40.getBorrowerEmail();
        cD40.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD51.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str77 = cD76.getLocation();
        java.lang.String str78 = cD76.getLocation();
        items.CD cD85 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { cD69, cD76, cD85 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = cD60.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = cD51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = cD40.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean92 = cD23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean93 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean94 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        java.lang.String str95 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7058, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7058, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7058 + "'", int9 == 7058);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7060 + "'", int26 == 7060);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "LibraryItem [itemId=7060, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str27, "LibraryItem [itemId=7060, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        cD6.setIsPurchasable(false);
        boolean boolean39 = cD6.isPurchasable();
        items.CD cD46 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD46.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD55 = new items.CD("", "", false, true, "", "hi!");
        int int56 = cD55.getItemId();
        boolean boolean57 = cD55.isPurchasable();
        items.CD cD64 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str65 = cD64.getLocation();
        java.lang.String str66 = cD64.getLocation();
        items.CD cD73 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD80 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str81 = cD80.getLocation();
        java.lang.String str82 = cD80.getLocation();
        items.CD cD89 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray90 = new items.LibraryItem[] { cD73, cD80, cD89 };
        java.util.ArrayList<items.LibraryItem> libraryItemList91 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList91, libraryItemArray90);
        boolean boolean93 = cD64.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean94 = cD55.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean95 = cD46.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean96 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean97 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7074 + "'", int56 == 7074);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.returnItem();
        double double11 = cD6.calculateOverduePenalty();
        double double12 = cD6.calculateOverduePenalty();
        boolean boolean13 = cD6.isOverdue();
        java.lang.String str14 = cD6.getLocation();
        java.lang.String str15 = cD6.getItemType();
        cD6.setIsPurchasable(true);
        java.lang.String str18 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7088, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7088, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: true" + "'", str18, "CD: hi! by hi!. Location: hi!. Purchasable: true");
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=814, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate9, 6291, "LibraryItem [itemId=580, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        items.CD cD6 = new items.CD("LibraryItem [itemId=516, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=610, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isPurchasable();
        java.lang.String str8 = cD6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str16 = cD6.getDetails();
        cD6.setIsPurchasable(true);
        java.lang.String str19 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        boolean boolean12 = cD6.isOverdue();
        java.lang.String str13 = cD6.getDetails();
        items.CD cD20 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str21 = cD20.getLocation();
        java.lang.String str22 = cD20.toString();
        java.lang.String str23 = cD20.getBorrowerEmail();
        java.lang.String str24 = cD20.getPrice();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD31.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str41 = cD40.getLocation();
        java.lang.String str42 = cD40.getLocation();
        items.CD cD49 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { cD49, cD56, cD65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = cD40.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = cD31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = cD20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean72 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        double double73 = cD6.calculateOverduePenalty();
        java.lang.String str74 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=7094, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=7094, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1090, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1946, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "");
        cD6.setIsPurchasable(false);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getDetails();
        java.lang.String str16 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7120, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7120, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getPrice();
        java.lang.String str15 = cD6.getTitle();
        java.lang.String str16 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        items.CD cD6 = new items.CD("LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getItemType();
        java.lang.String str8 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD" + "'", str7, "CD");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD: LibraryItem [itemId=1031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "CD: LibraryItem [itemId=1031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass8 = cD6.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.toString();
        java.lang.String str17 = cD14.getBorrowerEmail();
        java.lang.String str18 = cD14.getBorrowerEmail();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        items.CD cD34 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray51 = new items.LibraryItem[] { cD34, cD41, cD50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList52 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList52, libraryItemArray51);
        boolean boolean54 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList52);
        boolean boolean55 = cD25.isOverdue();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str79 = cD78.getLocation();
        java.lang.String str80 = cD78.getLocation();
        items.CD cD87 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { cD71, cD78, cD87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = cD62.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = cD14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        cD6.setIsPurchasable(false);
        cD6.setIsPurchasable(false);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7125 + "'", int7 == 7125);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=7126, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=7126, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str91 = cD6.getTitle();
        boolean boolean92 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7135, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7135, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.toString();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7144 + "'", int14 == 7144);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=7144, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=7144, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.getLocation();
        items.CD cD23 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD30 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str31 = cD30.getLocation();
        java.lang.String str32 = cD30.getLocation();
        items.CD cD39 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray40 = new items.LibraryItem[] { cD23, cD30, cD39 };
        java.util.ArrayList<items.LibraryItem> libraryItemList41 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList41, libraryItemArray40);
        boolean boolean43 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList41);
        boolean boolean44 = cD14.isOverdue();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD67 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str68 = cD67.getLocation();
        java.lang.String str69 = cD67.getLocation();
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { cD60, cD67, cD76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = cD51.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        java.lang.String str83 = cD6.getDetails();
        boolean boolean84 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str83, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=333, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getAuthor();
        java.lang.String str18 = cD6.getItemType();
        int int19 = cD6.getItemId();
        boolean boolean20 = cD6.isPurchasable();
        java.lang.String str21 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7154, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7154, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7154 + "'", int19 == 7154);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=497, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7156 + "'", int37 == 7156);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.toString();
        java.lang.String str13 = cD6.getPrice();
        java.lang.String str14 = cD6.getItemType();
        java.lang.String str15 = cD6.getAuthor();
        int int16 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7161, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7161, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7161, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7161, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7161 + "'", int16 == 7161);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        java.lang.String str14 = cD6.getArtist();
        java.lang.String str15 = cD6.getLocation();
        java.lang.String str16 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=6498, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        items.CD cD6 = new items.CD("LibraryItem [itemId=6274, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5118, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=3895, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=1810, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=2963, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=368, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        cD6.returnItem();
        cD6.setIsPurchasable(true);
        double double89 = cD6.calculateOverduePenalty();
        java.lang.String str90 = cD6.getPrice();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.getLocation();
        items.CD cD23 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD30 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str31 = cD30.getLocation();
        java.lang.String str32 = cD30.getLocation();
        items.CD cD39 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray40 = new items.LibraryItem[] { cD23, cD30, cD39 };
        java.util.ArrayList<items.LibraryItem> libraryItemList41 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList41, libraryItemArray40);
        boolean boolean43 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList41);
        boolean boolean44 = cD14.isOverdue();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD67 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str68 = cD67.getLocation();
        java.lang.String str69 = cD67.getLocation();
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { cD60, cD67, cD76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = cD51.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        cD6.returnItem();
        cD6.setIsPurchasable(false);
        boolean boolean86 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isOverdue();
        java.lang.Class<?> wildcardClass18 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7185, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7185, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1326, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1461, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=291, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        cD6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        items.CD cD6 = new items.CD("LibraryItem [itemId=434, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=327, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=94, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=7188, itemType=CD, location=LibraryItem [itemId=434, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=94, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=7188, itemType=CD, location=LibraryItem [itemId=434, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=94, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        items.CD cD6 = new items.CD("LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1038, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass7 = cD6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getArtist();
        boolean boolean40 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7194 + "'", int37 == 7194);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getAuthor();
        java.lang.String str15 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        java.lang.String str37 = cD6.toString();
        java.lang.String str38 = cD6.getLocation();
        java.lang.String str39 = cD6.getArtist();
        java.lang.String str40 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=7199, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=7199, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getLocation();
        java.lang.String str10 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        java.lang.String str17 = cD6.getTitle();
        double double18 = cD6.calculateOverduePenalty();
        java.lang.String str19 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getLocation();
        java.lang.String str10 = cD6.getDetails();
        cD6.setIsPurchasable(true);
        boolean boolean13 = cD6.isRented();
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7212, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7212, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str10, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7212, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7212, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        java.lang.String str87 = cD6.getDetails();
        java.lang.Class<?> wildcardClass88 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7213, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7213, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str87, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getPrice();
        cD6.setIsPurchasable(false);
        double double20 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getLocation();
        java.lang.String str15 = cD6.getTitle();
        java.lang.String str16 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7224 + "'", int9 == 7224);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7224, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7224, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7224, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7224, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getArtist();
        java.lang.String str16 = cD6.getTitle();
        items.CD cD23 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double24 = cD23.calculateOverduePenalty();
        java.lang.String str25 = cD23.getBorrowerEmail();
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.toString();
        java.lang.String str35 = cD32.getBorrowerEmail();
        java.lang.String str36 = cD32.getPrice();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD43.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD32.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = cD23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean86 = cD6.isOverdue();
        java.lang.String str87 = cD6.getTitle();
        java.lang.String str88 = cD6.getLocation();
        cD6.setLocation("LibraryItem [itemId=841, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LibraryItem [itemId=7227, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str34, "LibraryItem [itemId=7227, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.toString();
        cD6.setIsPurchasable(true);
        java.lang.String str16 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7233 + "'", int9 == 7233);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=7233, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=7233, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1090, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1946, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "");
        cD6.setLocation("LibraryItem [itemId=842, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        java.lang.String str14 = cD6.getBorrowerEmail();
        java.lang.String str15 = cD6.getTitle();
        java.lang.String str16 = cD6.getArtist();
        java.lang.String str17 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7235 + "'", int9 == 7235);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7235, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7235, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7235, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7235, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7235 + "'", int12 == 7235);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD" + "'", str17, "CD");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        java.lang.String str16 = cD6.getLocation();
        double double17 = cD6.calculateOverduePenalty();
        cD6.returnItem();
        java.lang.String str19 = cD6.getLocation();
        java.lang.String str20 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7237, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7237, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=7237, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=7237, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getAuthor();
        java.lang.String str51 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7239 + "'", int9 == 7239);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "LibraryItem [itemId=7239, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str51, "LibraryItem [itemId=7239, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        java.lang.Class<?> wildcardClass16 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7244, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7244, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        java.lang.Class<?> wildcardClass10 = cD6.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7245, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7245, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        java.lang.String str16 = cD6.getLocation();
        double double17 = cD6.calculateOverduePenalty();
        cD6.returnItem();
        java.lang.String str19 = cD6.getLocation();
        java.lang.String str20 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7246, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7246, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str20, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        cD6.setLocation("LibraryItem [itemId=3010, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str15 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str17 = cD6.toString();
        java.lang.String str18 = cD6.getPrice();
        java.lang.String str19 = cD6.getBorrowerEmail();
        boolean boolean20 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1451, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean23 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7248 + "'", int9 == 7248);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=7248, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=7248, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD" + "'", str19, "CD");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getLocation();
        java.lang.String str16 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getPrice();
        boolean boolean18 = cD6.isRented();
        cD6.returnItem();
        java.lang.String str20 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7250 + "'", int14 == 7250);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getArtist();
        cD6.setLocation("CD: LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7251 + "'", int14 == 7251);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        double double13 = cD6.calculateOverduePenalty();
        cD6.setLocation("LibraryItem [itemId=3147, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7252 + "'", int9 == 7252);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7252, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7252, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7252, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7252, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7252 + "'", int12 == 7252);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getArtist();
        java.lang.String str39 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        boolean boolean39 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=4004, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7259 + "'", int37 == 7259);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=610, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=1724, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str18 = cD6.getDetails();
        java.lang.String str19 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=1724, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str18, "CD: hi! by hi!. Location: LibraryItem [itemId=1724, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        items.CD cD6 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate7, 2839, "LibraryItem [itemId=2747, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isOverdue();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getTitle();
        java.lang.String str14 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7273 + "'", int9 == 7273);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double9 = cD6.calculateOverduePenalty();
        cD6.setLocation("LibraryItem [itemId=2481, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = cD6.getTitle();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getArtist();
        java.lang.String str16 = cD6.getTitle();
        items.CD cD23 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double24 = cD23.calculateOverduePenalty();
        java.lang.String str25 = cD23.getBorrowerEmail();
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.toString();
        java.lang.String str35 = cD32.getBorrowerEmail();
        java.lang.String str36 = cD32.getPrice();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD43.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD32.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = cD23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean86 = cD6.isOverdue();
        java.lang.String str87 = cD6.getTitle();
        java.util.List<items.LibraryItem> libraryItemList88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = cD6.hasExceededBorrowingLimit(libraryItemList88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LibraryItem [itemId=7277, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str34, "LibraryItem [itemId=7277, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        items.CD cD6 = new items.CD("LibraryItem [itemId=5108, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4698, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=3204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2298, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=2298, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=2298, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        cD6.setLocation("LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int40 = cD6.getItemId();
        java.lang.String str41 = cD6.toString();
        cD6.setIsPurchasable(true);
        java.time.LocalDate localDate44 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate44, 6086, "LibraryItem [itemId=4083, itemType=CD, location=LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7284 + "'", int40 == 7284);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LibraryItem [itemId=7284, itemType=CD, location=LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str41, "LibraryItem [itemId=7284, itemType=CD, location=LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        java.lang.String str18 = cD6.getItemType();
        cD6.setBorrowerEmail("LibraryItem [itemId=3049, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        java.lang.String str46 = cD6.getAuthor();
        java.lang.Class<?> wildcardClass47 = cD6.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7290 + "'", int7 == 7290);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getArtist();
        java.lang.String str40 = cD6.getItemType();
        java.lang.String str41 = cD6.getPrice();
        java.lang.String str42 = cD6.toString();
        boolean boolean43 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7295 + "'", int37 == 7295);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD" + "'", str40, "CD");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "LibraryItem [itemId=7295, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str42, "LibraryItem [itemId=7295, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        double double8 = cD6.calculateOverduePenalty();
        java.lang.String str9 = cD6.getPrice();
        java.lang.String str10 = cD6.getItemType();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getBorrowerEmail();
        java.lang.String str13 = cD6.getAuthor();
        java.lang.String str14 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD" + "'", str10, "CD");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        items.CD cD6 = new items.CD("LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=359, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1964, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD16 = new items.CD("LibraryItem [itemId=1945, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=2677, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        java.lang.String str17 = cD16.getArtist();
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.getLocation();
        int int27 = cD24.getItemId();
        java.lang.String str28 = cD24.getBorrowerEmail();
        boolean boolean29 = cD24.isOverdue();
        java.lang.String str30 = cD24.getAuthor();
        java.lang.String str31 = cD24.getBorrowerEmail();
        items.CD cD38 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD38.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD47 = new items.CD("", "", false, true, "", "hi!");
        int int48 = cD47.getItemId();
        boolean boolean49 = cD47.isPurchasable();
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str73 = cD72.getLocation();
        java.lang.String str74 = cD72.getLocation();
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { cD65, cD72, cD81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = cD56.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = cD47.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = cD38.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean88 = cD24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean89 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean90 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        java.time.LocalDate localDate91 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate91, 4322, "LibraryItem [itemId=6892, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7303 + "'", int27 == 7303);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 7305 + "'", int48 == 7305);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        java.lang.String str37 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        items.CD cD48 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str49 = cD48.getLocation();
        java.lang.String str50 = cD48.getLocation();
        int int51 = cD48.getItemId();
        java.lang.String str52 = cD48.getBorrowerEmail();
        cD48.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = cD48.getItemType();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str79 = cD78.getLocation();
        java.lang.String str80 = cD78.getLocation();
        items.CD cD87 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { cD71, cD78, cD87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = cD62.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = cD48.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.Class<?> wildcardClass94 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7314 + "'", int51 == 7314);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "CD" + "'", str55, "CD");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=5596, itemType=CD, location=LibraryItem [itemId=333, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isRented();
        cD6.setBorrowerEmail("LibraryItem [itemId=435, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7319, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7319, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.getLocation();
        items.CD cD23 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD30 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str31 = cD30.getLocation();
        java.lang.String str32 = cD30.getLocation();
        items.CD cD39 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray40 = new items.LibraryItem[] { cD23, cD30, cD39 };
        java.util.ArrayList<items.LibraryItem> libraryItemList41 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList41, libraryItemArray40);
        boolean boolean43 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList41);
        boolean boolean44 = cD14.isOverdue();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD67 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str68 = cD67.getLocation();
        java.lang.String str69 = cD67.getLocation();
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { cD60, cD67, cD76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = cD51.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        int int83 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 7325 + "'", int83 == 7325);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        boolean boolean18 = cD6.isPurchasable();
        int int19 = cD6.getItemId();
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        boolean boolean29 = cD26.isPurchasable();
        boolean boolean30 = cD26.isOverdue();
        double double31 = cD26.calculateOverduePenalty();
        cD26.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str34 = cD26.toString();
        java.lang.String str35 = cD26.getAuthor();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        int int45 = cD42.getItemId();
        java.lang.String str46 = cD42.getBorrowerEmail();
        cD42.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str49 = cD42.getItemType();
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str73 = cD72.getLocation();
        java.lang.String str74 = cD72.getLocation();
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { cD65, cD72, cD81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = cD56.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = cD42.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean88 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean89 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7335, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7335, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7335 + "'", int19 == 7335);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LibraryItem [itemId=7336, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str34, "LibraryItem [itemId=7336, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 7337 + "'", int45 == 7337);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CD" + "'", str49, "CD");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        java.lang.String str12 = cD6.getArtist();
        int int13 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7342 + "'", int9 == 7342);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7342, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7342, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7342 + "'", int13 == 7342);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        int int89 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=1897, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 7343 + "'", int89 == 7343);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=123, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=720, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=69, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getArtist();
        boolean boolean16 = cD6.isOverdue();
        java.lang.String str17 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7353 + "'", int9 == 7353);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7353, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7353, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getLocation();
        int int15 = cD6.getItemId();
        java.lang.String str16 = cD6.getBorrowerEmail();
        java.lang.String str17 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7354 + "'", int9 == 7354);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7354, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7354, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7354, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7354, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7354 + "'", int15 == 7354);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        java.lang.String str87 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=4570, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7355, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7355, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str11 = cD6.getArtist();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getDetails();
        boolean boolean14 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getTitle();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7365 + "'", int7 == 7365);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7366 + "'", int9 == 7366);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7366, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7366, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        items.CD cD6 = new items.CD("LibraryItem [itemId=516, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=610, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isPurchasable();
        java.lang.String str8 = cD6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD: LibraryItem [itemId=610, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=516, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "CD: LibraryItem [itemId=610, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=516, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getAuthor();
        java.lang.String str14 = cD6.getPrice();
        java.lang.String str15 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7373 + "'", int9 == 7373);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        int int36 = cD6.getItemId();
        boolean boolean37 = cD6.isOverdue();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7374 + "'", int36 == 7374);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=610, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=1724, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str18 = cD6.getDetails();
        java.time.LocalDate localDate19 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate19, 547, "LibraryItem [itemId=5961, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=1724, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str18, "CD: hi! by hi!. Location: LibraryItem [itemId=1724, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2187, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5012, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=5473, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4195, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        boolean boolean14 = cD6.isPurchasable();
        double double15 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7383 + "'", int9 == 7383);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7383, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7383, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7383, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7383, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isOverdue();
        boolean boolean12 = cD6.isRented();
        java.lang.String str13 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=2497, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate16 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate16, 2342, "LibraryItem [itemId=5136, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7384 + "'", int9 == 7384);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=7384, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=7384, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2482, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1391, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=3895, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=933, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=3895, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=3895, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=95, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getBorrowerEmail();
        boolean boolean15 = cD6.isPurchasable();
        boolean boolean16 = cD6.isOverdue();
        boolean boolean17 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7387 + "'", int9 == 7387);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7387, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7387, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getArtist();
        boolean boolean11 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7388 + "'", int9 == 7388);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        java.lang.String str58 = cD6.getAuthor();
        cD6.setIsPurchasable(false);
        double double61 = cD6.calculateOverduePenalty();
        cD6.setLocation("LibraryItem [itemId=5764, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str64 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        int int8 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7396 + "'", int8 == 7396);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getPrice();
        java.lang.String str12 = cD6.getDetails();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.toString();
        java.lang.String str22 = cD19.getBorrowerEmail();
        java.lang.String str23 = cD19.getBorrowerEmail();
        cD19.setIsPurchasable(false);
        java.lang.String str26 = cD19.getArtist();
        int int27 = cD19.getItemId();
        boolean boolean28 = cD19.isRented();
        cD19.returnItem();
        items.CD cD36 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD36.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD45 = new items.CD("", "", false, true, "", "hi!");
        int int46 = cD45.getItemId();
        boolean boolean47 = cD45.isPurchasable();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD45.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD36.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean87 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7397, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7397, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=7398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=7398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7398 + "'", int27 == 7398);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 7400 + "'", int46 == 7400);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getPrice();
        cD6.setIsPurchasable(false);
        java.lang.String str18 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.toString();
        cD6.setBorrowerEmail("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7406 + "'", int9 == 7406);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=7406, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=7406, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        cD6.setIsPurchasable(false);
        boolean boolean39 = cD6.isRented();
        boolean boolean40 = cD6.isRented();
        boolean boolean41 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        boolean boolean39 = cD6.isRented();
        java.lang.String str40 = cD6.getDetails();
        cD6.setLocation("LibraryItem [itemId=1718, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int43 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str40, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7415 + "'", int43 == 7415);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getLocation();
        java.lang.String str14 = cD6.getItemType();
        boolean boolean15 = cD6.isOverdue();
        double double16 = cD6.calculateOverduePenalty();
        boolean boolean17 = cD6.isRented();
        java.lang.String str18 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7419, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7419, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getLocation();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7420 + "'", int7 == 7420);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        double double16 = cD6.calculateOverduePenalty();
        double double17 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3186, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "LibraryItem [itemId=3400, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7432, itemType=CD, location=LibraryItem [itemId=3186, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=3400, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7432, itemType=CD, location=LibraryItem [itemId=3186, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=3400, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getBorrowerEmail();
        java.lang.String str16 = cD6.getDetails();
        java.lang.String str17 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=123, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("hi!");
        cD6.setIsPurchasable(true);
        boolean boolean11 = cD6.isRented();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getArtist();
        boolean boolean14 = cD6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        java.lang.String str37 = cD6.toString();
        java.lang.String str38 = cD6.getPrice();
        double double39 = cD6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass40 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=7435, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=7435, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getAuthor();
        java.lang.String str14 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7439 + "'", int9 == 7439);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7439, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7439, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7439 + "'", int12 == 7439);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getAuthor();
        cD6.setLocation("LibraryItem [itemId=232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getItemType();
        boolean boolean13 = cD6.isOverdue();
        java.lang.String str14 = cD6.toString();
        items.CD cD21 = new items.CD("", "", false, true, "", "hi!");
        int int22 = cD21.getItemId();
        boolean boolean23 = cD21.isPurchasable();
        java.lang.String str24 = cD21.getBorrowerEmail();
        java.lang.String str25 = cD21.getArtist();
        java.lang.String str26 = cD21.getTitle();
        boolean boolean27 = cD21.isPurchasable();
        items.CD cD34 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str35 = cD34.getLocation();
        java.lang.String str36 = cD34.toString();
        java.lang.String str37 = cD34.getDetails();
        boolean boolean38 = cD34.isRented();
        items.CD cD45 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str46 = cD45.getLocation();
        java.lang.String str47 = cD45.getLocation();
        items.CD cD54 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD61 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str62 = cD61.getLocation();
        java.lang.String str63 = cD61.getLocation();
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray71 = new items.LibraryItem[] { cD54, cD61, cD70 };
        java.util.ArrayList<items.LibraryItem> libraryItemList72 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList72, libraryItemArray71);
        boolean boolean74 = cD45.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList72);
        boolean boolean75 = cD34.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList72);
        boolean boolean76 = cD21.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        boolean boolean77 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList72);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7440 + "'", int11 == 7440);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD" + "'", str12, "CD");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7440, itemType=CD, location=LibraryItem [itemId=232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7440, itemType=CD, location=LibraryItem [itemId=232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 7441 + "'", int22 == 7441);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "LibraryItem [itemId=7442, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str36, "LibraryItem [itemId=7442, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str37, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        boolean boolean13 = cD6.isOverdue();
        java.lang.Class<?> wildcardClass14 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7447 + "'", int9 == 7447);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7447, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7447, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7447, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7447, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7447 + "'", int12 == 7447);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getItemType();
        java.lang.String str13 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7455 + "'", int9 == 7455);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7455, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7455, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD" + "'", str12, "CD");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        java.lang.String str9 = cD6.getItemType();
        boolean boolean10 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD" + "'", str9, "CD");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        double double9 = cD6.calculateOverduePenalty();
        boolean boolean10 = cD6.isRented();
        cD6.setBorrowerEmail("LibraryItem [itemId=1090, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double13 = cD6.calculateOverduePenalty();
        boolean boolean14 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7460, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7460, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str16 = cD6.getLocation();
        cD6.setBorrowerEmail("LibraryItem [itemId=1487, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
        java.lang.String str21 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=7461, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=7461, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        items.CD cD6 = new items.CD("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD");
        java.lang.String str7 = cD6.getTitle();
        java.lang.String str8 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        cD6.setBorrowerEmail("CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        cD6.setLocation("LibraryItem [itemId=2511, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        boolean boolean39 = cD6.isRented();
        java.lang.String str40 = cD6.getDetails();
        cD6.setLocation("LibraryItem [itemId=5247, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str40, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        java.lang.String str18 = cD6.getItemType();
        int int19 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7467 + "'", int19 == 7467);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("CD: hi! by hi!. Location: hi!. Purchasable: true");
        java.lang.String str17 = cD6.getAuthor();
        java.lang.String str18 = cD6.toString();
        java.lang.String str19 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7468 + "'", int9 == 7468);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7468, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7468, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7468, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7468, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=7468, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=7468, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        items.CD cD6 = new items.CD("LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        double double8 = cD6.calculateOverduePenalty();
        java.lang.String str9 = cD6.getItemType();
        java.lang.String str10 = cD6.getDetails();
        int int11 = cD6.getItemId();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD" + "'", str9, "CD");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str10, "CD: LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7473 + "'", int11 == 7473);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getLocation();
        boolean boolean22 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        boolean boolean11 = cD6.isRented();
        java.lang.String str12 = cD6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str14 = cD6.getItemType();
        java.lang.String str15 = cD6.getArtist();
        boolean boolean16 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7476 + "'", int9 == 7476);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7476, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7476, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1326, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1461, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=291, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=1030, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getLocation();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7477 + "'", int9 == 7477);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=1326, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=1326, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getItemType();
        cD6.returnItem();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        boolean boolean22 = cD19.isPurchasable();
        boolean boolean23 = cD19.isOverdue();
        java.lang.String str24 = cD19.getItemType();
        java.lang.String str25 = cD19.toString();
        cD19.setLocation("");
        items.CD cD34 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        boolean boolean35 = cD34.isRented();
        java.lang.String str36 = cD34.getLocation();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        int int46 = cD43.getItemId();
        cD43.setBorrowerEmail("CD");
        java.lang.String str49 = cD43.getArtist();
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str73 = cD72.getLocation();
        java.lang.String str74 = cD72.getLocation();
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { cD65, cD72, cD81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = cD56.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = cD34.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean88 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean89 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7478, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7478, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CD" + "'", str24, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "LibraryItem [itemId=7479, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str25, "LibraryItem [itemId=7479, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 7481 + "'", int46 == 7481);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7486, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7486, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD" + "'", str12, "CD");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getLocation();
        java.lang.String str14 = cD6.getItemType();
        boolean boolean15 = cD6.isOverdue();
        cD6.setLocation("LibraryItem [itemId=2704, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7488, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7488, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getPrice();
        double double18 = cD6.calculateOverduePenalty();
        cD6.setIsPurchasable(false);
        java.lang.String str21 = cD6.getBorrowerEmail();
        java.lang.String str22 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7489 + "'", int14 == 7489);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        items.CD cD6 = new items.CD("LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=1168, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=2009, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        items.CD cD6 = new items.CD("LibraryItem [itemId=4758, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2746, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=2327, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3992, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str13 = cD6.getItemType();
        items.CD cD20 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str21 = cD20.getLocation();
        java.lang.String str22 = cD20.getLocation();
        items.CD cD29 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD36 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str37 = cD36.getLocation();
        java.lang.String str38 = cD36.getLocation();
        items.CD cD45 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray46 = new items.LibraryItem[] { cD29, cD36, cD45 };
        java.util.ArrayList<items.LibraryItem> libraryItemList47 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList47, libraryItemArray46);
        boolean boolean49 = cD20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList47);
        boolean boolean50 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList47);
        java.lang.String str51 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7492 + "'", int9 == 7492);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str51, "LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        items.CD cD6 = new items.CD("LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        double double8 = cD6.calculateOverduePenalty();
        items.CD cD15 = new items.CD("LibraryItem [itemId=1281, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2249, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3147, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1069, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        int int25 = cD22.getItemId();
        java.lang.String str26 = cD22.toString();
        java.lang.String str27 = cD22.getTitle();
        java.lang.String str28 = cD22.getAuthor();
        cD22.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str31 = cD22.getTitle();
        java.lang.String str32 = cD22.getLocation();
        items.CD cD39 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str40 = cD39.getBorrowerEmail();
        java.lang.String str41 = cD39.getBorrowerEmail();
        cD39.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD50.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str76 = cD75.getLocation();
        java.lang.String str77 = cD75.getLocation();
        items.CD cD84 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { cD68, cD75, cD84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = cD59.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = cD50.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = cD39.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = cD22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = cD15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean93 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7505 + "'", int25 == 7505);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LibraryItem [itemId=7505, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str26, "LibraryItem [itemId=7505, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getItemType();
        cD6.returnItem();
        java.lang.String str13 = cD6.getTitle();
        boolean boolean14 = cD6.isRented();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7512, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7512, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=4299, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3529, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2226, itemType=CD, location=LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1724, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=931, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getDetails();
        java.lang.String str18 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7515 + "'", int9 == 7515);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7515, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7515, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=357, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        int int8 = cD6.getItemId();
        double double9 = cD6.calculateOverduePenalty();
        java.lang.String str10 = cD6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7517 + "'", int8 == 7517);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getTitle();
        boolean boolean16 = cD6.isRented();
        java.lang.String str17 = cD6.getDetails();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7518, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7518, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getBorrowerEmail();
        double double22 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = cD6.getItemId();
        java.lang.String str8 = cD6.getLocation();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7521 + "'", int7 == 7521);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        java.lang.String str16 = cD6.getItemType();
        double double17 = cD6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass18 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7522, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7522, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getPrice();
        double double51 = cD6.calculateOverduePenalty();
        int int52 = cD6.getItemId();
        boolean boolean53 = cD6.isRented();
        java.lang.String str54 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7523 + "'", int9 == 7523);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7523 + "'", int52 == 7523);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        items.CD cD6 = new items.CD("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isOverdue();
        java.util.List<items.LibraryItem> libraryItemList9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = cD6.hasExceededBorrowingLimit(libraryItemList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getBorrowerEmail();
        boolean boolean16 = cD6.isPurchasable();
        java.lang.String str17 = cD6.getDetails();
        java.lang.String str18 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7529 + "'", int9 == 7529);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7529, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7529, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        boolean boolean39 = cD6.isRented();
        java.lang.String str40 = cD6.getPrice();
        java.lang.String str41 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str41, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.toString();
        boolean boolean13 = cD6.isPurchasable();
        cD6.setBorrowerEmail("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7535, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7535, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7535 + "'", int11 == 7535);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7535, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7535, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        java.lang.String str8 = cD6.getItemType();
        java.lang.String str9 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=1300, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = cD6.getArtist();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7537 + "'", int7 == 7537);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7537, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7537, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str91 = cD6.getAuthor();
        java.lang.Class<?> wildcardClass92 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7538, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7538, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        java.lang.String str37 = cD6.toString();
        java.lang.String str38 = cD6.getLocation();
        java.lang.Class<?> wildcardClass39 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=7547, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=7547, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1907, itemType=CD, location=LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3126, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=399, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4352, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7552, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7552, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        boolean boolean14 = cD6.isPurchasable();
        java.time.LocalDate localDate15 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate15, 7481, "LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7553 + "'", int9 == 7553);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7553, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7553, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7553, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7553, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getAuthor();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isPurchasable();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate12, 4751, "LibraryItem [itemId=3718, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7554 + "'", int7 == 7554);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean58 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        java.lang.String str14 = cD6.getArtist();
        java.lang.String str15 = cD6.getPrice();
        java.lang.Class<?> wildcardClass16 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7569, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7569, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.returnItem();
        double double11 = cD6.calculateOverduePenalty();
        double double12 = cD6.calculateOverduePenalty();
        boolean boolean13 = cD6.isOverdue();
        java.lang.String str14 = cD6.getLocation();
        java.lang.String str15 = cD6.getItemType();
        cD6.setIsPurchasable(true);
        cD6.setLocation("LibraryItem [itemId=2046, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7570, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7570, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getPrice();
        boolean boolean15 = cD6.isRented();
        java.lang.String str16 = cD6.toString();
        boolean boolean17 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=7571, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=7571, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getPrice();
        java.lang.String str10 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str10, "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        items.CD cD6 = new items.CD("LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=814, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD13 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD13.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str39 = cD38.getLocation();
        java.lang.String str40 = cD38.getLocation();
        items.CD cD47 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { cD31, cD38, cD47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = cD22.isOverdue();
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str76 = cD75.getLocation();
        java.lang.String str77 = cD75.getLocation();
        items.CD cD84 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { cD68, cD75, cD84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = cD59.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = cD13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.time.LocalDate localDate92 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate92, 6739, "LibraryItem [itemId=4535, itemType=CD, location=LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str91 = cD6.getAuthor();
        java.lang.String str92 = cD6.getLocation();
        java.lang.String str93 = cD6.getAuthor();
        java.lang.String str94 = cD6.getArtist();
        boolean boolean95 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7583, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7583, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!" + "'", str94, "hi!");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.returnItem();
        double double11 = cD6.calculateOverduePenalty();
        double double12 = cD6.calculateOverduePenalty();
        items.CD cD19 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD19.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD28 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str29 = cD28.getLocation();
        java.lang.String str30 = cD28.getLocation();
        items.CD cD37 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { cD37, cD44, cD53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = cD28.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = cD28.isOverdue();
        items.CD cD65 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str66 = cD65.getLocation();
        java.lang.String str67 = cD65.getLocation();
        items.CD cD74 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str82 = cD81.getLocation();
        java.lang.String str83 = cD81.getLocation();
        items.CD cD90 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { cD74, cD81, cD90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = cD65.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = cD28.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = cD19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7593, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7593, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        double double9 = cD6.calculateOverduePenalty();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7603, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7603, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        boolean boolean39 = cD6.isRented();
        java.lang.String str40 = cD6.getDetails();
        cD6.setLocation("LibraryItem [itemId=1718, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str43 = cD6.getPrice();
        java.lang.String str44 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str40, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str15 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str17 = cD6.toString();
        java.lang.String str18 = cD6.getDetails();
        boolean boolean19 = cD6.isPurchasable();
        java.lang.String str20 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7608 + "'", int9 == 7608);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=7608, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=7608, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str18, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        java.lang.String str40 = cD6.getTitle();
        java.lang.String str41 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=5897, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.setBorrowerEmail("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7613, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7613, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getItemType();
        cD6.returnItem();
        java.lang.String str13 = cD6.getLocation();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7614, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7614, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        cD6.returnItem();
        java.lang.String str87 = cD6.getArtist();
        double double88 = cD6.calculateOverduePenalty();
        boolean boolean89 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7615, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7615, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str14 = cD6.getItemType();
        cD6.returnItem();
        cD6.setBorrowerEmail("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7624 + "'", int9 == 7624);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7624, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7624, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=69, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7626 + "'", int9 == 7626);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7626, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7626, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7628, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7628, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        items.CD cD6 = new items.CD("LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=2639, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str10 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=2639, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str10, "CD: LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=2639, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3683, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3992, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "", "LibraryItem [itemId=5665, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str11 = cD6.getArtist();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getDetails();
        items.CD cD20 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD20.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD29 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str30 = cD29.getLocation();
        java.lang.String str31 = cD29.getLocation();
        items.CD cD38 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD45 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str46 = cD45.getLocation();
        java.lang.String str47 = cD45.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray55 = new items.LibraryItem[] { cD38, cD45, cD54 };
        java.util.ArrayList<items.LibraryItem> libraryItemList56 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList56, libraryItemArray55);
        boolean boolean58 = cD29.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList56);
        boolean boolean59 = cD29.isOverdue();
        items.CD cD66 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str67 = cD66.getLocation();
        java.lang.String str68 = cD66.getLocation();
        items.CD cD75 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD82 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str83 = cD82.getLocation();
        java.lang.String str84 = cD82.getLocation();
        items.CD cD91 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray92 = new items.LibraryItem[] { cD75, cD82, cD91 };
        java.util.ArrayList<items.LibraryItem> libraryItemList93 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList93, libraryItemArray92);
        boolean boolean95 = cD66.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean96 = cD29.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean97 = cD20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean98 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7633, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7633, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        cD6.returnItem();
        items.CD cD18 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str19 = cD18.getLocation();
        java.lang.String str20 = cD18.getLocation();
        items.CD cD27 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD34 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str35 = cD34.getLocation();
        java.lang.String str36 = cD34.getLocation();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray44 = new items.LibraryItem[] { cD27, cD34, cD43 };
        java.util.ArrayList<items.LibraryItem> libraryItemList45 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList45, libraryItemArray44);
        boolean boolean47 = cD18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList45);
        boolean boolean48 = cD18.isOverdue();
        java.lang.String str49 = cD18.getLocation();
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str73 = cD72.getLocation();
        java.lang.String str74 = cD72.getLocation();
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { cD65, cD72, cD81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = cD56.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = cD18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        cD6.setIsPurchasable(true);
        java.lang.String str90 = cD6.toString();
        java.lang.String str91 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "LibraryItem [itemId=7643, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str90, "LibraryItem [itemId=7643, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "CD" + "'", str91, "CD");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.setBorrowerEmail("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        boolean boolean14 = cD6.isPurchasable();
        boolean boolean15 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7652, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7652, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        items.CD cD6 = new items.CD("LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=215, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        boolean boolean8 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD: LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "CD: LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int14 = cD6.getItemId();
        double double15 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7655, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7655, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7655 + "'", int14 == 7655);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str15 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str17 = cD6.toString();
        java.lang.String str18 = cD6.getPrice();
        java.lang.String str19 = cD6.getBorrowerEmail();
        java.lang.Class<?> wildcardClass20 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7664 + "'", int9 == 7664);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=7664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=7664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD" + "'", str19, "CD");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        int int12 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7666 + "'", int12 == 7666);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        java.lang.String str37 = cD6.toString();
        java.lang.String str38 = cD6.toString();
        double double39 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=7667, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=7667, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "LibraryItem [itemId=7667, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str38, "LibraryItem [itemId=7667, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getPrice();
        java.lang.String str9 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD:  by hi!. Location: . Purchasable: false" + "'", str9, "CD:  by hi!. Location: . Purchasable: false");
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getAuthor();
        java.lang.String str14 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7672 + "'", int9 == 7672);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        cD6.returnItem();
        cD6.setIsPurchasable(false);
        java.lang.String str89 = cD6.getItemType();
        java.lang.String str90 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "CD" + "'", str89, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "LibraryItem [itemId=7674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str90, "LibraryItem [itemId=7674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=3438, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=3882, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4220, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
        boolean boolean9 = cD6.isOverdue();
        boolean boolean10 = cD6.isRented();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.toString();
        java.lang.String str20 = cD17.getBorrowerEmail();
        java.lang.String str21 = cD17.getBorrowerEmail();
        java.lang.String str22 = cD17.getBorrowerEmail();
        java.lang.String str23 = cD17.getBorrowerEmail();
        cD17.returnItem();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        boolean boolean34 = cD31.isPurchasable();
        boolean boolean35 = cD31.isOverdue();
        cD31.returnItem();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        int int46 = cD43.getItemId();
        cD43.setBorrowerEmail("CD");
        java.lang.String str49 = cD43.getArtist();
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str73 = cD72.getLocation();
        java.lang.String str74 = cD72.getLocation();
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { cD65, cD72, cD81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = cD56.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = cD31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean88 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean89 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        double double90 = cD6.calculateOverduePenalty();
        cD6.returnItem();
        java.lang.String str92 = cD6.getArtist();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=7685, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=7685, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 7687 + "'", int46 == 7687);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double9 = cD6.calculateOverduePenalty();
        cD6.setIsPurchasable(true);
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=1927, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=6142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getTitle();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        java.lang.String str9 = cD6.getItemType();
        cD6.setIsPurchasable(true);
        int int12 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD" + "'", str9, "CD");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7694 + "'", int12 == 7694);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getBorrowerEmail();
        java.lang.String str16 = cD6.getDetails();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getAuthor();
        java.lang.String str51 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=4573, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7696 + "'", int9 == 7696);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CD" + "'", str51, "CD");
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getBorrowerEmail();
        java.lang.String str16 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7701 + "'", int9 == 7701);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7701, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7701, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=7701, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=7701, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = cD6.getItemId();
        java.lang.String str8 = cD6.getItemType();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7702 + "'", int7 == 7702);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double9 = cD6.calculateOverduePenalty();
        cD6.setIsPurchasable(true);
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=1927, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=6142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=3601, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=2369, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double17 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getLocation();
        java.lang.String str14 = cD6.getItemType();
        boolean boolean15 = cD6.isOverdue();
        boolean boolean16 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7706, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7706, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getLocation();
        boolean boolean14 = cD6.isRented();
        items.CD cD21 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD21.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD30 = new items.CD("", "", false, true, "", "hi!");
        int int31 = cD30.getItemId();
        boolean boolean32 = cD30.isPurchasable();
        items.CD cD39 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str40 = cD39.getLocation();
        java.lang.String str41 = cD39.getLocation();
        items.CD cD48 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD55 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str56 = cD55.getLocation();
        java.lang.String str57 = cD55.getLocation();
        items.CD cD64 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { cD48, cD55, cD64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = cD39.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = cD30.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = cD21.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str72 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7708 + "'", int11 == 7708);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7710 + "'", int31 == 7710);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        boolean boolean38 = cD6.isRented();
        cD6.setBorrowerEmail("LibraryItem [itemId=3748, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7715 + "'", int37 == 7715);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double9 = cD6.calculateOverduePenalty();
        cD6.setIsPurchasable(true);
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7720 + "'", int9 == 7720);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getItemType();
        java.lang.String str14 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getArtist();
        boolean boolean38 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        boolean boolean13 = cD6.isRented();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2226, itemType=CD, location=LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1724, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getPrice();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD15.isOverdue();
        java.lang.String str46 = cD15.getLocation();
        items.CD cD53 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str54 = cD53.getLocation();
        java.lang.String str55 = cD53.getLocation();
        items.CD cD62 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str70 = cD69.getLocation();
        java.lang.String str71 = cD69.getLocation();
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray79 = new items.LibraryItem[] { cD62, cD69, cD78 };
        java.util.ArrayList<items.LibraryItem> libraryItemList80 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList80, libraryItemArray79);
        boolean boolean82 = cD53.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean83 = cD15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean84 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList80);
        java.lang.String str85 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getAuthor();
        cD6.setLocation("LibraryItem [itemId=232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getItemType();
        boolean boolean13 = cD6.isOverdue();
        java.lang.String str14 = cD6.toString();
        double double15 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7738 + "'", int11 == 7738);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD" + "'", str12, "CD");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7738, itemType=CD, location=LibraryItem [itemId=232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7738, itemType=CD, location=LibraryItem [itemId=232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        double double37 = cD6.calculateOverduePenalty();
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7743, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7743, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        java.lang.String str8 = cD6.getBorrowerEmail();
        boolean boolean9 = cD6.isPurchasable();
        java.lang.String str10 = cD6.getLocation();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7745 + "'", int9 == 7745);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7745, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7745, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getLocation();
        java.lang.String str14 = cD6.getTitle();
        cD6.returnItem();
        java.lang.String str16 = cD6.getBorrowerEmail();
        double double17 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7746 + "'", int11 == 7746);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str15 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str17 = cD6.toString();
        java.lang.String str18 = cD6.getPrice();
        cD6.setBorrowerEmail("LibraryItem [itemId=1250, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7748 + "'", int9 == 7748);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=7748, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=7748, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=7748, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=7748, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("CD: hi! by hi!. Location: hi!. Purchasable: true");
        java.time.LocalDate localDate17 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate17, 0, "LibraryItem [itemId=6758, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7749 + "'", int9 == 7749);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7749, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7749, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7749, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7749, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getAuthor();
        java.lang.String str51 = cD6.getItemType();
        java.lang.String str52 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7751 + "'", int9 == 7751);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CD" + "'", str51, "CD");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        cD6.returnItem();
        items.CD cD18 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str19 = cD18.getLocation();
        java.lang.String str20 = cD18.getLocation();
        items.CD cD27 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD34 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str35 = cD34.getLocation();
        java.lang.String str36 = cD34.getLocation();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray44 = new items.LibraryItem[] { cD27, cD34, cD43 };
        java.util.ArrayList<items.LibraryItem> libraryItemList45 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList45, libraryItemArray44);
        boolean boolean47 = cD18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList45);
        boolean boolean48 = cD18.isOverdue();
        java.lang.String str49 = cD18.getLocation();
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str73 = cD72.getLocation();
        java.lang.String str74 = cD72.getLocation();
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { cD65, cD72, cD81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = cD56.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = cD18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean88 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        cD6.setLocation("LibraryItem [itemId=1614, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        boolean boolean54 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7765 + "'", int9 == 7765);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setIsPurchasable(false);
        java.lang.String str18 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getAuthor();
        java.lang.String str10 = cD6.getDetails();
        boolean boolean11 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str10, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isOverdue();
        java.lang.Class<?> wildcardClass15 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.Class<?> wildcardClass17 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1281, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2249, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3147, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1069, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        java.lang.String str87 = cD6.getDetails();
        java.lang.String str88 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7779, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7779, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str87, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        items.CD cD6 = new items.CD("LibraryItem [itemId=516, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=372, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
        boolean boolean8 = cD6.isRented();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=7788, itemType=CD, location=LibraryItem [itemId=516, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=7788, itemType=CD, location=LibraryItem [itemId=516, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1153, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = cD6.getBorrowerEmail();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7789 + "'", int7 == 7789);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str91 = cD6.getAuthor();
        java.lang.String str92 = cD6.getItemType();
        java.lang.String str93 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7790, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7790, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "CD" + "'", str92, "CD");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "CD" + "'", str93, "CD");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getTitle();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isOverdue();
        cD6.setIsPurchasable(true);
        java.lang.String str17 = cD6.getArtist();
        java.lang.String str18 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7799, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7799, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        items.CD cD6 = new items.CD("LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=506, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=3227, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2725, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        double double13 = cD6.calculateOverduePenalty();
        items.CD cD20 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str21 = cD20.getLocation();
        java.lang.String str22 = cD20.toString();
        java.lang.String str23 = cD20.getBorrowerEmail();
        java.lang.String str24 = cD20.getBorrowerEmail();
        java.lang.String str25 = cD20.getBorrowerEmail();
        java.lang.String str26 = cD20.getBorrowerEmail();
        java.lang.String str27 = cD20.getDetails();
        items.CD cD34 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double35 = cD34.calculateOverduePenalty();
        java.lang.String str36 = cD34.getBorrowerEmail();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.toString();
        java.lang.String str46 = cD43.getBorrowerEmail();
        java.lang.String str47 = cD43.getPrice();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD54.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str80 = cD79.getLocation();
        java.lang.String str81 = cD79.getLocation();
        items.CD cD88 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { cD72, cD79, cD88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = cD63.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = cD54.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = cD34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = cD20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean97 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        java.lang.Class<?> wildcardClass98 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7802 + "'", int9 == 7802);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7802, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7802, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7802, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7802, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=7803, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=7803, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str27, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "LibraryItem [itemId=7805, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str45, "LibraryItem [itemId=7805, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.toString();
        int int14 = cD6.getItemId();
        java.lang.Class<?> wildcardClass15 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=7811, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=7811, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7811 + "'", int14 == 7811);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1090, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1946, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "");
        cD6.setBorrowerEmail("LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=295, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isPurchasable();
        java.lang.String str15 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7819, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7819, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getAuthor();
        boolean boolean15 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        cD6.returnItem();
        java.lang.String str40 = cD6.getArtist();
        cD6.setIsPurchasable(false);
        java.lang.String str43 = cD6.getDetails();
        java.lang.String str44 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str43, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "CD" + "'", str44, "CD");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        java.lang.String str17 = cD6.getTitle();
        boolean boolean18 = cD6.isOverdue();
        int int19 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7825, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7825, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7825 + "'", int19 == 7825);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getBorrowerEmail();
        java.lang.String str16 = cD6.getItemType();
        java.lang.String str17 = cD6.getPrice();
        java.lang.Class<?> wildcardClass18 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getAuthor();
        java.lang.String str51 = cD6.getItemType();
        java.lang.String str52 = cD6.getBorrowerEmail();
        cD6.returnItem();
        java.lang.String str54 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7828 + "'", int9 == 7828);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CD" + "'", str51, "CD");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CD" + "'", str52, "CD");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        cD6.returnItem();
        java.lang.String str12 = cD6.getBorrowerEmail();
        java.lang.String str13 = cD6.getTitle();
        java.lang.String str14 = cD6.toString();
        boolean boolean15 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7834, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7834, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        java.lang.String str36 = cD6.getDetails();
        java.lang.String str37 = cD6.toString();
        java.time.LocalDate localDate38 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate38, 0, "LibraryItem [itemId=3375, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str36, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=7835, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=7835, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        java.lang.String str40 = cD6.getBorrowerEmail();
        java.lang.String str41 = cD6.getDetails();
        java.lang.String str42 = cD6.getTitle();
        java.lang.String str43 = cD6.getTitle();
        java.lang.String str44 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: true" + "'", str41, "CD: hi! by hi!. Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=94, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=2006, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean9 = cD6.isRented();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        boolean boolean12 = cD6.isOverdue();
        java.lang.String str13 = cD6.getDetails();
        boolean boolean14 = cD6.isRented();
        java.lang.String str15 = cD6.getTitle();
        java.lang.Class<?> wildcardClass16 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        items.CD cD6 = new items.CD("LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=359, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isPurchasable();
        java.lang.String str8 = cD6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7848, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7848, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        items.CD cD6 = new items.CD("LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        java.lang.String str8 = cD6.getArtist();
        boolean boolean9 = cD6.isPurchasable();
        java.lang.String str10 = cD6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str10, "CD: LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getBorrowerEmail();
        items.CD cD28 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str29 = cD28.getLocation();
        java.lang.String str30 = cD28.getLocation();
        boolean boolean31 = cD28.isPurchasable();
        boolean boolean32 = cD28.isOverdue();
        java.lang.String str33 = cD28.getItemType();
        java.lang.String str34 = cD28.getAuthor();
        cD28.returnItem();
        int int36 = cD28.getItemId();
        cD28.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str39 = cD28.getArtist();
        cD28.setBorrowerEmail("LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD28.returnItem();
        items.CD cD49 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str50 = cD49.getLocation();
        java.lang.String str51 = cD49.getLocation();
        int int52 = cD49.getItemId();
        cD49.setBorrowerEmail("CD");
        java.lang.String str55 = cD49.getArtist();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str79 = cD78.getLocation();
        java.lang.String str80 = cD78.getLocation();
        items.CD cD87 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { cD71, cD78, cD87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = cD62.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = cD49.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = cD28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "CD" + "'", str33, "CD");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7852 + "'", int36 == 7852);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7853 + "'", int52 == 7853);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.toString();
        cD6.setIsPurchasable(true);
        cD6.setIsPurchasable(false);
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.getLocation();
        int int27 = cD24.getItemId();
        cD24.setBorrowerEmail("CD");
        java.lang.String str30 = cD24.getDetails();
        cD24.setIsPurchasable(false);
        items.CD cD39 = new items.CD("CD", "LibraryItem [itemId=1232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        items.CD cD46 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str47 = cD46.getLocation();
        java.lang.String str48 = cD46.getLocation();
        items.CD cD55 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { cD55, cD62, cD71 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = cD46.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = cD39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = cD24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean78 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList73);
        cD6.setLocation("LibraryItem [itemId=2009, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass81 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=7858, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=7858, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7859 + "'", int27 == 7859);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str30, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isRented();
        boolean boolean12 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setBorrowerEmail("LibraryItem [itemId=3558, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7865, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7865, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.getLocation();
        items.CD cD23 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD30 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str31 = cD30.getLocation();
        java.lang.String str32 = cD30.getLocation();
        items.CD cD39 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray40 = new items.LibraryItem[] { cD23, cD30, cD39 };
        java.util.ArrayList<items.LibraryItem> libraryItemList41 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList41, libraryItemArray40);
        boolean boolean43 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList41);
        boolean boolean44 = cD14.isOverdue();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD67 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str68 = cD67.getLocation();
        java.lang.String str69 = cD67.getLocation();
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { cD60, cD67, cD76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = cD51.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        cD6.returnItem();
        java.lang.String str84 = cD6.getPrice();
        double double85 = cD6.calculateOverduePenalty();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str84, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        cD6.setBorrowerEmail("LibraryItem [itemId=3557, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str88 = cD6.getAuthor();
        cD6.setIsPurchasable(false);
        java.lang.String str91 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7876, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7876, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "CD: hi! by hi!. Location: hi!. Purchasable: false", "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        java.lang.String str8 = cD6.getDetails();
        java.lang.String str9 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str7, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD: CD: hi! by hi!. Location: hi!. Purchasable: false by LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "CD: CD: hi! by hi!. Location: hi!. Purchasable: false by LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        items.CD cD6 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean9 = cD6.isOverdue();
        double double10 = cD6.calculateOverduePenalty();
        boolean boolean11 = cD6.isRented();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2521, itemType=CD, location=LibraryItem [itemId=516, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=610, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1947, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=4104, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3818, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        items.CD cD6 = new items.CD("LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=958, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5929, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1668, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        java.lang.String str8 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        double double11 = cD6.calculateOverduePenalty();
        boolean boolean12 = cD6.isOverdue();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD: LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "CD: LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.toString();
        boolean boolean14 = cD6.isRented();
        int int15 = cD6.getItemId();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7897 + "'", int9 == 7897);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=7897, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=7897, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7897 + "'", int15 == 7897);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str15 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str17 = cD6.getDetails();
        java.lang.String str18 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7898 + "'", int9 == 7898);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=7898, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=7898, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.toString();
        java.lang.String str13 = cD6.toString();
        java.lang.String str14 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7899, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7899, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=7899, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=7899, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str16 = cD6.getLocation();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=227, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getAuthor();
        boolean boolean22 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getPrice();
        java.lang.String str9 = cD6.getArtist();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.toString();
        java.lang.String str19 = cD16.getBorrowerEmail();
        java.lang.String str20 = cD16.getBorrowerEmail();
        cD16.setIsPurchasable(false);
        java.lang.String str23 = cD16.getArtist();
        int int24 = cD16.getItemId();
        boolean boolean25 = cD16.isRented();
        cD16.returnItem();
        items.CD cD33 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD33.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD42 = new items.CD("", "", false, true, "", "hi!");
        int int43 = cD42.getItemId();
        boolean boolean44 = cD42.isPurchasable();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD67 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str68 = cD67.getLocation();
        java.lang.String str69 = cD67.getLocation();
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { cD60, cD67, cD76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = cD51.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = cD42.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = cD33.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean83 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean84 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean85 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=7902, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=7902, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 7902 + "'", int24 == 7902);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7904 + "'", int43 == 7904);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.toString();
        java.lang.String str17 = cD14.getBorrowerEmail();
        java.lang.String str18 = cD14.getBorrowerEmail();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        items.CD cD34 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray51 = new items.LibraryItem[] { cD34, cD41, cD50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList52 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList52, libraryItemArray51);
        boolean boolean54 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList52);
        boolean boolean55 = cD25.isOverdue();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str79 = cD78.getLocation();
        java.lang.String str80 = cD78.getLocation();
        items.CD cD87 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { cD71, cD78, cD87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = cD62.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = cD14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        cD6.setIsPurchasable(false);
        boolean boolean97 = cD6.isRented();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7909 + "'", int7 == 7909);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=7910, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=7910, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getPrice();
        java.lang.String str13 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7919, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7919, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7919, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7919, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getAuthor();
        cD6.setLocation("LibraryItem [itemId=232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        boolean boolean12 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=7047, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2533, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1541, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1413, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1090, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD: LibraryItem [itemId=1413, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=1090, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=2533, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str7, "CD: LibraryItem [itemId=1413, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=1090, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=2533, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        items.CD cD6 = new items.CD("LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=359, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=435, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getTitle();
        double double14 = cD6.calculateOverduePenalty();
        cD6.setLocation("LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int17 = cD6.getItemId();
        boolean boolean18 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7924 + "'", int9 == 7924);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7924, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7924, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7924, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7924, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7924 + "'", int12 == 7924);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 7924 + "'", int17 == 7924);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setIsPurchasable(false);
        java.lang.String str18 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        java.lang.String str18 = cD6.getItemType();
        java.time.LocalDate localDate19 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate19, 2401, "LibraryItem [itemId=5260, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        items.CD cD6 = new items.CD("LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getArtist();
        java.lang.String str9 = cD6.getLocation();
        java.lang.String str10 = cD6.getAuthor();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        java.lang.String str87 = cD6.getDetails();
        boolean boolean88 = cD6.isPurchasable();
        java.lang.String str89 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7929, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7929, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str87, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str89, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        cD6.setBorrowerEmail("CD:  by hi!. Location: . Purchasable: false");
        boolean boolean15 = cD6.isOverdue();
        java.lang.String str16 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7940 + "'", int9 == 7940);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7940, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7940, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str15 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str17 = cD6.toString();
        java.lang.String str18 = cD6.getPrice();
        cD6.setBorrowerEmail("LibraryItem [itemId=1250, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean21 = cD6.isPurchasable();
        java.lang.String str22 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7941 + "'", int9 == 7941);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=7941, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=7941, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str22, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        cD6.setLocation("LibraryItem [itemId=1614, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        java.lang.Class<?> wildcardClass54 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7942 + "'", int9 == 7942);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        items.CD cD6 = new items.CD("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD");
        java.lang.String str7 = cD6.getTitle();
        java.lang.String str8 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.getItemType();
        java.lang.String str13 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD" + "'", str12, "CD");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by CD. Location: LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str13, "CD: LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by CD. Location: LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=95, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=2142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7948 + "'", int9 == 7948);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7948, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7948, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=2142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: LibraryItem [itemId=2142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        boolean boolean39 = cD6.isRented();
        java.lang.String str40 = cD6.getPrice();
        boolean boolean41 = cD6.isOverdue();
        boolean boolean42 = cD6.isPurchasable();
        cD6.setBorrowerEmail("LibraryItem [itemId=7035, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        java.lang.String str16 = cD6.getLocation();
        java.lang.String str17 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7953, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7953, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=327, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        boolean boolean17 = cD6.isPurchasable();
        java.lang.String str18 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7954, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7954, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7954 + "'", int11 == 7954);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7954, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7954, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double17 = cD6.calculateOverduePenalty();
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.toString();
        java.lang.String str27 = cD24.getBorrowerEmail();
        java.lang.String str28 = cD24.getBorrowerEmail();
        java.lang.String str29 = cD24.getBorrowerEmail();
        java.lang.String str30 = cD24.getBorrowerEmail();
        cD24.returnItem();
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str39 = cD38.getLocation();
        java.lang.String str40 = cD38.getLocation();
        boolean boolean41 = cD38.isPurchasable();
        boolean boolean42 = cD38.isOverdue();
        cD38.returnItem();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str51 = cD50.getLocation();
        java.lang.String str52 = cD50.getLocation();
        int int53 = cD50.getItemId();
        cD50.setBorrowerEmail("CD");
        java.lang.String str56 = cD50.getArtist();
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str80 = cD79.getLocation();
        java.lang.String str81 = cD79.getLocation();
        items.CD cD88 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { cD72, cD79, cD88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = cD63.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = cD50.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = cD38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = cD24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        java.lang.String str97 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7955, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7955, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LibraryItem [itemId=7956, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str26, "LibraryItem [itemId=7956, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7958 + "'", int53 == 7958);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str97, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        cD6.setLocation("LibraryItem [itemId=1596, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass88 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7963, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7963, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        cD6.setIsPurchasable(false);
        boolean boolean39 = cD6.isRented();
        java.lang.String str40 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        double double16 = cD6.calculateOverduePenalty();
        java.lang.String str17 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7976, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7976, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "CD: hi! by hi!. Location: hi!. Purchasable: false", "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass7 = cD6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=3415, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean11 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.toString();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7988 + "'", int9 == 7988);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=7988, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=7988, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2724, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD: CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true by LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", true, true, "LibraryItem [itemId=3413, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3932, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        java.lang.String str8 = cD6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        boolean boolean7 = cD6.isRented();
        java.lang.String str8 = cD6.getBorrowerEmail();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.toString();
        java.lang.String str18 = cD15.getBorrowerEmail();
        java.lang.String str19 = cD15.getPrice();
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD26.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray61 = new items.LibraryItem[] { cD44, cD51, cD60 };
        java.util.ArrayList<items.LibraryItem> libraryItemList62 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList62, libraryItemArray61);
        boolean boolean64 = cD35.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean65 = cD26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean66 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean67 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList62);
        java.lang.String str68 = cD6.getItemType();
        cD6.setLocation("LibraryItem [itemId=5849, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=7991, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=7991, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "CD" + "'", str68, "CD");
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.getTitle();
        java.lang.Class<?> wildcardClass12 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7997 + "'", int9 == 7997);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        cD6.returnItem();
        java.lang.String str15 = cD6.getPrice();
        boolean boolean16 = cD6.isPurchasable();
        java.time.LocalDate localDate17 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate17, 73, "LibraryItem [itemId=1279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7998 + "'", int9 == 7998);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7998, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7998, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7998, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7998, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7998 + "'", int12 == 7998);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate10, 7337, "LibraryItem [itemId=2022, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8003, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8003, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getPrice();
        double double51 = cD6.calculateOverduePenalty();
        boolean boolean52 = cD6.isOverdue();
        java.lang.String str53 = cD6.getBorrowerEmail();
        java.time.LocalDate localDate54 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate54, 6838, "LibraryItem [itemId=3582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8004 + "'", int9 == 8004);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "CD" + "'", str53, "CD");
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getBorrowerEmail();
        java.lang.String str13 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8009, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8009, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8009 + "'", int11 == 8009);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        java.lang.String str14 = cD6.getBorrowerEmail();
        java.lang.String str15 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=3438, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isOverdue();
        java.lang.String str19 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8010 + "'", int9 == 8010);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8010, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8010, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8010, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8010, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8010 + "'", int12 == 8010);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getArtist();
        boolean boolean15 = cD6.isPurchasable();
        java.lang.String str16 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getLocation();
        boolean boolean18 = cD6.isRented();
        boolean boolean19 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getItemType();
        java.lang.String str40 = cD6.toString();
        java.lang.String str41 = cD6.getBorrowerEmail();
        java.time.LocalDate localDate42 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate42, 6582, "LibraryItem [itemId=5292, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8013 + "'", int37 == 8013);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CD" + "'", str39, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "LibraryItem [itemId=8013, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str40, "LibraryItem [itemId=8013, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1188, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1122, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        int int8 = cD6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8017 + "'", int8 == 8017);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1332, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=7593, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5326, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6704, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=1725, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getArtist();
        cD6.setBorrowerEmail("LibraryItem [itemId=7460, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8019, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8019, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        boolean boolean13 = cD6.isOverdue();
        java.lang.String str14 = cD6.getTitle();
        java.lang.String str15 = cD6.getAuthor();
        java.lang.String str16 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8021 + "'", int9 == 8021);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8021, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8021, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8021, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8021, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8021 + "'", int12 == 8021);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        items.CD cD6 = new items.CD("LibraryItem [itemId=7537, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1488, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=814, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4250, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1281, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2249, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3147, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1069, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD13 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str14 = cD13.getLocation();
        java.lang.String str15 = cD13.getLocation();
        int int16 = cD13.getItemId();
        java.lang.String str17 = cD13.toString();
        java.lang.String str18 = cD13.getTitle();
        java.lang.String str19 = cD13.getAuthor();
        cD13.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str22 = cD13.getTitle();
        java.lang.String str23 = cD13.getLocation();
        items.CD cD30 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str31 = cD30.getBorrowerEmail();
        java.lang.String str32 = cD30.getBorrowerEmail();
        cD30.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD41.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str51 = cD50.getLocation();
        java.lang.String str52 = cD50.getLocation();
        items.CD cD59 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD66 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str67 = cD66.getLocation();
        java.lang.String str68 = cD66.getLocation();
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { cD59, cD66, cD75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = cD50.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = cD41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = cD30.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = cD13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean83 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        java.lang.String str84 = cD6.getAuthor();
        java.lang.String str85 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8024 + "'", int16 == 8024);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=8024, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=8024, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LibraryItem [itemId=1069, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str84, "LibraryItem [itemId=1069, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "CD" + "'", str85, "CD");
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getLocation();
        java.lang.String str14 = cD6.getItemType();
        cD6.setBorrowerEmail("LibraryItem [itemId=4247, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate9, 3878, "LibraryItem [itemId=6273, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        java.lang.String str37 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        items.CD cD48 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str49 = cD48.getLocation();
        java.lang.String str50 = cD48.getLocation();
        int int51 = cD48.getItemId();
        java.lang.String str52 = cD48.getBorrowerEmail();
        cD48.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = cD48.getItemType();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str79 = cD78.getLocation();
        java.lang.String str80 = cD78.getLocation();
        items.CD cD87 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { cD71, cD78, cD87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = cD62.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = cD48.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = cD6.isOverdue();
        int int95 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 8037 + "'", int51 == 8037);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "CD" + "'", str55, "CD");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int95 + "' != '" + 8033 + "'", int95 == 8033);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        items.CD cD6 = new items.CD("LibraryItem [itemId=348, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD", true, false, "LibraryItem [itemId=1498, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=862, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        items.CD cD6 = new items.CD("LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        double double8 = cD6.calculateOverduePenalty();
        java.lang.String str9 = cD6.getItemType();
        cD6.setLocation("LibraryItem [itemId=7706, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD" + "'", str9, "CD");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        boolean boolean11 = cD6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "CD: hi! by hi!. Location: hi!. Purchasable: false", "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        java.lang.String str8 = cD6.getDetails();
        cD6.setIsPurchasable(true);
        java.lang.String str11 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str7, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD: CD: hi! by hi!. Location: hi!. Purchasable: false by LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "CD: CD: hi! by hi!. Location: hi!. Purchasable: false by LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        double double15 = cD6.calculateOverduePenalty();
        java.lang.String str16 = cD6.getTitle();
        java.lang.String str17 = cD6.getArtist();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8047 + "'", int14 == 8047);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        items.CD cD6 = new items.CD("LibraryItem [itemId=861, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1809, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=2568, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4068, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=8048, itemType=CD, location=LibraryItem [itemId=861, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=2568, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=8048, itemType=CD, location=LibraryItem [itemId=861, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=2568, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        cD6.setBorrowerEmail("LibraryItem [itemId=658, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double40 = cD6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass41 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD15.isOverdue();
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=1233, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str87 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1233, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str87, "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1233, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        java.lang.String str8 = cD6.getItemType();
        java.lang.String str9 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=1300, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass12 = cD6.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8062 + "'", int7 == 8062);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8062, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8062, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD15.isOverdue();
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        cD6.returnItem();
        java.lang.String str85 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=862, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str88 = cD6.toString();
        java.lang.Class<?> wildcardClass89 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str85, "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "LibraryItem [itemId=8063, itemType=CD, location=LibraryItem [itemId=862, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str88, "LibraryItem [itemId=8063, itemType=CD, location=LibraryItem [itemId=862, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2355, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2727, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=6841, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4068, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2139, itemType=CD, location=LibraryItem [itemId=546, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=978, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=929, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=613, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=929, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=929, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double9 = cD6.calculateOverduePenalty();
        java.lang.String str10 = cD6.getLocation();
        java.lang.String str11 = cD6.getPrice();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isRented();
        items.CD cD18 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD18.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD27 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str28 = cD27.getLocation();
        java.lang.String str29 = cD27.getLocation();
        items.CD cD36 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray53 = new items.LibraryItem[] { cD36, cD43, cD52 };
        java.util.ArrayList<items.LibraryItem> libraryItemList54 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList54, libraryItemArray53);
        boolean boolean56 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList54);
        boolean boolean57 = cD27.isOverdue();
        items.CD cD64 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str65 = cD64.getLocation();
        java.lang.String str66 = cD64.getLocation();
        items.CD cD73 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD80 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str81 = cD80.getLocation();
        java.lang.String str82 = cD80.getLocation();
        items.CD cD89 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray90 = new items.LibraryItem[] { cD73, cD80, cD89 };
        java.util.ArrayList<items.LibraryItem> libraryItemList91 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList91, libraryItemArray90);
        boolean boolean93 = cD64.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean94 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean95 = cD18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean96 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        java.lang.String str97 = cD6.getDetails();
        java.lang.String str98 = cD6.getArtist();
        boolean boolean99 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8075, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8075, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str97, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!" + "'", str98, "hi!");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        items.CD cD6 = new items.CD("LibraryItem [itemId=5271, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2639, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=5367, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=7222, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.toString();
        java.lang.String str13 = cD6.getArtist();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8087, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8087, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getPrice();
        java.lang.String str15 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getTitle();
        boolean boolean14 = cD6.isRented();
        java.lang.String str15 = cD6.getTitle();
        items.CD cD22 = new items.CD("", "LibraryItem [itemId=94, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str23 = cD22.getPrice();
        items.CD cD30 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str31 = cD30.getLocation();
        java.lang.String str32 = cD30.getLocation();
        int int33 = cD30.getItemId();
        java.lang.String str34 = cD30.getBorrowerEmail();
        cD30.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str37 = cD30.getItemType();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { cD53, cD60, cD69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = cD44.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = cD30.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = cD22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean76 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8089, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8089, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str23, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8091 + "'", int33 == 8091);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "CD" + "'", str37, "CD");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        java.lang.String str14 = cD6.getBorrowerEmail();
        int int15 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8096 + "'", int9 == 8096);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8096, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8096, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8096, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8096, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8096 + "'", int12 == 8096);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8096 + "'", int15 == 8096);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        double double9 = cD6.calculateOverduePenalty();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.getDetails();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8097, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8097, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8097 + "'", int12 == 8097);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getTitle();
        java.lang.Class<?> wildcardClass12 = cD6.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8107 + "'", int7 == 8107);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getAuthor();
        java.lang.String str10 = cD6.getDetails();
        cD6.setBorrowerEmail("LibraryItem [itemId=1375, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate13, 5678, "LibraryItem [itemId=3413, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str10, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getLocation();
        java.lang.String str10 = cD6.getDetails();
        cD6.setIsPurchasable(true);
        boolean boolean13 = cD6.isRented();
        java.lang.String str14 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8109, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8109, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str10, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: true" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: true");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        cD6.setIsPurchasable(false);
        java.lang.String str11 = cD6.getDetails();
        java.lang.String str12 = cD6.getPrice();
        boolean boolean13 = cD6.isRented();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8117 + "'", int7 == 8117);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD:  by hi!. Location: . Purchasable: false" + "'", str11, "CD:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8118 + "'", int14 == 8118);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getArtist();
        java.lang.String str18 = cD6.getLocation();
        java.lang.String str19 = cD6.getTitle();
        double double20 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8119, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8119, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        boolean boolean89 = cD6.isOverdue();
        int int90 = cD6.getItemId();
        java.lang.String str91 = cD6.getDetails();
        java.lang.String str92 = cD6.getArtist();
        boolean boolean93 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8120, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8120, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int90 + "' != '" + 8120 + "'", int90 == 8120);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str91, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = cD6.getItemId();
        cD6.setLocation("LibraryItem [itemId=4325, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8129 + "'", int7 == 8129);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        items.CD cD6 = new items.CD("LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=958, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = cD6.getPrice();
        java.lang.String str13 = cD6.getItemType();
        cD6.setBorrowerEmail("LibraryItem [itemId=1488, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8131, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8131, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        boolean boolean15 = cD6.isRented();
        java.lang.String str16 = cD6.getAuthor();
        java.lang.String str17 = cD6.getLocation();
        java.lang.String str18 = cD6.getPrice();
        int int19 = cD6.getItemId();
        boolean boolean20 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8132 + "'", int19 == 8132);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        java.lang.String str15 = cD6.getPrice();
        java.lang.String str16 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8133, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8133, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getAuthor();
        int int10 = cD6.getItemId();
        java.lang.String str11 = cD6.getBorrowerEmail();
        int int12 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8134 + "'", int10 == 8134);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8134 + "'", int12 == 8134);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2482, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1391, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=3895, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=933, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isPurchasable();
        java.lang.String str8 = cD6.getPrice();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=933, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=933, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getAuthor();
        java.lang.String str8 = cD6.getDetails();
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate9, 1811, "LibraryItem [itemId=6060, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8137 + "'", int9 == 8137);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8137, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8137, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        items.CD cD6 = new items.CD("LibraryItem [itemId=397, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1068, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=69, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=1018, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        boolean boolean10 = cD6.isRented();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean48 = cD6.isRented();
        boolean boolean49 = cD6.isOverdue();
        java.lang.String str50 = cD6.getDetails();
        java.lang.String str51 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8139, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8139, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str50, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3541, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=506, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1628, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
        int int9 = cD6.getItemId();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8145 + "'", int9 == 8145);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getArtist();
        java.lang.String str38 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isOverdue();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8150 + "'", int9 == 8150);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1950, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", true, false, "", "LibraryItem [itemId=1965, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isOverdue();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isOverdue();
        boolean boolean12 = cD6.isRented();
        double double13 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=2819, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8152 + "'", int9 == 8152);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1746, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1584, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=2820, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=7547, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        double double8 = cD6.calculateOverduePenalty();
        java.lang.String str9 = cD6.getPrice();
        cD6.returnItem();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getPrice();
        java.lang.String str15 = cD6.getPrice();
        cD6.setIsPurchasable(false);
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.getLocation();
        int int27 = cD24.getItemId();
        java.lang.String str28 = cD24.toString();
        java.lang.String str29 = cD24.getTitle();
        java.lang.String str30 = cD24.getAuthor();
        cD24.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str33 = cD24.getTitle();
        java.lang.String str34 = cD24.getLocation();
        items.CD cD41 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str42 = cD41.getBorrowerEmail();
        java.lang.String str43 = cD41.getBorrowerEmail();
        cD41.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD52.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD61 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str62 = cD61.getLocation();
        java.lang.String str63 = cD61.getLocation();
        items.CD cD70 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str78 = cD77.getLocation();
        java.lang.String str79 = cD77.getLocation();
        items.CD cD86 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray87 = new items.LibraryItem[] { cD70, cD77, cD86 };
        java.util.ArrayList<items.LibraryItem> libraryItemList88 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList88, libraryItemArray87);
        boolean boolean90 = cD61.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean91 = cD52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean92 = cD41.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean93 = cD24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean94 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8164 + "'", int27 == 8164);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LibraryItem [itemId=8164, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str28, "LibraryItem [itemId=8164, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean58 = cD6.isRented();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        cD6.setBorrowerEmail("LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str41 = cD6.getAuthor();
        java.lang.String str42 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str42, "LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getDetails();
        double double16 = cD6.calculateOverduePenalty();
        java.lang.String str17 = cD6.getTitle();
        java.lang.String str18 = cD6.getPrice();
        java.lang.Class<?> wildcardClass19 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8181, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8181, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
        boolean boolean9 = cD6.isOverdue();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        double double12 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8182 + "'", int11 == 8182);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getLocation();
        java.lang.String str12 = cD6.getAuthor();
        boolean boolean13 = cD6.isOverdue();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8183, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8183, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getArtist();
        java.lang.String str40 = cD6.getItemType();
        java.lang.String str41 = cD6.getPrice();
        cD6.setBorrowerEmail("LibraryItem [itemId=402, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8185 + "'", int37 == 8185);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD" + "'", str40, "CD");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        boolean boolean38 = cD6.isRented();
        java.lang.String str39 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8189 + "'", int37 == 8189);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CD" + "'", str39, "CD");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getLocation();
        java.lang.String str12 = cD6.getDetails();
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate13, 3789, "LibraryItem [itemId=5701, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8193, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8193, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str12, "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getBorrowerEmail();
        boolean boolean22 = cD6.isPurchasable();
        int int23 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8194 + "'", int23 == 8194);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getArtist();
        java.lang.String str16 = cD6.getTitle();
        items.CD cD23 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double24 = cD23.calculateOverduePenalty();
        java.lang.String str25 = cD23.getBorrowerEmail();
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.toString();
        java.lang.String str35 = cD32.getBorrowerEmail();
        java.lang.String str36 = cD32.getPrice();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD43.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD32.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = cD23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        double double86 = cD6.calculateOverduePenalty();
        java.lang.String str87 = cD6.getPrice();
        java.lang.String str88 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LibraryItem [itemId=8199, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str34, "LibraryItem [itemId=8199, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "CD" + "'", str88, "CD");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        boolean boolean40 = cD6.isOverdue();
        boolean boolean41 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=1829, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1122, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1748, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4538, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=8217, itemType=CD, location=LibraryItem [itemId=1122, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=8217, itemType=CD, location=LibraryItem [itemId=1122, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        java.lang.String str15 = cD6.getDetails();
        java.lang.String str16 = cD6.getTitle();
        java.lang.String str17 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8219 + "'", int14 == 8219);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2156, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=6279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4042, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = cD6.getItemId();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8228 + "'", int7 == 8228);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getDetails();
        double double10 = cD6.calculateOverduePenalty();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8229 + "'", int11 == 8229);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getAuthor();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8230 + "'", int7 == 8230);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        items.CD cD6 = new items.CD("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass7 = cD6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=327, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        java.lang.String str17 = cD6.getBorrowerEmail();
        java.lang.String str18 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8237, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8237, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8237 + "'", int11 == 8237);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8237, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8237, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getLocation();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        cD6.returnItem();
        java.lang.String str15 = cD6.getPrice();
        java.lang.String str16 = cD6.getArtist();
        java.lang.String str17 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8247 + "'", int9 == 8247);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8247, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8247, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8247, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8247, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8247 + "'", int12 == 8247);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str16 = cD6.getLocation();
        cD6.setIsPurchasable(false);
        java.lang.String str19 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getPrice();
        java.lang.String str9 = cD6.getArtist();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.toString();
        java.lang.String str19 = cD16.getBorrowerEmail();
        java.lang.String str20 = cD16.getBorrowerEmail();
        cD16.setIsPurchasable(false);
        java.lang.String str23 = cD16.getArtist();
        int int24 = cD16.getItemId();
        boolean boolean25 = cD16.isRented();
        cD16.returnItem();
        items.CD cD33 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD33.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD42 = new items.CD("", "", false, true, "", "hi!");
        int int43 = cD42.getItemId();
        boolean boolean44 = cD42.isPurchasable();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD67 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str68 = cD67.getLocation();
        java.lang.String str69 = cD67.getLocation();
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { cD60, cD67, cD76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = cD51.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = cD42.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = cD33.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean83 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean84 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        java.lang.String str85 = cD6.getLocation();
        boolean boolean86 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=8250, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=8250, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8250 + "'", int24 == 8250);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8252 + "'", int43 == 8252);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getTitle();
        boolean boolean12 = cD6.isPurchasable();
        java.lang.String str13 = cD6.toString();
        java.lang.String str14 = cD6.getLocation();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8265 + "'", int7 == 8265);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=8265, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=8265, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.returnItem();
        double double11 = cD6.calculateOverduePenalty();
        double double12 = cD6.calculateOverduePenalty();
        boolean boolean13 = cD6.isOverdue();
        java.lang.String str14 = cD6.getLocation();
        java.lang.String str15 = cD6.toString();
        java.lang.String str16 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8266, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8266, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=8266, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=8266, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("CD: hi! by hi!. Location: hi!. Purchasable: true");
        java.lang.String str17 = cD6.getAuthor();
        java.lang.String str18 = cD6.getItemType();
        java.lang.String str19 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8269 + "'", int9 == 8269);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8269, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8269, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8269, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8269, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str19, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        java.lang.String str16 = cD6.getLocation();
        java.lang.String str17 = cD6.getItemType();
        boolean boolean18 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD" + "'", str17, "CD");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3356, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1866, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=3894, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=611, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate7, 4067, "LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=1452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=5590, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8273 + "'", int9 == 8273);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        java.lang.String str87 = cD6.getAuthor();
        double double88 = cD6.calculateOverduePenalty();
        java.lang.String str89 = cD6.getDetails();
        java.lang.String str90 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8275, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8275, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str89, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3014, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1030, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=3038, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6925, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        items.CD cD6 = new items.CD("LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=814, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        cD6.returnItem();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        boolean boolean89 = cD6.isOverdue();
        int int90 = cD6.getItemId();
        java.lang.String str91 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=2911, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str94 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8286, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8286, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int90 + "' != '" + 8286 + "'", int90 == 8286);
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "LibraryItem [itemId=8286, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str91, "LibraryItem [itemId=8286, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "LibraryItem [itemId=2911, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str94, "LibraryItem [itemId=2911, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getDetails();
        boolean boolean13 = cD6.isPurchasable();
        java.lang.String str14 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8295 + "'", int9 == 8295);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8295, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8295, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getArtist();
        java.lang.String str15 = cD6.getBorrowerEmail();
        java.lang.String str16 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8297 + "'", int9 == 8297);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8297, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8297, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8297 + "'", int12 == 8297);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isOverdue();
        java.lang.String str18 = cD6.getArtist();
        cD6.setLocation("CD: LibraryItem [itemId=94, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=434, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        java.lang.String str21 = cD6.getBorrowerEmail();
        java.lang.String str22 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8298, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8298, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getLocation();
        java.lang.String str15 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=2522, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=6614, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8299 + "'", int9 == 8299);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8299, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8299, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8299, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8299, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        java.lang.String str40 = cD6.getBorrowerEmail();
        java.lang.String str41 = cD6.getDetails();
        java.lang.String str42 = cD6.getTitle();
        java.lang.String str43 = cD6.getTitle();
        java.lang.String str44 = cD6.getArtist();
        double double45 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: true" + "'", str41, "CD: hi! by hi!. Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList42);
        java.lang.String str46 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=3684, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str49 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str46, "LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=8304, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=8304, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        cD6.setLocation("LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str19 = cD6.getItemType();
        java.lang.String str20 = cD6.getLocation();
        boolean boolean21 = cD6.isRented();
        cD6.setLocation("LibraryItem [itemId=2853, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=3878, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8309, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8309, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD" + "'", str19, "CD");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getDetails();
        boolean boolean13 = cD6.isPurchasable();
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=7926, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8311 + "'", int9 == 8311);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8311, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8311, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.setBorrowerEmail("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        double double14 = cD6.calculateOverduePenalty();
        java.lang.String str15 = cD6.getTitle();
        java.lang.String str16 = cD6.getDetails();
        java.time.LocalDate localDate17 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate17, 2506, "LibraryItem [itemId=6535, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8312, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8312, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: true" + "'", str16, "CD: hi! by hi!. Location: hi!. Purchasable: true");
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.toString();
        java.lang.String str18 = cD6.getPrice();
        java.lang.String str19 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8313 + "'", int14 == 8313);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=8313, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=8313, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getDetails();
        boolean boolean13 = cD6.isPurchasable();
        java.lang.String str14 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8314 + "'", int9 == 8314);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8314, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8314, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getLocation();
        java.lang.String str11 = cD6.getArtist();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8315 + "'", int7 == 8315);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getLocation();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        java.lang.String str17 = cD6.getArtist();
        java.lang.String str18 = cD6.getTitle();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8317, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8317, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        boolean boolean18 = cD6.isPurchasable();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        items.CD cD34 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray51 = new items.LibraryItem[] { cD34, cD41, cD50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList52 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList52, libraryItemArray51);
        boolean boolean54 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList52);
        boolean boolean55 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList52);
        java.util.List<items.LibraryItem> libraryItemList56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = cD6.hasBorrowingPrivileges(libraryItemList56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8318, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8318, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        items.CD cD6 = new items.CD("LibraryItem [itemId=7569, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5734, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1896, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2820, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str20 = cD6.getBorrowerEmail();
        java.lang.String str21 = cD6.getLocation();
        java.lang.String str22 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8332, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8332, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getPrice();
        boolean boolean15 = cD6.isPurchasable();
        java.lang.String str16 = cD6.getLocation();
        java.lang.String str17 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getArtist();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8334 + "'", int11 == 8334);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=8335, itemType=CD, location=LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=8335, itemType=CD, location=LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        java.lang.String str8 = cD6.getItemType();
        java.lang.String str9 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=1300, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate12, 6808, "LibraryItem [itemId=5072, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8336 + "'", int7 == 8336);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8336, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8336, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getPrice();
        java.lang.String str12 = cD6.getPrice();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8337 + "'", int7 == 8337);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getArtist();
        java.lang.String str40 = cD6.getItemType();
        java.lang.String str41 = cD6.getPrice();
        cD6.setBorrowerEmail("LibraryItem [itemId=1466, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean44 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8339 + "'", int37 == 8339);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD" + "'", str40, "CD");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str14 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8343 + "'", int9 == 8343);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }
}
