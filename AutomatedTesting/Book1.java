package AutomatedTesting;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Book1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getBorrowerEmail();
        boolean boolean11 = book6.isOverdue();
        double double12 = book6.calculateOverduePenalty();
        java.lang.String str13 = book6.getDetails();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=5568, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=5568, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str13, "Book: hi! by . Location: hi!. Purchasable: false");
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        java.lang.String str12 = book6.getLocation();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        items.Book book6 = new items.Book("LibraryItem [itemId=2215, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1015, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1015, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=5580, itemType=Book, location=LibraryItem [itemId=2215, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1015, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=5580, itemType=Book, location=LibraryItem [itemId=2215, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1015, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        java.lang.String str78 = book6.getTitle();
        book6.setIsPurchasable(false);
        book6.setLocation("LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str83 = book6.getDetails();
        java.lang.String str84 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str83, "Book: hi! by . Location: LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LibraryItem [itemId=5582, itemType=Book, location=LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str84, "LibraryItem [itemId=5582, itemType=Book, location=LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        int int14 = book6.getItemId();
        java.lang.String str15 = book6.getDetails();
        book6.returnItem();
        boolean boolean17 = book6.isRented();
        java.lang.Class<?> wildcardClass18 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5593 + "'", int14 == 5593);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: . Purchasable: false" + "'", str15, "Book: hi! by . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = book6.getItemId();
        int int8 = book6.getItemId();
        java.lang.String str9 = book6.getDetails();
        boolean boolean10 = book6.isOverdue();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5594 + "'", int7 == 5594);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5594 + "'", int8 == 5594);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str9, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        int int49 = book6.getItemId();
        java.lang.Class<?> wildcardClass50 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5596 + "'", int49 == 5596);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        items.Book book6 = new items.Book("LibraryItem [itemId=3186, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1365, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=3454, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1715, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isPurchasable();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate8, 768, "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        java.lang.String str67 = book6.getTitle();
        java.lang.String str68 = book6.getAuthor();
        java.time.LocalDate localDate69 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate69, 4543, "LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        boolean boolean15 = book6.isPurchasable();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5627 + "'", int9 == 5627);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=5627, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=5627, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        double double60 = book6.calculateOverduePenalty();
        java.lang.String str61 = book6.getPrice();
        book6.setLocation("LibraryItem [itemId=3287, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        java.lang.String str52 = book6.getPrice();
        java.lang.String str53 = book6.getPrice();
        java.lang.String str54 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=5648, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=5648, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str54, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        double double54 = book6.calculateOverduePenalty();
        java.lang.String str55 = book6.getTitle();
        int int56 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=5653, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=5653, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5653 + "'", int56 == 5653);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.Class<?> wildcardClass9 = book6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getDetails();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        java.lang.String str20 = book18.getAuthor();
        java.lang.String str21 = book18.getAuthor();
        java.lang.String str22 = book18.getDetails();
        double double23 = book18.calculateOverduePenalty();
        items.Book book30 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean31 = book30.isOverdue();
        items.Book book38 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean39 = book38.isOverdue();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        items.Book book63 = new items.Book("", "", true, true, "", "hi!");
        book63.returnItem();
        java.lang.String str65 = book63.getAuthor();
        items.Book book72 = new items.Book("", "", true, true, "", "hi!");
        book72.returnItem();
        java.lang.String str74 = book72.getAuthor();
        java.lang.String str75 = book72.getAuthor();
        items.Book book82 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray83 = new items.LibraryItem[] { book54, book63, book72, book82 };
        java.util.ArrayList<items.LibraryItem> libraryItemList84 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList84, libraryItemArray83);
        boolean boolean86 = book46.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        items.LibraryItem[] libraryItemArray87 = new items.LibraryItem[] { book38, book46 };
        java.util.ArrayList<items.LibraryItem> libraryItemList88 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList88, libraryItemArray87);
        boolean boolean90 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean91 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean92 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        java.lang.String str93 = book6.getTitle();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5671 + "'", int9 == 5671);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str11, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str22, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(libraryItemArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        boolean boolean10 = book6.isOverdue();
        java.lang.String str11 = book6.toString();
        java.lang.String str12 = book6.getDetails();
        java.lang.String str13 = book6.getBorrowerEmail();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=5682, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=5682, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=5682, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=5682, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str12, "Book: hi! by . Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        double double11 = book6.calculateOverduePenalty();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        java.lang.String str20 = book18.getAuthor();
        java.lang.String str21 = book18.getAuthor();
        double double22 = book18.calculateOverduePenalty();
        items.Book book29 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean45 = book44.isOverdue();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        book69.returnItem();
        java.lang.String str71 = book69.getAuthor();
        items.Book book78 = new items.Book("", "", true, true, "", "hi!");
        book78.returnItem();
        java.lang.String str80 = book78.getAuthor();
        java.lang.String str81 = book78.getAuthor();
        items.Book book88 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { book60, book69, book78, book88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = book52.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        items.LibraryItem[] libraryItemArray93 = new items.LibraryItem[] { book44, book52 };
        java.util.ArrayList<items.LibraryItem> libraryItemList94 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList94, libraryItemArray93);
        boolean boolean96 = book36.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList94);
        boolean boolean97 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList94);
        boolean boolean98 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList94);
        boolean boolean99 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList94);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5683 + "'", int10 == 5683);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(libraryItemArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getLocation();
        int int96 = book6.getItemId();
        java.lang.String str97 = book6.getTitle();
        book6.setLocation("Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str95, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int96 + "' != '" + 5693 + "'", int96 == 5693);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str97, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        items.Book book6 = new items.Book("LibraryItem [itemId=904, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=933, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getAuthor();
        java.lang.String str60 = book6.getDetails();
        boolean boolean61 = book6.isRented();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str60, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        double double7 = book6.calculateOverduePenalty();
        boolean boolean8 = book6.isOverdue();
        java.lang.String str9 = book6.toString();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=5739, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=5739, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        double double9 = book6.calculateOverduePenalty();
        book6.setLocation("LibraryItem [itemId=2630, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double12 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getBorrowerEmail();
        int int11 = book6.getItemId();
        java.lang.String str12 = book6.getBorrowerEmail();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=5750, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=5750, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5750 + "'", int11 == 5750);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = book6.getBorrowerEmail();
        boolean boolean56 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=5753, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=5753, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str55, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        items.Book book6 = new items.Book("LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2654, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1908, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1920, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        boolean boolean11 = book6.isOverdue();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate12, 5311, "LibraryItem [itemId=2861, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str7 = book6.getLocation();
        book6.setBorrowerEmail("LibraryItem [itemId=5327, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getPrice();
        java.lang.String str13 = book6.getTitle();
        boolean boolean14 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getBorrowerEmail();
        book6.returnItem();
        java.lang.String str13 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5769 + "'", int10 == 5769);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.getPrice();
        java.lang.String str49 = book6.getPrice();
        java.time.LocalDate localDate50 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate50, 4358, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        items.Book book6 = new items.Book("LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1743, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=615, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.setBorrowerEmail("Book");
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book16.setIsPurchasable(false);
        java.lang.String str19 = book16.getAuthor();
        java.lang.String str20 = book16.getBorrowerEmail();
        items.Book book27 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str28 = book27.toString();
        items.Book book35 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean36 = book35.isOverdue();
        items.Book book43 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean44 = book43.isOverdue();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        book68.returnItem();
        java.lang.String str70 = book68.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        book77.returnItem();
        java.lang.String str79 = book77.getAuthor();
        java.lang.String str80 = book77.getAuthor();
        items.Book book87 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book59, book68, book77, book87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        items.LibraryItem[] libraryItemArray92 = new items.LibraryItem[] { book43, book51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList93 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList93, libraryItemArray92);
        boolean boolean95 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean96 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean97 = book16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean98 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LibraryItem [itemId=5785, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str28, "LibraryItem [itemId=5785, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(libraryItemArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getTitle();
        java.lang.String str13 = book6.toString();
        java.lang.String str14 = book6.getBorrowerEmail();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5794 + "'", int9 == 5794);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=5794, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=5794, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        items.Book book17 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book24 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean25 = book24.isRented();
        book24.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean28 = book24.isRented();
        items.Book book35 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str36 = book35.getDetails();
        book35.returnItem();
        boolean boolean38 = book35.isPurchasable();
        double double39 = book35.calculateOverduePenalty();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        items.Book book63 = new items.Book("", "", true, true, "", "hi!");
        book63.returnItem();
        java.lang.String str65 = book63.getAuthor();
        items.Book book72 = new items.Book("", "", true, true, "", "hi!");
        book72.returnItem();
        java.lang.String str74 = book72.getAuthor();
        java.lang.String str75 = book72.getAuthor();
        items.Book book82 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray83 = new items.LibraryItem[] { book54, book63, book72, book82 };
        java.util.ArrayList<items.LibraryItem> libraryItemList84 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList84, libraryItemArray83);
        boolean boolean86 = book46.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean87 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean88 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean89 = book17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList84);
        book6.setLocation("LibraryItem [itemId=5250, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str93 = book6.getItemType();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str36, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Book" + "'", str93, "Book");
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        items.Book book6 = new items.Book("Book:  by hi!. Location: . Purchasable: true", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        boolean boolean8 = book6.isRented();
        boolean boolean9 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true" + "'", str7, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        items.Book book6 = new items.Book("LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1021, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isOverdue();
        boolean boolean8 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        items.Book book6 = new items.Book("LibraryItem [itemId=2339, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2111, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=1908, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getPrice();
        java.lang.String str8 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1908, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1908, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book:  by LibraryItem [itemId=1908, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=2339, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str8, "Book:  by LibraryItem [itemId=1908, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=2339, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getAuthor();
        book6.setIsPurchasable(true);
        boolean boolean14 = book6.isOverdue();
        double double15 = book6.calculateOverduePenalty();
        java.lang.String str16 = book6.getPrice();
        java.time.LocalDate localDate17 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate17, 2181, "LibraryItem [itemId=3609, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        book6.setIsPurchasable(false);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        boolean boolean19 = book17.isPurchasable();
        boolean boolean20 = book17.isRented();
        java.lang.String str21 = book17.getLocation();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getItemType();
        java.lang.String str72 = book6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=5818, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=5818, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Book" + "'", str71, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "LibraryItem [itemId=5818, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str72, "LibraryItem [itemId=5818, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        java.lang.String str8 = book6.getBorrowerEmail();
        java.lang.String str9 = book6.getLocation();
        double double10 = book6.calculateOverduePenalty();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str11, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str12, "Book:  by hi!. Location: . Purchasable: false");
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int7 = book6.getItemId();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getItemType();
        java.lang.Class<?> wildcardClass10 = book6.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5827 + "'", int7 == 5827);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        java.lang.String str9 = book6.getDetails();
        boolean boolean10 = book6.isPurchasable();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str9, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getLocation();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        java.lang.String str20 = book18.getAuthor();
        java.lang.String str21 = book18.getAuthor();
        double double22 = book18.calculateOverduePenalty();
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        java.lang.String str58 = book55.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { book37, book46, book55, book65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.Class<?> wildcardClass72 = libraryItemList67.getClass();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        items.Book book6 = new items.Book("LibraryItem [itemId=4904, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4503, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=745, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1908, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=839, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean57 = book6.isPurchasable();
        java.lang.String str58 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=5847, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=5847, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "LibraryItem [itemId=839, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str58, "LibraryItem [itemId=839, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = book6.isOverdue();
        java.lang.String str92 = book6.getLocation();
        java.lang.String str93 = book6.getBorrowerEmail();
        java.lang.String str94 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Book" + "'", str94, "Book");
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        double double88 = book6.calculateOverduePenalty();
        java.lang.String str89 = book6.getTitle();
        java.lang.String str90 = book6.getLocation();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isPurchasable();
        java.lang.String str11 = book6.getPrice();
        boolean boolean12 = book6.isRented();
        int int13 = book6.getItemId();
        java.lang.String str14 = book6.toString();
        double double15 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5877 + "'", int13 == 5877);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=5877, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=5877, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        items.Book book6 = new items.Book("LibraryItem [itemId=876, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=397, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=4255, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1920, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        java.lang.String str9 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=5880, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=5880, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = book6.getBorrowerEmail();
        java.time.LocalDate localDate18 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate18, 4803, "LibraryItem [itemId=4191, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=5886, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=5886, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=5886, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=5886, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        items.Book book6 = new items.Book("LibraryItem [itemId=5216, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=2500, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5648, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getLocation();
        java.lang.String str60 = book6.getItemType();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Book" + "'", str60, "Book");
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isRented();
        boolean boolean54 = book6.isRented();
        java.lang.String str55 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5894 + "'", int52 == 5894);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getTitle();
        book6.returnItem();
        java.lang.String str13 = book6.getDetails();
        java.lang.String str14 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str13, "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str14, "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setIsPurchasable(false);
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate9, 3453, "LibraryItem [itemId=2296, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        items.Book book6 = new items.Book("LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", true, false, "LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getItemType();
        java.lang.String str8 = book6.getBorrowerEmail();
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate9, 5073, "LibraryItem [itemId=2556, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book" + "'", str7, "Book");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getLocation();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        java.lang.String str20 = book18.getAuthor();
        java.lang.String str21 = book18.getAuthor();
        double double22 = book18.calculateOverduePenalty();
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        java.lang.String str58 = book55.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { book37, book46, book55, book65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.String str72 = book6.getBorrowerEmail();
        java.lang.String str73 = book6.getPrice();
        java.lang.String str74 = book6.getPrice();
        boolean boolean75 = book6.isRented();
        book6.setLocation("LibraryItem [itemId=3118, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str72, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        items.Book book6 = new items.Book("LibraryItem [itemId=549, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2071, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "", "LibraryItem [itemId=1021, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = book6.calculateOverduePenalty();
        boolean boolean8 = book6.isRented();
        boolean boolean9 = book6.isRented();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = book6.getBorrowerEmail();
        java.time.LocalDate localDate56 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate56, 3172, "LibraryItem [itemId=4291, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=5912, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=5912, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str55, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        boolean boolean8 = book6.isOverdue();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getPrice();
        java.lang.String str51 = book6.getAuthor();
        java.lang.String str52 = book6.getTitle();
        java.lang.String str53 = book6.getTitle();
        java.lang.String str54 = book6.getDetails();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str54, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        double double60 = book6.calculateOverduePenalty();
        java.lang.String str61 = book6.getPrice();
        boolean boolean62 = book6.isPurchasable();
        int int63 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5946 + "'", int63 == 5946);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        boolean boolean12 = book6.isRented();
        book6.setLocation("LibraryItem [itemId=3328, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        book6.setBorrowerEmail("LibraryItem [itemId=591, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate75 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate75, 2986, "LibraryItem [itemId=1015, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        int int53 = book6.getItemId();
        book6.setBorrowerEmail("LibraryItem [itemId=403, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double56 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6005, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6005, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 6005 + "'", int53 == 6005);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        boolean boolean12 = book6.isRented();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.getPrice();
        java.lang.String str15 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book" + "'", str15, "Book");
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        double double11 = book6.calculateOverduePenalty();
        items.Book book18 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean19 = book18.isOverdue();
        items.Book book26 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean27 = book26.isOverdue();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        book42.returnItem();
        java.lang.String str44 = book42.getAuthor();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        java.lang.String str63 = book60.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray71 = new items.LibraryItem[] { book42, book51, book60, book70 };
        java.util.ArrayList<items.LibraryItem> libraryItemList72 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList72, libraryItemArray71);
        boolean boolean74 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book26, book34 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        java.lang.String str80 = book6.getAuthor();
        java.lang.String str81 = book6.getAuthor();
        book6.setBorrowerEmail("LibraryItem [itemId=2443, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean84 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getItemType();
        java.lang.String str10 = book6.getLocation();
        int int11 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 6022 + "'", int11 == 6022);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        items.Book book6 = new items.Book("LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getAuthor();
        java.lang.String str60 = book6.getDetails();
        boolean boolean61 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=954, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str60, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        double double67 = book6.calculateOverduePenalty();
        java.lang.String str68 = book6.getTitle();
        boolean boolean69 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        boolean boolean48 = book6.isPurchasable();
        java.lang.String str49 = book6.getItemType();
        boolean boolean50 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Book" + "'", str49, "Book");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isOverdue();
        java.lang.String str12 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6064, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6064, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6064, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6064, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        java.lang.String str78 = book6.getBorrowerEmail();
        java.lang.Class<?> wildcardClass79 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str78, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        book6.setIsPurchasable(false);
        java.lang.String str13 = book6.getDetails();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book. Purchasable: false" + "'", str13, "Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book. Purchasable: false");
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        java.lang.String str88 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str88, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = book6.isOverdue();
        java.lang.String str92 = book6.getLocation();
        java.lang.String str93 = book6.getBorrowerEmail();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isPurchasable();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate7, 3360, "LibraryItem [itemId=3243, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.getPrice();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean51 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=4286, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double54 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getItemType();
        java.lang.String str11 = book6.getDetails();
        boolean boolean12 = book6.isPurchasable();
        double double13 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getPrice();
        int int10 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str9, "Book:  by hi!. Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6109 + "'", int10 == 6109);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        java.lang.String str9 = book6.toString();
        boolean boolean10 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6110, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6110, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        java.lang.String str15 = book6.getPrice();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str23 = book22.getDetails();
        book22.returnItem();
        boolean boolean25 = book22.isPurchasable();
        double double26 = book22.calculateOverduePenalty();
        items.Book book33 = new items.Book("", "", true, true, "", "hi!");
        book33.returnItem();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        java.lang.String str43 = book41.getAuthor();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        java.lang.String str52 = book50.getAuthor();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        java.lang.String str62 = book59.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { book41, book50, book59, book69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = book33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        double double76 = book6.calculateOverduePenalty();
        java.lang.String str77 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=5535, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6127 + "'", int9 == 6127);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=6127, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=6127, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str23, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Book" + "'", str77, "Book");
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        items.Book book6 = new items.Book("LibraryItem [itemId=4531, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3573, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2183, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        double double57 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        boolean boolean67 = book6.isOverdue();
        int int68 = book6.getItemId();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 6154 + "'", int68 == 6154);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.getAuthor();
        double double50 = book6.calculateOverduePenalty();
        boolean boolean51 = book6.isPurchasable();
        java.lang.String str52 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        java.lang.String str8 = book6.getBorrowerEmail();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.toString();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate11, 1594, "LibraryItem [itemId=870, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6166, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6166, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=6166, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=6166, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        boolean boolean10 = book6.isOverdue();
        items.Book book17 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = book17.isRented();
        book17.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean21 = book17.isRented();
        items.Book book28 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str29 = book28.getDetails();
        book28.returnItem();
        boolean boolean31 = book28.isPurchasable();
        double double32 = book28.calculateOverduePenalty();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        java.lang.String str49 = book47.getAuthor();
        items.Book book56 = new items.Book("", "", true, true, "", "hi!");
        book56.returnItem();
        java.lang.String str58 = book56.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        book65.returnItem();
        java.lang.String str67 = book65.getAuthor();
        java.lang.String str68 = book65.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { book47, book56, book65, book75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = book39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        java.time.LocalDate localDate83 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate83, 5051, "LibraryItem [itemId=3362, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6170, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6170, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str29, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        items.Book book6 = new items.Book("LibraryItem [itemId=3148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4150, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1314, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false", "LibraryItem [itemId=5590, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getLocation();
        boolean boolean12 = book6.isRented();
        boolean boolean13 = book6.isOverdue();
        int int14 = book6.getItemId();
        double double15 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6179 + "'", int10 == 6179);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6179 + "'", int14 == 6179);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        items.Book book6 = new items.Book("LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book:  by hi!. Location: . Purchasable: true", true, false, "Book: hi! by . Location: hi!. Purchasable: false", "LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: Book: hi! by . Location: hi!. Purchasable: false by LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str7, "Book: Book: hi! by . Location: hi!. Purchasable: false by LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = book6.getAuthor();
        java.lang.String str15 = book6.getTitle();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6182, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6182, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        boolean boolean53 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 6183 + "'", int52 == 6183);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getPrice();
        java.lang.String str10 = book6.getBorrowerEmail();
        java.lang.String str11 = book6.getTitle();
        boolean boolean12 = book6.isOverdue();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=6190, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=6190, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        java.lang.String str15 = book6.getPrice();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str23 = book22.getDetails();
        book22.returnItem();
        boolean boolean25 = book22.isPurchasable();
        double double26 = book22.calculateOverduePenalty();
        items.Book book33 = new items.Book("", "", true, true, "", "hi!");
        book33.returnItem();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        java.lang.String str43 = book41.getAuthor();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        java.lang.String str52 = book50.getAuthor();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        java.lang.String str62 = book59.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { book41, book50, book59, book69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = book33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        java.lang.String str76 = book6.getAuthor();
        java.lang.String str77 = book6.getPrice();
        java.lang.String str78 = book6.getDetails();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6191 + "'", int9 == 6191);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=6191, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=6191, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str23, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str78, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getItemType();
        java.lang.String str10 = book6.getAuthor();
        int int11 = book6.getItemId();
        java.lang.String str12 = book6.toString();
        java.lang.Class<?> wildcardClass13 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 6198 + "'", int11 == 6198);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6198, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6198, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        double double54 = book6.calculateOverduePenalty();
        java.lang.String str55 = book6.getTitle();
        java.lang.String str56 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6204, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6204, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        java.lang.String str8 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        book6.setLocation("LibraryItem [itemId=1148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str51, "LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        book6.setIsPurchasable(false);
        double double15 = book6.calculateOverduePenalty();
        book6.setBorrowerEmail("LibraryItem [itemId=933, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str18 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6215, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6215, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = book6.isOverdue();
        java.lang.String str48 = book6.getDetails();
        book6.setBorrowerEmail("LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getBorrowerEmail();
        book6.setLocation("LibraryItem [itemId=2018, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate54 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate54, 1277, "LibraryItem [itemId=6189, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str48, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str51, "LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.toString();
        int int12 = book6.getItemId();
        items.Book book19 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book19.setIsPurchasable(false);
        book19.setIsPurchasable(false);
        book19.setLocation("LibraryItem [itemId=951, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        book32.setIsPurchasable(true);
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        double double47 = book43.calculateOverduePenalty();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        items.Book book62 = new items.Book("", "", true, true, "", "hi!");
        book62.returnItem();
        java.lang.String str64 = book62.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        book71.returnItem();
        java.lang.String str73 = book71.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        book80.returnItem();
        java.lang.String str82 = book80.getAuthor();
        java.lang.String str83 = book80.getAuthor();
        items.Book book90 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { book62, book71, book80, book90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = book54.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = book43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean98 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        java.lang.String str99 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6222, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6222, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 6222 + "'", int12 == 6222);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "" + "'", str99, "");
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.getBorrowerEmail();
        items.Book book19 = new items.Book("", "", true, true, "", "hi!");
        book19.returnItem();
        boolean boolean21 = book19.isPurchasable();
        boolean boolean22 = book19.isRented();
        java.lang.String str23 = book19.getLocation();
        book19.setLocation("LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean26 = book19.isPurchasable();
        book19.setBorrowerEmail("LibraryItem [itemId=3148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book35 = new items.Book("", "", true, true, "", "hi!");
        book35.returnItem();
        book35.returnItem();
        items.Book book44 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str45 = book44.getDetails();
        book44.returnItem();
        boolean boolean47 = book44.isPurchasable();
        double double48 = book44.calculateOverduePenalty();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        items.Book book63 = new items.Book("", "", true, true, "", "hi!");
        book63.returnItem();
        java.lang.String str65 = book63.getAuthor();
        items.Book book72 = new items.Book("", "", true, true, "", "hi!");
        book72.returnItem();
        java.lang.String str74 = book72.getAuthor();
        items.Book book81 = new items.Book("", "", true, true, "", "hi!");
        book81.returnItem();
        java.lang.String str83 = book81.getAuthor();
        java.lang.String str84 = book81.getAuthor();
        items.Book book91 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray92 = new items.LibraryItem[] { book63, book72, book81, book91 };
        java.util.ArrayList<items.LibraryItem> libraryItemList93 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList93, libraryItemArray92);
        boolean boolean95 = book55.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean96 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean97 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean98 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean99 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str45, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getPrice();
        int int14 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6248, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6248, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6248 + "'", int14 == 6248);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        items.Book book6 = new items.Book("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1205, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=1205, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book: hi! by . Location: hi!. Purchasable: true. Location: LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str7, "Book: LibraryItem [itemId=1205, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book: hi! by . Location: hi!. Purchasable: true. Location: LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        java.lang.String str53 = book6.getBorrowerEmail();
        java.lang.String str54 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6260, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6260, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str54, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getBorrowerEmail();
        java.lang.String str13 = book6.getItemType();
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("LibraryItem [itemId=1715, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        int int51 = book6.getItemId();
        java.lang.String str52 = book6.getDetails();
        java.lang.String str53 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=6283, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=6283, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 6283 + "'", int51 == 6283);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str52, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        items.Book book6 = new items.Book("LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=601, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=615, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=615, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str7, "Book: LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=615, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getItemType();
        java.lang.String str14 = book6.getAuthor();
        java.time.LocalDate localDate15 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate15, 5008, "LibraryItem [itemId=4218, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6291, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6291, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        items.Book book6 = new items.Book("", "LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2654, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        items.Book book6 = new items.Book("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3188, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=5880, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5113, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        double double11 = book6.calculateOverduePenalty();
        int int12 = book6.getItemId();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6311 + "'", int10 == 6311);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 6311 + "'", int12 == 6311);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.returnItem();
        boolean boolean11 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6312 + "'", int9 == 6312);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        double double87 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        java.lang.String str11 = book6.toString();
        java.lang.String str12 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=5181, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6322, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6322, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        java.lang.String str9 = book6.getDetails();
        items.Book book16 = new items.Book("", "", true, true, "", "hi!");
        book16.returnItem();
        java.lang.String str18 = book16.getAuthor();
        book16.setIsPurchasable(true);
        items.Book book27 = new items.Book("", "", true, true, "", "hi!");
        book27.returnItem();
        java.lang.String str29 = book27.getAuthor();
        java.lang.String str30 = book27.getAuthor();
        double double31 = book27.calculateOverduePenalty();
        items.Book book38 = new items.Book("", "", true, true, "", "hi!");
        book38.returnItem();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        java.lang.String str67 = book64.getAuthor();
        items.Book book74 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book46, book55, book64, book74 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean80 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean81 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        java.lang.String str82 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str9, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = book6.getBorrowerEmail();
        boolean boolean18 = book6.isRented();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6340, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6340, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6340, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6340, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        boolean boolean48 = book6.isOverdue();
        java.lang.String str49 = book6.getItemType();
        java.lang.String str50 = book6.toString();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Book" + "'", str49, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LibraryItem [itemId=6342, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str50, "LibraryItem [itemId=6342, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.toString();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LibraryItem [itemId=6351, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str50, "LibraryItem [itemId=6351, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        java.lang.String str15 = book6.getItemType();
        book6.setIsPurchasable(false);
        boolean boolean18 = book6.isOverdue();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6357, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6357, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6357, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6357, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book" + "'", str15, "Book");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getAuthor();
        java.lang.String str60 = book6.getDetails();
        boolean boolean61 = book6.isRented();
        java.time.LocalDate localDate62 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate62, 2397, "LibraryItem [itemId=5443, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str60, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        book6.returnItem();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getBorrowerEmail();
        book6.returnItem();
        double double13 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6372 + "'", int10 == 6372);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getBorrowerEmail();
        boolean boolean11 = book6.isPurchasable();
        java.lang.String str12 = book6.getBorrowerEmail();
        book6.setIsPurchasable(false);
        book6.setLocation("LibraryItem [itemId=4268, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        int int14 = book6.getItemId();
        java.lang.String str15 = book6.getDetails();
        boolean boolean16 = book6.isRented();
        java.lang.Class<?> wildcardClass17 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6375 + "'", int14 == 6375);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: . Purchasable: false" + "'", str15, "Book: hi! by . Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.getAuthor();
        double double50 = book6.calculateOverduePenalty();
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        int int53 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 6376 + "'", int53 == 6376);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        double double11 = book6.calculateOverduePenalty();
        java.lang.String str12 = book6.toString();
        items.Book book19 = new items.Book("", "", true, true, "", "hi!");
        book19.returnItem();
        boolean boolean21 = book19.isPurchasable();
        boolean boolean22 = book19.isRented();
        java.lang.String str23 = book19.getLocation();
        book19.setLocation("LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean26 = book19.isPurchasable();
        book19.setBorrowerEmail("LibraryItem [itemId=3148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book35 = new items.Book("", "", true, true, "", "hi!");
        book35.returnItem();
        book35.returnItem();
        items.Book book44 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str45 = book44.getDetails();
        book44.returnItem();
        boolean boolean47 = book44.isPurchasable();
        double double48 = book44.calculateOverduePenalty();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        items.Book book63 = new items.Book("", "", true, true, "", "hi!");
        book63.returnItem();
        java.lang.String str65 = book63.getAuthor();
        items.Book book72 = new items.Book("", "", true, true, "", "hi!");
        book72.returnItem();
        java.lang.String str74 = book72.getAuthor();
        items.Book book81 = new items.Book("", "", true, true, "", "hi!");
        book81.returnItem();
        java.lang.String str83 = book81.getAuthor();
        java.lang.String str84 = book81.getAuthor();
        items.Book book91 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray92 = new items.LibraryItem[] { book63, book72, book81, book91 };
        java.util.ArrayList<items.LibraryItem> libraryItemList93 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList93, libraryItemArray92);
        boolean boolean95 = book55.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean96 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean97 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean98 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean99 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6382, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6382, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str45, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getBorrowerEmail();
        boolean boolean13 = book6.isRented();
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate14, 1270, "LibraryItem [itemId=1687, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6392 + "'", int9 == 6392);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        java.lang.String str78 = book6.getTitle();
        java.lang.String str79 = book6.getPrice();
        book6.returnItem();
        java.lang.String str81 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        book6.setLocation("Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        book6.setLocation("LibraryItem [itemId=2249, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean75 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = book6.getAuthor();
        int int15 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6408, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6408, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 6408 + "'", int15 == 6408);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        boolean boolean50 = book6.isOverdue();
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        boolean boolean52 = book6.isOverdue();
        java.lang.String str53 = book6.getItemType();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=6415, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=6415, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book" + "'", str53, "Book");
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setIsPurchasable(false);
        java.lang.String str89 = book6.getPrice();
        java.lang.String str90 = book6.getLocation();
        java.lang.String str91 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str7 = book6.getTitle();
        java.lang.String str8 = book6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=6451, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=6451, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        items.Book book6 = new items.Book("LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getTitle();
        java.lang.String str8 = book6.getAuthor();
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book15.setIsPurchasable(false);
        java.lang.String str18 = book15.toString();
        items.Book book25 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean26 = book25.isRented();
        book25.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean29 = book25.isRented();
        items.Book book36 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str37 = book36.getDetails();
        book36.returnItem();
        boolean boolean39 = book36.isPurchasable();
        double double40 = book36.calculateOverduePenalty();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = book36.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = book25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = book15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        java.lang.String str92 = book6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=6453, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=6453, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str37, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=6452, itemType=Book, location=LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=6452, itemType=Book, location=LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        items.Book book6 = new items.Book("LibraryItem [itemId=5009, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4798, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "", "LibraryItem [itemId=3697, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        items.Book book6 = new items.Book("LibraryItem [itemId=1314, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1961, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=360, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1867, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate7, 3287, "LibraryItem [itemId=2143, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        items.Book book6 = new items.Book("LibraryItem [itemId=2143, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3947, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "", "LibraryItem [itemId=4218, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(true);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getItemType();
        java.lang.String str10 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        book6.returnItem();
        book6.setBorrowerEmail("LibraryItem [itemId=940, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        java.lang.String str14 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=5283, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        double double55 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6480, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6480, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        items.Book book6 = new items.Book("LibraryItem [itemId=3269, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2475, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=943, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3551, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        book6.returnItem();
        java.lang.String str11 = book6.toString();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate12, 2190, "LibraryItem [itemId=1064, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6486, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6486, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        java.time.LocalDate localDate9 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate9, 3172, "LibraryItem [itemId=2143, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Book: LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "Book: LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = book6.getAuthor();
        boolean boolean15 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6492, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6492, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        book6.setLocation("LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        java.lang.String str16 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str16, "Book: hi! by . Location: LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        items.Book book6 = new items.Book("Book:  by hi!. Location: . Purchasable: true", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        int int8 = book6.getItemId();
        java.lang.Class<?> wildcardClass9 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true" + "'", str7, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 6494 + "'", int8 == 6494);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        java.lang.String str10 = book6.toString();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=6496, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=6496, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        boolean boolean12 = book6.isRented();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.getPrice();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setIsPurchasable(false);
        book6.setLocation("LibraryItem [itemId=951, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book19 = new items.Book("", "", true, true, "", "hi!");
        book19.returnItem();
        java.lang.String str21 = book19.getAuthor();
        book19.setIsPurchasable(true);
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        java.lang.String str33 = book30.getAuthor();
        double double34 = book30.calculateOverduePenalty();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        int int85 = book6.getItemId();
        java.lang.String str86 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int85 + "' != '" + 6499 + "'", int85 == 6499);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.getItemType();
        java.lang.String str13 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        items.Book book6 = new items.Book("LibraryItem [itemId=5530, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3466, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2798, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        java.lang.String str15 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=5045, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6510, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6510, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6510, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6510, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book" + "'", str15, "Book");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getLocation();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=6511, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=6511, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        book6.returnItem();
        java.lang.String str11 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        java.lang.String str9 = book6.getDetails();
        java.lang.String str10 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str9, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=6515, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=6515, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.getAuthor();
        double double50 = book6.calculateOverduePenalty();
        java.lang.String str51 = book6.getLocation();
        java.lang.String str52 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = book6.getPrice();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=6521, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=6521, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        java.lang.String str78 = book6.getTitle();
        book6.setIsPurchasable(false);
        book6.setLocation("LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str83 = book6.getDetails();
        java.lang.String str84 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str83, "Book: hi! by . Location: LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str84, "Book: hi! by . Location: LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        items.Book book17 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book24 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean25 = book24.isRented();
        book24.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean28 = book24.isRented();
        items.Book book35 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str36 = book35.getDetails();
        book35.returnItem();
        boolean boolean38 = book35.isPurchasable();
        double double39 = book35.calculateOverduePenalty();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        items.Book book63 = new items.Book("", "", true, true, "", "hi!");
        book63.returnItem();
        java.lang.String str65 = book63.getAuthor();
        items.Book book72 = new items.Book("", "", true, true, "", "hi!");
        book72.returnItem();
        java.lang.String str74 = book72.getAuthor();
        java.lang.String str75 = book72.getAuthor();
        items.Book book82 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray83 = new items.LibraryItem[] { book54, book63, book72, book82 };
        java.util.ArrayList<items.LibraryItem> libraryItemList84 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList84, libraryItemArray83);
        boolean boolean86 = book46.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean87 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean88 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean89 = book17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList84);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList84);
        java.lang.String str91 = book6.getBorrowerEmail();
        boolean boolean92 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str36, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str91, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getItemType();
        java.lang.String str11 = book6.getDetails();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6557, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6557, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str13, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        java.lang.String str7 = book6.getTitle();
        book6.setIsPurchasable(false);
        double double10 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getLocation();
        boolean boolean12 = book6.isRented();
        java.lang.String str13 = book6.toString();
        java.lang.String str14 = book6.getBorrowerEmail();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6559 + "'", int10 == 6559);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=6559, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=6559, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        items.Book book6 = new items.Book("Book:  by hi!. Location: . Purchasable: true", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getLocation();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.toString();
        boolean boolean10 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str7, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6585, itemType=Book, location=Book:  by hi!. Location: . Purchasable: true, purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6585, itemType=Book, location=Book:  by hi!. Location: . Purchasable: true, purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.getPrice();
        java.lang.String str49 = book6.toString();
        book6.setLocation("LibraryItem [itemId=1243, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=6586, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=6586, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getAuthor();
        java.lang.String str12 = book6.getLocation();
        java.lang.String str13 = book6.getLocation();
        java.lang.String str14 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str14, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book:  by hi!. Location: LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str17, "Book:  by hi!. Location: LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        double double67 = book6.calculateOverduePenalty();
        java.lang.String str68 = book6.getBorrowerEmail();
        java.lang.String str69 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getLocation();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        java.lang.String str20 = book18.getAuthor();
        java.lang.String str21 = book18.getAuthor();
        double double22 = book18.calculateOverduePenalty();
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        java.lang.String str58 = book55.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { book37, book46, book55, book65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.String str72 = book6.getBorrowerEmail();
        java.lang.String str73 = book6.getPrice();
        java.lang.String str74 = book6.getPrice();
        java.lang.String str75 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str72, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        items.Book book6 = new items.Book("LibraryItem [itemId=2568, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=549, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=5074, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4138, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        items.Book book6 = new items.Book("LibraryItem [itemId=4639, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=5182, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6557, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        book6.setLocation("Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        java.time.LocalDate localDate73 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate73, 4996, "LibraryItem [itemId=5959, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isPurchasable();
        java.lang.String str11 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        items.Book book6 = new items.Book("LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        java.lang.String str7 = book6.getLocation();
        double double8 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        book65.returnItem();
        java.lang.String str67 = book65.getAuthor();
        items.Book book74 = new items.Book("", "", true, true, "", "hi!");
        book74.returnItem();
        java.lang.String str76 = book74.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        book83.returnItem();
        java.lang.String str85 = book83.getAuthor();
        java.lang.String str86 = book83.getAuthor();
        items.Book book93 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray94 = new items.LibraryItem[] { book65, book74, book83, book93 };
        java.util.ArrayList<items.LibraryItem> libraryItemList95 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList95, libraryItemArray94);
        boolean boolean97 = book57.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList95);
        boolean boolean98 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList95);
        java.lang.String str99 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=6646, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=6646, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "hi!" + "'", str99, "hi!");
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        items.Book book6 = new items.Book("Book: LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true", "LibraryItem [itemId=1961, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=6515, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = book6.isOverdue();
        java.lang.String str48 = book6.getDetails();
        book6.setBorrowerEmail("LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getBorrowerEmail();
        java.lang.String str52 = book6.getItemType();
        java.lang.String str53 = book6.toString();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str48, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str51, "LibraryItem [itemId=165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book" + "'", str52, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=6657, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=6657, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.getPrice();
        java.lang.String str9 = book6.getDetails();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str9, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6662 + "'", int10 == 6662);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        boolean boolean67 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        items.Book book6 = new items.Book("LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, false, "LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1576, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getBorrowerEmail();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=6683, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=6683, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        boolean boolean67 = book6.isOverdue();
        java.lang.String str68 = book6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        book6.setBorrowerEmail("LibraryItem [itemId=1748, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=1748, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=1748, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getTitle();
        boolean boolean13 = book6.isRented();
        book6.setLocation("LibraryItem [itemId=4082, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6701 + "'", int9 == 6701);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getBorrowerEmail();
        boolean boolean10 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getPrice();
        java.lang.String str10 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str9, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str10, "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setIsPurchasable(false);
        double double55 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(false);
        java.lang.String str58 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6705, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6705, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str58, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getLocation();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        java.lang.String str20 = book18.getAuthor();
        java.lang.String str21 = book18.getAuthor();
        double double22 = book18.calculateOverduePenalty();
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        java.lang.String str58 = book55.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { book37, book46, book55, book65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.String str72 = book6.getBorrowerEmail();
        boolean boolean73 = book6.isOverdue();
        java.lang.String str74 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str72, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getPrice();
        book6.setIsPurchasable(true);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6718 + "'", int9 == 6718);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        items.Book book6 = new items.Book("LibraryItem [itemId=1561, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5516, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=3523, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6719, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        java.lang.Class<?> wildcardClass14 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getDetails();
        double double12 = book6.calculateOverduePenalty();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str11, "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        items.Book book6 = new items.Book("LibraryItem [itemId=6204, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", true, false, "LibraryItem [itemId=6141, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6480, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=839, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean57 = book6.isOverdue();
        java.lang.String str58 = book6.toString();
        java.lang.String str59 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=5014, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6730, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6730, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "LibraryItem [itemId=6730, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str58, "LibraryItem [itemId=6730, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getLocation();
        java.lang.String str10 = book6.getLocation();
        book6.setIsPurchasable(true);
        java.lang.String str13 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getAuthor();
        java.lang.String str12 = book6.getLocation();
        java.lang.String str13 = book6.getLocation();
        boolean boolean14 = book6.isPurchasable();
        book6.setIsPurchasable(false);
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        book23.setIsPurchasable(true);
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        java.lang.String str37 = book34.getAuthor();
        double double38 = book34.calculateOverduePenalty();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        book53.returnItem();
        java.lang.String str55 = book53.getAuthor();
        items.Book book62 = new items.Book("", "", true, true, "", "hi!");
        book62.returnItem();
        java.lang.String str64 = book62.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        book71.returnItem();
        java.lang.String str73 = book71.getAuthor();
        java.lang.String str74 = book71.getAuthor();
        items.Book book81 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { book53, book62, book71, book81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = book45.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = book23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean88 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean89 = book6.isPurchasable();
        book6.setBorrowerEmail("LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setIsPurchasable(false);
        java.lang.String str55 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6753, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6753, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book" + "'", str55, "Book");
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        double double11 = book6.calculateOverduePenalty();
        double double12 = book6.calculateOverduePenalty();
        double double13 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        double double11 = book6.calculateOverduePenalty();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6760, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6760, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        java.lang.String str79 = book6.toString();
        java.lang.String str80 = book6.getAuthor();
        boolean boolean81 = book6.isRented();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LibraryItem [itemId=6761, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str79, "LibraryItem [itemId=6761, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        items.Book book6 = new items.Book("LibraryItem [itemId=5306, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1037, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=5424, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2812, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getLocation();
        int int96 = book6.getItemId();
        java.lang.String str97 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str95, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int96 + "' != '" + 6771 + "'", int96 == 6771);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str97, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.toString();
        java.lang.String str12 = book6.getAuthor();
        boolean boolean13 = book6.isPurchasable();
        items.Book book20 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book20.setIsPurchasable(false);
        java.lang.String str23 = book20.toString();
        boolean boolean24 = book20.isOverdue();
        items.Book book31 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean32 = book31.isRented();
        book31.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean35 = book31.isRented();
        items.Book book42 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str43 = book42.getDetails();
        book42.returnItem();
        boolean boolean45 = book42.isPurchasable();
        double double46 = book42.calculateOverduePenalty();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        book53.returnItem();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        items.Book book79 = new items.Book("", "", true, true, "", "hi!");
        book79.returnItem();
        java.lang.String str81 = book79.getAuthor();
        java.lang.String str82 = book79.getAuthor();
        items.Book book89 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray90 = new items.LibraryItem[] { book61, book70, book79, book89 };
        java.util.ArrayList<items.LibraryItem> libraryItemList91 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList91, libraryItemArray90);
        boolean boolean93 = book53.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean94 = book42.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean95 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean96 = book20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean97 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6782, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6782, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6782, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6782, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "LibraryItem [itemId=6783, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str23, "LibraryItem [itemId=6783, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str43, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=2399, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        java.lang.String str15 = book6.getTitle();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6792, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6792, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6792, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6792, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean87 = book6.isPurchasable();
        boolean boolean88 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        java.lang.String str11 = book6.getDetails();
        java.lang.String str12 = book6.getItemType();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6812, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6812, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        book6.returnItem();
        book6.setIsPurchasable(true);
        book6.setIsPurchasable(true);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6813, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6813, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6813, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6813, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.toString();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getBorrowerEmail();
        boolean boolean14 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6814, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6814, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=6814, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=6814, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        book6.setBorrowerEmail("");
        java.lang.String str62 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setIsPurchasable(true);
        book6.returnItem();
        java.lang.String str10 = book6.getAuthor();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.time.LocalDate localDate71 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate71, 3301, "LibraryItem [itemId=1757, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        java.lang.String str11 = book6.getBorrowerEmail();
        boolean boolean12 = book6.isRented();
        java.lang.String str13 = book6.toString();
        book6.setLocation("");
        book6.setLocation("LibraryItem [itemId=2410, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6828, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6828, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=6828, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=6828, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        java.lang.String str7 = book6.getTitle();
        java.lang.String str8 = book6.getBorrowerEmail();
        java.util.List<items.LibraryItem> libraryItemList9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = book6.hasExceededBorrowingLimit(libraryItemList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        java.lang.String str10 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=6301, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6832 + "'", int9 == 6832);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.toString();
        java.lang.String str11 = book6.getLocation();
        java.lang.String str12 = book6.getBorrowerEmail();
        java.lang.String str13 = book6.toString();
        java.lang.String str14 = book6.getAuthor();
        book6.returnItem();
        java.lang.String str16 = book6.getPrice();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6836, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6836, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=6836, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=6836, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=6836, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=6836, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        java.lang.String str53 = book6.toString();
        boolean boolean54 = book6.isPurchasable();
        java.lang.String str55 = book6.getItemType();
        java.util.List<items.LibraryItem> libraryItemList56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = book6.hasBorrowingPrivileges(libraryItemList56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6837, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6837, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=6837, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=6837, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book" + "'", str55, "Book");
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        java.lang.String str8 = book6.getLocation();
        java.lang.String str9 = book6.getItemType();
        double double10 = book6.calculateOverduePenalty();
        book6.setLocation("LibraryItem [itemId=4610, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        items.Book book6 = new items.Book("LibraryItem [itemId=6676, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3269, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book:  by hi!. Location: LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.returnItem();
        java.lang.String str13 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=1561, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        double double10 = book6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass11 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getTitle();
        java.lang.Class<?> wildcardClass12 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        java.lang.String str7 = book6.getPrice();
        java.lang.String str8 = book6.getLocation();
        int int9 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str7, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6872 + "'", int9 == 6872);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        int int89 = book6.getItemId();
        java.lang.String str90 = book6.getBorrowerEmail();
        book6.setLocation("");
        java.lang.String str93 = book6.getLocation();
        boolean boolean94 = book6.isPurchasable();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 6873 + "'", int89 == 6873);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str90, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.getBorrowerEmail();
        java.lang.String str49 = book6.getItemType();
        boolean boolean50 = book6.isRented();
        book6.setIsPurchasable(true);
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Book" + "'", str49, "Book");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        double double11 = book6.calculateOverduePenalty();
        items.Book book18 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean19 = book18.isOverdue();
        items.Book book26 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean27 = book26.isOverdue();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        book42.returnItem();
        java.lang.String str44 = book42.getAuthor();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        java.lang.String str63 = book60.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray71 = new items.LibraryItem[] { book42, book51, book60, book70 };
        java.util.ArrayList<items.LibraryItem> libraryItemList72 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList72, libraryItemArray71);
        boolean boolean74 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book26, book34 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        java.lang.String str80 = book6.getAuthor();
        java.lang.String str81 = book6.getAuthor();
        java.lang.String str82 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        java.time.LocalDate localDate50 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate50, 5241, "LibraryItem [itemId=6753, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=6896, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=6896, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        boolean boolean53 = book6.isOverdue();
        boolean boolean54 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=6901, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=6901, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getLocation();
        java.lang.String str10 = book6.getPrice();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str11, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6908, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6908, itemType=Book, location=LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        double double11 = book6.calculateOverduePenalty();
        items.Book book18 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean19 = book18.isOverdue();
        items.Book book26 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean27 = book26.isOverdue();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        book42.returnItem();
        java.lang.String str44 = book42.getAuthor();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        java.lang.String str63 = book60.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray71 = new items.LibraryItem[] { book42, book51, book60, book70 };
        java.util.ArrayList<items.LibraryItem> libraryItemList72 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList72, libraryItemArray71);
        boolean boolean74 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book26, book34 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean80 = book6.isPurchasable();
        java.time.LocalDate localDate81 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate81, 6312, "LibraryItem [itemId=3502, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getPrice();
        java.lang.String str51 = book6.getAuthor();
        java.lang.String str52 = book6.getTitle();
        java.lang.String str53 = book6.getTitle();
        java.time.LocalDate localDate54 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate54, 2585, "LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getItemType();
        java.lang.String str14 = book6.getDetails();
        book6.setBorrowerEmail("LibraryItem [itemId=871, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = book6.getItemType();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6931, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6931, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str14, "Book: hi! by . Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book" + "'", str17, "Book");
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.returnItem();
        int int11 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 6942 + "'", int9 == 6942);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 6942 + "'", int11 == 6942);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setIsPurchasable(false);
        java.lang.String str89 = book6.getPrice();
        java.lang.String str90 = book6.getLocation();
        java.lang.String str91 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "LibraryItem [itemId=6943, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str91, "LibraryItem [itemId=6943, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        items.Book book6 = new items.Book("LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getTitle();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate8, 4996, "LibraryItem [itemId=978, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getPrice();
        java.lang.String str51 = book6.getAuthor();
        book6.returnItem();
        java.lang.String str53 = book6.getDetails();
        java.lang.Class<?> wildcardClass54 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str53, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        book6.returnItem();
        java.lang.String str14 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=6958, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=6958, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=6958, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=6958, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=6958, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=6958, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.getAuthor();
        int int10 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 6959 + "'", int10 == 6959);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        java.lang.String str9 = book6.getBorrowerEmail();
        java.lang.String str10 = book6.getItemType();
        java.lang.String str11 = book6.getPrice();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate12, 0, "LibraryItem [itemId=814, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        boolean boolean12 = book6.isRented();
        java.lang.String str13 = book6.getPrice();
        java.lang.String str14 = book6.getPrice();
        java.lang.String str15 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        java.lang.String str67 = book6.getTitle();
        java.lang.String str68 = book6.getAuthor();
        java.lang.String str69 = book6.getPrice();
        java.lang.String str70 = book6.getPrice();
        book6.setBorrowerEmail("LibraryItem [itemId=1867, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        java.lang.String str78 = book6.getTitle();
        java.lang.String str79 = book6.getPrice();
        book6.returnItem();
        book6.setIsPurchasable(true);
        java.lang.String str83 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "LibraryItem [itemId=6991, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str83, "LibraryItem [itemId=6991, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        items.Book book6 = new items.Book("LibraryItem [itemId=1469, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=911, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1978, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate11, 2190, "LibraryItem [itemId=5838, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        items.Book book6 = new items.Book("LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1867, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        items.Book book6 = new items.Book("LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1867, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=2446, itemType=Book, location=LibraryItem [itemId=768, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=1121, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.toString();
        book6.setLocation("LibraryItem [itemId=1878, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7020, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7020, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        double double60 = book6.calculateOverduePenalty();
        java.lang.String str61 = book6.getPrice();
        book6.setBorrowerEmail("LibraryItem [itemId=1596, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean64 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setIsPurchasable(false);
        double double55 = book6.calculateOverduePenalty();
        int int56 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7046, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7046, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7046 + "'", int56 == 7046);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getPrice();
        boolean boolean10 = book6.isRented();
        java.lang.String str11 = book6.getLocation();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=7059, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=7059, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        items.Book book6 = new items.Book("LibraryItem [itemId=2920, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4043, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5838, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        java.lang.String str79 = book6.toString();
        java.lang.String str80 = book6.getAuthor();
        boolean boolean81 = book6.isRented();
        java.lang.String str82 = book6.getLocation();
        boolean boolean83 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LibraryItem [itemId=7062, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str79, "LibraryItem [itemId=7062, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        book6.returnItem();
        java.lang.String str11 = book6.getPrice();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate12, 5877, "LibraryItem [itemId=6730, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isOverdue();
        java.lang.String str60 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        items.Book book6 = new items.Book("LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, false, "LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1576, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
        book6.setLocation("LibraryItem [itemId=5165, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.util.List<items.LibraryItem> libraryItemList10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = book6.hasBorrowingPrivileges(libraryItemList10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=7079, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=7079, itemType=Book, location=LibraryItem [itemId=2387, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1842, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        items.Book book6 = new items.Book("LibraryItem [itemId=2381, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5135, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=6730, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3870, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        java.lang.String str11 = book6.toString();
        boolean boolean12 = book6.isOverdue();
        java.lang.String str13 = book6.getItemType();
        java.lang.String str14 = book6.toString();
        java.lang.String str15 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7081, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7081, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7081, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7081, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str15, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        items.Book book6 = new items.Book("LibraryItem [itemId=904, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=933, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isOverdue();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate8, (int) (short) 100, "LibraryItem [itemId=953, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int51 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7094, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7094, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 7094 + "'", int51 == 7094);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        boolean boolean9 = book6.isPurchasable();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.Class<?> wildcardClass59 = libraryItemList55.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        book6.setBorrowerEmail("LibraryItem [itemId=1015, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str56 = book6.toString();
        double double57 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7106, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7106, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "LibraryItem [itemId=7106, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str56, "LibraryItem [itemId=7106, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.setBorrowerEmail("Book");
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book16.setIsPurchasable(false);
        book16.setIsPurchasable(false);
        book16.setLocation("LibraryItem [itemId=951, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        java.lang.String str31 = book29.getAuthor();
        book29.setIsPurchasable(true);
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        java.lang.String str43 = book40.getAuthor();
        double double44 = book40.calculateOverduePenalty();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        book68.returnItem();
        java.lang.String str70 = book68.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        book77.returnItem();
        java.lang.String str79 = book77.getAuthor();
        java.lang.String str80 = book77.getAuthor();
        items.Book book87 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book59, book68, book77, book87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean95 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        int int96 = book6.getItemId();
        book6.setLocation("LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int96 + "' != '" + 7123 + "'", int96 == 7123);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        java.lang.String str14 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1154, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = book6.isRented();
        java.lang.Class<?> wildcardClass18 = book6.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7133, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7133, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7133, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7133, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        book6.setIsPurchasable(false);
        double double15 = book6.calculateOverduePenalty();
        book6.setBorrowerEmail("LibraryItem [itemId=933, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int18 = book6.getItemId();
        int int19 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7134, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7134, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 7134 + "'", int18 == 7134);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7134 + "'", int19 == 7134);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        book6.setIsPurchasable(false);
        java.time.LocalDate localDate16 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate16, 6476, "LibraryItem [itemId=3118, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7135, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7135, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getDetails();
        boolean boolean12 = book6.isRented();
        double double13 = book6.calculateOverduePenalty();
        items.Book book20 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str21 = book20.getDetails();
        book20.returnItem();
        java.lang.String str23 = book20.getAuthor();
        java.lang.String str24 = book20.getBorrowerEmail();
        java.lang.String str25 = book20.getBorrowerEmail();
        items.Book book32 = new items.Book("LibraryItem [itemId=904, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=933, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        java.lang.String str42 = book39.getAuthor();
        double double43 = book39.calculateOverduePenalty();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        book76.returnItem();
        java.lang.String str78 = book76.getAuthor();
        java.lang.String str79 = book76.getAuthor();
        items.Book book86 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray87 = new items.LibraryItem[] { book58, book67, book76, book86 };
        java.util.ArrayList<items.LibraryItem> libraryItemList88 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList88, libraryItemArray87);
        boolean boolean90 = book50.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean91 = book39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean92 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean93 = book20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean94 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str11, "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str21, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        items.Book book6 = new items.Book("LibraryItem [itemId=397, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=3733, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4082, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4192, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2447, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book13 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = book13.isRented();
        book13.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = book13.isRented();
        items.Book book24 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str25 = book24.getDetails();
        book24.returnItem();
        boolean boolean27 = book24.isPurchasable();
        double double28 = book24.calculateOverduePenalty();
        items.Book book35 = new items.Book("", "", true, true, "", "hi!");
        book35.returnItem();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        java.lang.String str64 = book61.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book43, book52, book61, book71 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean78 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList73);
        java.time.LocalDate localDate79 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate79, 0, "LibraryItem [itemId=660, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str25, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setIsPurchasable(false);
        book6.setIsPurchasable(true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        items.Book book6 = new items.Book("LibraryItem [itemId=7078, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4722, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=4341, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2486, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        double double48 = book6.calculateOverduePenalty();
        double double49 = book6.calculateOverduePenalty();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        items.Book book6 = new items.Book("LibraryItem [itemId=1469, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=911, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1978, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        items.Book book6 = new items.Book("LibraryItem [itemId=1560, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6770, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=4519, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5124, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isOverdue();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("", "", true, true, "", "hi!");
        book22.returnItem();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        java.lang.String str51 = book48.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { book30, book39, book48, book58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book14, book22 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        java.lang.String str67 = book6.getTitle();
        java.lang.String str68 = book6.getBorrowerEmail();
        java.lang.String str69 = book6.getBorrowerEmail();
        boolean boolean70 = book6.isRented();
        java.lang.String str71 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getDetails();
        java.lang.Class<?> wildcardClass9 = book6.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=7202, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=7202, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        items.Book book6 = new items.Book("LibraryItem [itemId=2170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5074, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "", "LibraryItem [itemId=1022, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book" + "'", str7, "Book");
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        book6.returnItem();
        java.lang.String str11 = book6.toString();
        boolean boolean12 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7205, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7205, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=985, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate50 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate50, 2082, "LibraryItem [itemId=6753, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        int int10 = book6.getItemId();
        java.lang.String str11 = book6.getBorrowerEmail();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7216 + "'", int10 == 7216);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7216, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7216, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=7216, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=7216, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean52 = book6.isOverdue();
        java.lang.String str53 = book6.getPrice();
        boolean boolean54 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.toString();
        java.lang.String str49 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=4601, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7227, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7227, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        java.lang.String str48 = book6.getPrice();
        java.lang.String str49 = book6.getLocation();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass13 = book6.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7239 + "'", int9 == 7239);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        items.Book book6 = new items.Book("LibraryItem [itemId=2151, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1382, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2812, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate7, 4583, "LibraryItem [itemId=1021, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        book6.setIsPurchasable(false);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        boolean boolean19 = book17.isPurchasable();
        boolean boolean20 = book17.isRented();
        java.lang.String str21 = book17.getLocation();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = book6.isOverdue();
        java.lang.String str72 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7241, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7241, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        int int87 = book6.getItemId();
        java.lang.String str88 = book6.getTitle();
        int int89 = book6.getItemId();
        boolean boolean90 = book6.isOverdue();
        java.lang.String str91 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int87 + "' != '" + 7248 + "'", int87 == 7248);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 7248 + "'", int89 == 7248);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "LibraryItem [itemId=7248, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str91, "LibraryItem [itemId=7248, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        double double10 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        book6.setIsPurchasable(true);
        java.lang.String str9 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        java.lang.String str11 = book6.getBorrowerEmail();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        boolean boolean20 = book18.isPurchasable();
        boolean boolean21 = book18.isRented();
        java.lang.String str22 = book18.getLocation();
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        java.lang.String str58 = book55.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { book37, book46, book55, book65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.String str72 = book6.getPrice();
        double double73 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(true);
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7260, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7260, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int13 = book6.getItemId();
        items.Book book20 = new items.Book("LibraryItem [itemId=4252, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5477, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1687, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book27 = new items.Book("", "", true, true, "", "hi!");
        book27.returnItem();
        java.lang.String str29 = book27.getAuthor();
        book27.setIsPurchasable(true);
        items.Book book38 = new items.Book("", "", true, true, "", "hi!");
        book38.returnItem();
        java.lang.String str40 = book38.getAuthor();
        java.lang.String str41 = book38.getAuthor();
        double double42 = book38.calculateOverduePenalty();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        book75.returnItem();
        java.lang.String str77 = book75.getAuthor();
        java.lang.String str78 = book75.getAuthor();
        items.Book book85 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { book57, book66, book75, book85 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = book49.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = book38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean92 = book20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean93 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7268 + "'", int13 == 7268);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = book6.getAuthor();
        java.lang.String str15 = book6.getTitle();
        java.lang.String str16 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7278, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7278, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.toString();
        book6.returnItem();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7303, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7303, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=7303, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=7303, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getItemType();
        java.lang.Class<?> wildcardClass60 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Book" + "'", str59, "Book");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        boolean boolean79 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=1413, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double82 = book6.calculateOverduePenalty();
        int int83 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 7311 + "'", int83 == 7311);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getLocation();
        int int96 = book6.getItemId();
        java.lang.String str97 = book6.getItemType();
        java.lang.String str98 = book6.getAuthor();
        java.lang.String str99 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str95, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int96 + "' != '" + 7319 + "'", int96 == 7319);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Book" + "'", str97, "Book");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str98, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str99 + "' != '" + "LibraryItem [itemId=7319, itemType=Book, location=LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str99, "LibraryItem [itemId=7319, itemType=Book, location=LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getTitle();
        book6.returnItem();
        java.lang.String str13 = book6.getDetails();
        boolean boolean14 = book6.isPurchasable();
        items.Book book21 = new items.Book("LibraryItem [itemId=4553, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4953, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5804, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3820, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book28 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book35 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean36 = book35.isOverdue();
        items.Book book43 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean44 = book43.isOverdue();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        book68.returnItem();
        java.lang.String str70 = book68.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        book77.returnItem();
        java.lang.String str79 = book77.getAuthor();
        java.lang.String str80 = book77.getAuthor();
        items.Book book87 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book59, book68, book77, book87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        items.LibraryItem[] libraryItemArray92 = new items.LibraryItem[] { book43, book51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList93 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList93, libraryItemArray92);
        boolean boolean95 = book35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean96 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean97 = book21.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean98 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str13, "Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(libraryItemArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        double double88 = book6.calculateOverduePenalty();
        java.lang.String str89 = book6.getTitle();
        java.lang.String str90 = book6.getAuthor();
        java.lang.Class<?> wildcardClass91 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getTitle();
        boolean boolean53 = book6.isPurchasable();
        boolean boolean54 = book6.isPurchasable();
        boolean boolean55 = book6.isPurchasable();
        book6.setBorrowerEmail("LibraryItem [itemId=1037, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str58 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=7348, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=7348, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str58, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setIsPurchasable(false);
        book6.setLocation("LibraryItem [itemId=951, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book19 = new items.Book("", "", true, true, "", "hi!");
        book19.returnItem();
        java.lang.String str21 = book19.getAuthor();
        book19.setIsPurchasable(true);
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        java.lang.String str33 = book30.getAuthor();
        double double34 = book30.calculateOverduePenalty();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book19.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        int int85 = book6.getItemId();
        boolean boolean86 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int85 + "' != '" + 7353 + "'", int85 == 7353);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double13 = book6.calculateOverduePenalty();
        book6.setBorrowerEmail("LibraryItem [itemId=3743, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7364, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7364, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.getTitle();
        java.lang.String str51 = book6.getLocation();
        java.time.LocalDate localDate52 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate52, 4208, "LibraryItem [itemId=5878, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getTitle();
        double double13 = book6.calculateOverduePenalty();
        java.lang.String str14 = book6.getBorrowerEmail();
        double double15 = book6.calculateOverduePenalty();
        java.lang.String str16 = book6.getAuthor();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7371 + "'", int9 == 7371);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.toString();
        java.lang.String str51 = book6.getBorrowerEmail();
        java.lang.Class<?> wildcardClass52 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LibraryItem [itemId=7372, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str50, "LibraryItem [itemId=7372, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setIsPurchasable(true);
        book6.returnItem();
        java.lang.String str10 = book6.getAuthor();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = book6.isPurchasable();
        java.lang.String str72 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(false);
        java.lang.String str50 = book6.getBorrowerEmail();
        java.lang.String str51 = book6.toString();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "LibraryItem [itemId=7384, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str51, "LibraryItem [itemId=7384, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isPurchasable();
        java.lang.String str11 = book6.getPrice();
        boolean boolean12 = book6.isPurchasable();
        java.lang.String str13 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book. Purchasable: false" + "'", str13, "Book:  by LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book. Purchasable: false");
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        items.Book book6 = new items.Book("Book:  by hi!. Location: . Purchasable: true", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getLocation();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str7, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true" + "'", str8, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        boolean boolean13 = book6.isRented();
        boolean boolean14 = book6.isRented();
        items.Book book21 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str22 = book21.toString();
        items.Book book29 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean30 = book29.isOverdue();
        items.Book book37 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean38 = book37.isOverdue();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        book53.returnItem();
        java.lang.String str55 = book53.getAuthor();
        items.Book book62 = new items.Book("", "", true, true, "", "hi!");
        book62.returnItem();
        java.lang.String str64 = book62.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        book71.returnItem();
        java.lang.String str73 = book71.getAuthor();
        java.lang.String str74 = book71.getAuthor();
        items.Book book81 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { book53, book62, book71, book81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = book45.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { book37, book45 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = book21.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        java.lang.String str92 = book6.getItemType();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7391, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7391, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7391, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7391, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=7392, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=7392, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Book" + "'", str92, "Book");
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isOverdue();
        java.lang.String str10 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str10, "Book:  by Book:  by hi!. Location: . Purchasable: false. Location: LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = book6.getBorrowerEmail();
        java.lang.String str56 = book6.getLocation();
        book6.returnItem();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=7401, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=7401, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str55, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        int int53 = book6.getItemId();
        boolean boolean54 = book6.isPurchasable();
        java.lang.String str55 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7406, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7406, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 7406 + "'", int53 == 7406);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book" + "'", str55, "Book");
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        int int11 = book6.getItemId();
        boolean boolean12 = book6.isPurchasable();
        double double13 = book6.calculateOverduePenalty();
        java.lang.String str14 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7417, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7417, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7417 + "'", int11 == 7417);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setIsPurchasable(false);
        double double55 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(false);
        java.lang.String str58 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7423, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7423, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getLocation();
        java.lang.String str96 = book6.getPrice();
        boolean boolean97 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str95, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str96, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = book6.getBorrowerEmail();
        java.lang.String str56 = book6.getLocation();
        book6.returnItem();
        java.lang.String str58 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=7438, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=7438, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str55, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        items.Book book6 = new items.Book("LibraryItem [itemId=791, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=288, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(true);
        boolean boolean9 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        java.lang.String str10 = book6.getLocation();
        book6.setBorrowerEmail("LibraryItem [itemId=2486, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7444 + "'", int9 == 7444);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        java.lang.String str88 = book6.getTitle();
        double double89 = book6.calculateOverduePenalty();
        java.lang.String str90 = book6.getDetails();
        java.lang.String str91 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str90, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        java.lang.String str50 = book6.getTitle();
        java.lang.String str51 = book6.getItemType();
        java.lang.String str52 = book6.toString();
        java.lang.String str53 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book" + "'", str51, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "LibraryItem [itemId=7455, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str52, "LibraryItem [itemId=7455, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        book6.setLocation("Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        java.lang.String str73 = book6.getBorrowerEmail();
        java.lang.String str74 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Book:  by hi!. Location: Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true. Purchasable: true" + "'", str74, "Book:  by hi!. Location: Book: hi! by . Location: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true. Purchasable: true");
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str50 = book6.getPrice();
        java.lang.String str51 = book6.getAuthor();
        java.lang.String str52 = book6.getTitle();
        java.lang.String str53 = book6.getTitle();
        boolean boolean54 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        items.Book book6 = new items.Book("LibraryItem [itemId=2806, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6342, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=939, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1727, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.getAuthor();
        java.lang.String str50 = book6.getLocation();
        java.lang.String str51 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=4830, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.getAuthor();
        double double50 = book6.calculateOverduePenalty();
        book6.setLocation("LibraryItem [itemId=282, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str53 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book" + "'", str53, "Book");
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        items.Book book6 = new items.Book("LibraryItem [itemId=4610, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6382, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=5404, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5877, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        boolean boolean12 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=1834, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = book6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=7503, itemType=Book, location=LibraryItem [itemId=1834, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=7503, itemType=Book, location=LibraryItem [itemId=1834, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=7504, itemType=Book, location=LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=7504, itemType=Book, location=LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        java.lang.String str50 = book6.getTitle();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=7216, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str91 = book6.getDetails();
        java.lang.String str92 = book6.getPrice();
        java.lang.Class<?> wildcardClass93 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str91, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isRented();
        double double14 = book6.calculateOverduePenalty();
        java.lang.String str15 = book6.getItemType();
        items.Book book22 = new items.Book("LibraryItem [itemId=4252, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5477, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1687, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=281, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        java.lang.String str31 = book29.getAuthor();
        book29.setIsPurchasable(true);
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        java.lang.String str43 = book40.getAuthor();
        double double44 = book40.calculateOverduePenalty();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        book68.returnItem();
        java.lang.String str70 = book68.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        book77.returnItem();
        java.lang.String str79 = book77.getAuthor();
        java.lang.String str80 = book77.getAuthor();
        items.Book book87 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book59, book68, book77, book87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean95 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.util.List<items.LibraryItem> libraryItemList96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = book6.hasExceededBorrowingLimit(libraryItemList96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7535 + "'", int9 == 7535);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book" + "'", str15, "Book");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        java.lang.String str79 = book6.toString();
        java.lang.String str80 = book6.getAuthor();
        boolean boolean81 = book6.isRented();
        java.lang.String str82 = book6.getLocation();
        java.lang.String str83 = book6.getBorrowerEmail();
        java.lang.String str84 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LibraryItem [itemId=7544, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str79, "LibraryItem [itemId=7544, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        boolean boolean79 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=1413, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate82 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate82, 1822, "LibraryItem [itemId=2813, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        double double13 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getPrice();
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate14, 4253, "LibraryItem [itemId=2341, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7561, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7561, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        boolean boolean7 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.util.List<items.LibraryItem> libraryItemList10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = book6.hasExceededBorrowingLimit(libraryItemList10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getLocation();
        java.lang.String str10 = book6.getLocation();
        book6.setIsPurchasable(true);
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate13, 2531, "LibraryItem [itemId=7059, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getTitle();
        java.lang.String str53 = book6.getTitle();
        java.lang.String str54 = book6.getItemType();
        boolean boolean55 = book6.isPurchasable();
        java.lang.Class<?> wildcardClass56 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=7565, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=7565, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Book" + "'", str54, "Book");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        items.Book book6 = new items.Book("LibraryItem [itemId=1089, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=6190, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3688, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("LibraryItem [itemId=3646, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=3688, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=3688, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=7571, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=7571, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7571, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7571, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        items.Book book6 = new items.Book("Book:  by hi!. Location: . Purchasable: true", "LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        double double8 = book6.calculateOverduePenalty();
        java.lang.String str9 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true" + "'", str7, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=306, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: Book:  by hi!. Location: . Purchasable: true. Purchasable: true");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getTitle();
        double double13 = book6.calculateOverduePenalty();
        java.lang.String str14 = book6.getBorrowerEmail();
        java.lang.String str15 = book6.getBorrowerEmail();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7591 + "'", int9 == 7591);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isRented();
        java.lang.String str11 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: true");
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        items.Book book6 = new items.Book("LibraryItem [itemId=1469, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=911, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1535, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1978, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getDetails();
        java.lang.String str9 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=1243, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str8, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        items.Book book6 = new items.Book("LibraryItem [itemId=3744, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5818, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1561, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        boolean boolean57 = book6.isPurchasable();
        book6.setIsPurchasable(false);
        boolean boolean60 = book6.isRented();
        java.lang.String str61 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7606, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7606, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        items.Book book6 = new items.Book("LibraryItem [itemId=1314, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1961, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=360, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1867, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setLocation("");
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = book6.isOverdue();
        boolean boolean92 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        items.Book book6 = new items.Book("LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", false, true, "", "Book:  by hi!. Location: . Purchasable: true");
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = book6.getLocation();
        java.lang.String str10 = book6.getBorrowerEmail();
        double double11 = book6.calculateOverduePenalty();
        java.lang.String str12 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book:  by Book:  by hi!. Location: . Purchasable: true. Location: LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str12, "Book:  by Book:  by hi!. Location: . Purchasable: true. Location: LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        int int11 = book6.getItemId();
        java.lang.String str12 = book6.getTitle();
        double double13 = book6.calculateOverduePenalty();
        java.lang.String str14 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=3355, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7628 + "'", int11 == 7628);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7628, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7628, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        java.lang.String str9 = book6.getTitle();
        boolean boolean10 = book6.isPurchasable();
        int int11 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=7629, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=7629, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 7629 + "'", int11 == 7629);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        int int8 = book6.getItemId();
        boolean boolean9 = book6.isOverdue();
        boolean boolean10 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=1113, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str13 = book6.getLocation();
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 7631 + "'", int8 == 7631);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        java.lang.String str49 = book6.getItemType();
        java.lang.String str50 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7640, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7640, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Book" + "'", str49, "Book");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        boolean boolean79 = book6.isOverdue();
        java.lang.String str80 = book6.getAuthor();
        java.lang.String str81 = book6.getAuthor();
        java.lang.String str82 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        java.lang.String str52 = book6.getPrice();
        java.lang.String str53 = book6.toString();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=7653, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=7653, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=7653, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=7653, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        items.Book book6 = new items.Book("LibraryItem [itemId=2861, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3461, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3186, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1561, itemType=Book, location=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str14 = book13.toString();
        items.Book book21 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book28 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean29 = book28.isRented();
        book28.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean32 = book28.isRented();
        items.Book book39 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str40 = book39.getDetails();
        book39.returnItem();
        boolean boolean42 = book39.isPurchasable();
        double double43 = book39.calculateOverduePenalty();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        book76.returnItem();
        java.lang.String str78 = book76.getAuthor();
        java.lang.String str79 = book76.getAuthor();
        items.Book book86 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray87 = new items.LibraryItem[] { book58, book67, book76, book86 };
        java.util.ArrayList<items.LibraryItem> libraryItemList88 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList88, libraryItemArray87);
        boolean boolean90 = book50.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean91 = book39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean92 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean93 = book21.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean94 = book13.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean95 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        java.lang.String str96 = book6.getBorrowerEmail();
        book6.setIsPurchasable(false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7659, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7659, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str40, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        items.Book book6 = new items.Book("LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2694, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2405, itemType=Book, location=LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        book6.returnItem();
        java.lang.String str9 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=3002, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=1795, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean54 = book6.isRented();
        book6.setIsPurchasable(true);
        java.lang.String str57 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=7669, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=7669, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        java.lang.String str53 = book6.toString();
        boolean boolean54 = book6.isPurchasable();
        java.lang.String str55 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7674, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7674, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=7674, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=7674, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str55, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=5125, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7679, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7679, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        java.lang.String str88 = book6.getTitle();
        double double89 = book6.calculateOverduePenalty();
        java.lang.String str90 = book6.toString();
        double double91 = book6.calculateOverduePenalty();
        boolean boolean92 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=1726, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "LibraryItem [itemId=7684, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str90, "LibraryItem [itemId=7684, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.toString();
        items.Book book14 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean15 = book14.isOverdue();
        items.Book book22 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean23 = book22.isOverdue();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        items.Book book38 = new items.Book("", "", true, true, "", "hi!");
        book38.returnItem();
        java.lang.String str40 = book38.getAuthor();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        java.lang.String str49 = book47.getAuthor();
        items.Book book56 = new items.Book("", "", true, true, "", "hi!");
        book56.returnItem();
        java.lang.String str58 = book56.getAuthor();
        java.lang.String str59 = book56.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray67 = new items.LibraryItem[] { book38, book47, book56, book66 };
        java.util.ArrayList<items.LibraryItem> libraryItemList68 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList68, libraryItemArray67);
        boolean boolean70 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList68);
        items.LibraryItem[] libraryItemArray71 = new items.LibraryItem[] { book22, book30 };
        java.util.ArrayList<items.LibraryItem> libraryItemList72 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList72, libraryItemArray71);
        boolean boolean74 = book14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        boolean boolean75 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        book6.setLocation("LibraryItem [itemId=5167, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=7693, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=7693, itemType=Book, location=LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(libraryItemArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        items.Book book6 = new items.Book("LibraryItem [itemId=3188, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", true, true, "LibraryItem [itemId=6958, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6534, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        boolean boolean57 = book6.isPurchasable();
        java.lang.String str58 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7702, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7702, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Book" + "'", str58, "Book");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        book6.returnItem();
        double double50 = book6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass51 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        book6.setIsPurchasable(true);
        book6.setBorrowerEmail("LibraryItem [itemId=1937, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = book6.isPurchasable();
        java.lang.Class<?> wildcardClass17 = book6.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7717 + "'", int9 == 7717);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getPrice();
        double double8 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        items.Book book17 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str18 = book17.getDetails();
        book17.returnItem();
        boolean boolean20 = book17.isPurchasable();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getAuthor();
        int int72 = book6.getItemId();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str18, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str71, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 7719 + "'", int72 == 7719);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getBorrowerEmail();
        items.Book book19 = new items.Book("hi!", "", true, false, "hi!", "");
        book19.setIsPurchasable(true);
        book19.returnItem();
        java.lang.String str23 = book19.getAuthor();
        items.Book book30 = new items.Book("", "", true, true, "", "hi!");
        book30.returnItem();
        java.lang.String str32 = book30.getAuthor();
        java.lang.String str33 = book30.getAuthor();
        double double34 = book30.calculateOverduePenalty();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        java.lang.String str70 = book67.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { book49, book58, book67, book77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = book41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = book19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7726 + "'", int9 == 7726);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        double double11 = book6.calculateOverduePenalty();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        boolean boolean11 = book6.isPurchasable();
        java.lang.String str12 = book6.getDetails();
        java.lang.String str13 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str12, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isPurchasable();
        java.lang.String str11 = book6.getPrice();
        java.util.List<items.LibraryItem> libraryItemList12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = book6.hasExceededBorrowingLimit(libraryItemList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getAuthor();
        java.lang.String str11 = book6.getBorrowerEmail();
        boolean boolean12 = book6.isOverdue();
        java.lang.Class<?> wildcardClass13 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        java.lang.String str59 = book6.getLocation();
        java.lang.String str60 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "LibraryItem [itemId=7765, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str60, "LibraryItem [itemId=7765, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        java.lang.String str88 = book6.getTitle();
        double double89 = book6.calculateOverduePenalty();
        java.lang.String str90 = book6.toString();
        double double91 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str90 + "' != '" + "LibraryItem [itemId=7784, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str90, "LibraryItem [itemId=7784, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        java.lang.String str15 = book6.getPrice();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str23 = book22.getDetails();
        book22.returnItem();
        boolean boolean25 = book22.isPurchasable();
        double double26 = book22.calculateOverduePenalty();
        items.Book book33 = new items.Book("", "", true, true, "", "hi!");
        book33.returnItem();
        items.Book book41 = new items.Book("", "", true, true, "", "hi!");
        book41.returnItem();
        java.lang.String str43 = book41.getAuthor();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        java.lang.String str52 = book50.getAuthor();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        java.lang.String str62 = book59.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { book41, book50, book59, book69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = book33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        double double76 = book6.calculateOverduePenalty();
        java.lang.String str77 = book6.getItemType();
        java.lang.String str78 = book6.getTitle();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7802 + "'", int9 == 7802);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7802, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7802, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str23, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Book" + "'", str77, "Book");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getAuthor();
        boolean boolean12 = book6.isOverdue();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        items.Book book6 = new items.Book("Book: LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true", "LibraryItem [itemId=953, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2013, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        double double8 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        double double11 = book6.calculateOverduePenalty();
        items.Book book18 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean19 = book18.isOverdue();
        items.Book book26 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean27 = book26.isOverdue();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        book42.returnItem();
        java.lang.String str44 = book42.getAuthor();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        java.lang.String str63 = book60.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray71 = new items.LibraryItem[] { book42, book51, book60, book70 };
        java.util.ArrayList<items.LibraryItem> libraryItemList72 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList72, libraryItemArray71);
        boolean boolean74 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList72);
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { book26, book34 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        java.lang.String str80 = book6.getAuthor();
        java.lang.String str81 = book6.getAuthor();
        double double82 = book6.calculateOverduePenalty();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        double double88 = book6.calculateOverduePenalty();
        java.lang.String str89 = book6.getTitle();
        boolean boolean90 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double13 = book6.calculateOverduePenalty();
        book6.setLocation("LibraryItem [itemId=700, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7830, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7830, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=700, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=700, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        boolean boolean10 = book6.isOverdue();
        java.lang.String str11 = book6.toString();
        java.lang.String str12 = book6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7839, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7839, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=7839, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=7839, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7839, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7839, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getLocation();
        java.lang.String str12 = book6.getDetails();
        double double13 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str12, "Book: hi! by . Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=871, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(true);
        java.lang.String str17 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7851, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7851, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.returnItem();
        boolean boolean12 = book6.isRented();
        java.lang.String str13 = book6.getLocation();
        java.lang.String str14 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        boolean boolean9 = book6.isPurchasable();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        boolean boolean60 = book6.isPurchasable();
        java.lang.String str61 = book6.toString();
        java.lang.String str62 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "LibraryItem [itemId=7861, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str61, "LibraryItem [itemId=7861, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getPrice();
        boolean boolean10 = book6.isRented();
        java.lang.String str11 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str9, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str11, "Book:  by hi!. Location: . Purchasable: false");
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        java.lang.String str11 = book6.getPrice();
        java.lang.String str12 = book6.getItemType();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=7868, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=7868, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book" + "'", str12, "Book");
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str91 = book6.getDetails();
        java.lang.String str92 = book6.getPrice();
        boolean boolean93 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str91, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.getAuthor();
        items.Book book16 = new items.Book("", "", true, true, "", "hi!");
        book16.returnItem();
        boolean boolean18 = book16.isOverdue();
        boolean boolean19 = book16.isOverdue();
        double double20 = book16.calculateOverduePenalty();
        items.Book book27 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean28 = book27.isRented();
        book27.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean31 = book27.isRented();
        items.Book book38 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str39 = book38.getDetails();
        book38.returnItem();
        boolean boolean41 = book38.isPurchasable();
        double double42 = book38.calculateOverduePenalty();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        book75.returnItem();
        java.lang.String str77 = book75.getAuthor();
        java.lang.String str78 = book75.getAuthor();
        items.Book book85 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { book57, book66, book75, book85 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = book49.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = book38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean92 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean93 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str39, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        java.lang.String str10 = book6.getTitle();
        java.lang.String str11 = book6.getTitle();
        java.lang.String str12 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        java.lang.String str12 = book6.getTitle();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        java.util.List<items.LibraryItem> libraryItemList15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = book6.hasBorrowingPrivileges(libraryItemList15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7910 + "'", int9 == 7910);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=7910, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=7910, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getAuthor();
        java.lang.String str11 = book6.getBorrowerEmail();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        book6.returnItem();
        java.lang.String str49 = book6.getAuthor();
        boolean boolean50 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        book6.setLocation("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        items.Book book6 = new items.Book("LibraryItem [itemId=5327, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2215, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1089, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=954, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setIsPurchasable(false);
        boolean boolean89 = book6.isPurchasable();
        boolean boolean90 = book6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        items.Book book15 = new items.Book("", "", true, true, "", "hi!");
        book15.returnItem();
        boolean boolean17 = book15.isPurchasable();
        boolean boolean18 = book15.isRented();
        java.lang.String str19 = book15.getLocation();
        items.Book book26 = new items.Book("", "", true, true, "", "hi!");
        book26.returnItem();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        java.lang.String str55 = book52.getAuthor();
        items.Book book62 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { book34, book43, book52, book62 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = book26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        boolean boolean67 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        boolean boolean68 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        java.lang.String str69 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        items.Book book6 = new items.Book("LibraryItem [itemId=3754, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1084, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1198, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        book6.setLocation("");
        java.lang.String str13 = book6.getItemType();
        int int14 = book6.getItemId();
        java.lang.String str15 = book6.getDetails();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Book" + "'", str13, "Book");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 7950 + "'", int14 == 7950);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Book: hi! by . Location: . Purchasable: false" + "'", str15, "Book: hi! by . Location: . Purchasable: false");
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("LibraryItem [itemId=1286, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = book6.getTitle();
        java.time.LocalDate localDate16 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate16, 3976, "LibraryItem [itemId=2370, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        items.Book book6 = new items.Book("LibraryItem [itemId=6761, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3744, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1148, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        java.lang.String str8 = book6.getBorrowerEmail();
        java.lang.String str9 = book6.getPrice();
        book6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str9, "Book:  by hi!. Location: . Purchasable: false");
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getDetails();
        java.lang.Class<?> wildcardClass8 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "Book: LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        java.lang.String str57 = book6.toString();
        book6.setIsPurchasable(true);
        java.time.LocalDate localDate60 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate60, 6347, "LibraryItem [itemId=4831, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7956, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7956, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "LibraryItem [itemId=7956, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str57, "LibraryItem [itemId=7956, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        java.lang.String str57 = book6.toString();
        java.lang.String str58 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=7961, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=7961, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "LibraryItem [itemId=7961, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str57, "LibraryItem [itemId=7961, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isOverdue();
        double double78 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        book6.setIsPurchasable(true);
        book6.setBorrowerEmail("LibraryItem [itemId=5733, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=7984, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=7984, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getPrice();
        java.time.LocalDate localDate72 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate72, 0, "LibraryItem [itemId=3697, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        boolean boolean79 = book6.isOverdue();
        book6.setLocation("LibraryItem [itemId=1413, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double82 = book6.calculateOverduePenalty();
        java.lang.String str83 = book6.getLocation();
        book6.setLocation("LibraryItem [itemId=1064, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str86 = book6.getDetails();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "LibraryItem [itemId=1413, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str83, "LibraryItem [itemId=1413, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=1064, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str86, "Book: hi! by . Location: LibraryItem [itemId=1064, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        boolean boolean10 = book6.isOverdue();
        java.lang.String str11 = book6.toString();
        book6.setLocation("LibraryItem [itemId=1237, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int14 = book6.getItemId();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8031, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8031, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8031, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8031, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8031 + "'", int14 == 8031);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=240, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean55 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8032, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8032, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getItemType();
        java.lang.String str96 = book6.getTitle();
        boolean boolean97 = book6.isPurchasable();
        java.lang.String str98 = book6.getPrice();
        java.lang.Class<?> wildcardClass99 = book6.getClass();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Book" + "'", str95, "Book");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str96, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str98, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        int int11 = book6.getItemId();
        boolean boolean12 = book6.isPurchasable();
        double double13 = book6.calculateOverduePenalty();
        java.lang.Class<?> wildcardClass14 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8047, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8047, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8047 + "'", int11 == 8047);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getItemType();
        book6.setLocation("LibraryItem [itemId=2563, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean98 = book6.isPurchasable();
        java.lang.String str99 = book6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Book" + "'", str95, "Book");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str99, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str13 = book6.getBorrowerEmail();
        boolean boolean14 = book6.isRented();
        java.lang.String str15 = book6.getTitle();
        int int16 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8064, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8064, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8064 + "'", int16 == 8064);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getAuthor();
        book6.setIsPurchasable(true);
        boolean boolean14 = book6.isOverdue();
        double double15 = book6.calculateOverduePenalty();
        java.lang.String str16 = book6.getPrice();
        book6.setBorrowerEmail("LibraryItem [itemId=4324, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setIsPurchasable(true);
        book6.returnItem();
        java.lang.String str10 = book6.getAuthor();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        java.lang.String str19 = book17.getAuthor();
        java.lang.String str20 = book17.getAuthor();
        double double21 = book17.calculateOverduePenalty();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = book6.isOverdue();
        java.time.LocalDate localDate72 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate72, 4435, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        java.lang.String str11 = book6.getLocation();
        java.lang.String str12 = book6.getDetails();
        java.lang.String str13 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str12, "Book: hi! by . Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getItemType();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8075, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8075, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book" + "'", str10, "Book");
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        book6.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book15 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean16 = book15.isOverdue();
        items.Book book23 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean24 = book23.isOverdue();
        items.Book book31 = new items.Book("", "", true, true, "", "hi!");
        book31.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        java.lang.String str41 = book39.getAuthor();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        java.lang.String str60 = book57.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { book39, book48, book57, book67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        items.LibraryItem[] libraryItemArray72 = new items.LibraryItem[] { book23, book31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList73 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList73, libraryItemArray72);
        boolean boolean75 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean76 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList73);
        boolean boolean77 = book6.isPurchasable();
        boolean boolean78 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(libraryItemArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getDetails();
        boolean boolean11 = book6.isPurchasable();
        boolean boolean12 = book6.isPurchasable();
        boolean boolean13 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8084, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8084, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str10, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.Class<?> wildcardClass12 = book6.getClass();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8086, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8086, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = book6.isOverdue();
        java.lang.String str92 = book6.getPrice();
        java.lang.String str93 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str93, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getBorrowerEmail();
        java.lang.String str55 = book6.getDetails();
        java.lang.String str56 = book6.getLocation();
        boolean boolean57 = book6.isPurchasable();
        book6.setIsPurchasable(false);
        book6.setBorrowerEmail("LibraryItem [itemId=3186, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8096, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8096, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str55, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = book6.getLocation();
        java.lang.String str96 = book6.getPrice();
        java.lang.String str97 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str95, "LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str96, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str97 + "' != '" + "LibraryItem [itemId=8106, itemType=Book, location=LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str97, "LibraryItem [itemId=8106, itemType=Book, location=LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.returnItem();
        java.lang.String str12 = book6.toString();
        book6.returnItem();
        book6.setIsPurchasable(true);
        book6.setBorrowerEmail("LibraryItem [itemId=3593, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str18 = book6.getLocation();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8117, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8117, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8117, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8117, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        items.Book book6 = new items.Book("", "LibraryItem [itemId=6492, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=4831, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6569, itemType=Book, location=LibraryItem [itemId=2183, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        items.Book book6 = new items.Book("Book: LibraryItem [itemId=950, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true", "LibraryItem [itemId=953, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=322, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2013, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate7, 6701, "LibraryItem [itemId=8084, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        items.Book book16 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str17 = book16.getDetails();
        book16.returnItem();
        java.lang.String str19 = book16.getAuthor();
        java.lang.String str20 = book16.getItemType();
        book16.setIsPurchasable(false);
        items.Book book29 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean30 = book29.isRented();
        book29.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean33 = book29.isRented();
        items.Book book40 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str41 = book40.getDetails();
        book40.returnItem();
        boolean boolean43 = book40.isPurchasable();
        double double44 = book40.calculateOverduePenalty();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        items.Book book59 = new items.Book("", "", true, true, "", "hi!");
        book59.returnItem();
        java.lang.String str61 = book59.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        book68.returnItem();
        java.lang.String str70 = book68.getAuthor();
        items.Book book77 = new items.Book("", "", true, true, "", "hi!");
        book77.returnItem();
        java.lang.String str79 = book77.getAuthor();
        java.lang.String str80 = book77.getAuthor();
        items.Book book87 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book59, book68, book77, book87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean95 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str96 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str17, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book" + "'", str20, "Book");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str41, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getBorrowerEmail();
        boolean boolean11 = book6.isPurchasable();
        java.lang.String str12 = book6.getBorrowerEmail();
        book6.setIsPurchasable(false);
        book6.setLocation("LibraryItem [itemId=1286, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass17 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        items.Book book6 = new items.Book("LibraryItem [itemId=3186, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4637, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1979, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book: hi! by . Location: LibraryItem [itemId=1114, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int13 = book6.getItemId();
        int int14 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8137, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8137, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8137 + "'", int13 == 8137);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8137 + "'", int14 == 8137);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.getDetails();
        java.lang.String str54 = book6.getPrice();
        boolean boolean55 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8139, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8139, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Book:  by hi!. Location: . Purchasable: false" + "'", str53, "Book:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        items.Book book6 = new items.Book("LibraryItem [itemId=5509, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5601, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=2752, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5794, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        double double47 = book6.calculateOverduePenalty();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        boolean boolean50 = book6.isOverdue();
        book6.setIsPurchasable(false);
        java.lang.String str53 = book6.toString();
        java.lang.String str54 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=8146, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=8146, itemType=Book, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        java.time.LocalDate localDate50 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate50, 7353, "LibraryItem [itemId=1604, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=8151, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=8151, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.getPrice();
        java.lang.String str9 = book6.getDetails();
        int int10 = book6.getItemId();
        boolean boolean11 = book6.isRented();
        java.time.LocalDate localDate12 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate12, 7216, "LibraryItem [itemId=4473, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str9, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8156 + "'", int10 == 8156);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.returnItem();
        double double88 = book6.calculateOverduePenalty();
        java.lang.String str89 = book6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        boolean boolean9 = book6.isPurchasable();
        items.Book book16 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book23 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean24 = book23.isRented();
        book23.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean27 = book23.isRented();
        items.Book book34 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str35 = book34.getDetails();
        book34.returnItem();
        boolean boolean37 = book34.isPurchasable();
        double double38 = book34.calculateOverduePenalty();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        book53.returnItem();
        java.lang.String str55 = book53.getAuthor();
        items.Book book62 = new items.Book("", "", true, true, "", "hi!");
        book62.returnItem();
        java.lang.String str64 = book62.getAuthor();
        items.Book book71 = new items.Book("", "", true, true, "", "hi!");
        book71.returnItem();
        java.lang.String str73 = book71.getAuthor();
        java.lang.String str74 = book71.getAuthor();
        items.Book book81 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { book53, book62, book71, book81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = book45.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = book34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = book23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean88 = book16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean89 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str35, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        java.lang.String str10 = book6.getDetails();
        java.lang.String str11 = book6.getTitle();
        boolean boolean12 = book6.isPurchasable();
        boolean boolean13 = book6.isPurchasable();
        java.lang.String str14 = book6.getDetails();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str10, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str14, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        double double11 = book6.calculateOverduePenalty();
        boolean boolean12 = book6.isPurchasable();
        book6.setLocation("LibraryItem [itemId=6191, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        items.Book book6 = new items.Book("Book", "LibraryItem [itemId=474, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isRented();
        book6.setBorrowerEmail("LibraryItem [itemId=597, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = book6.isRented();
        book6.setIsPurchasable(false);
        java.lang.String str13 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        boolean boolean53 = book6.isPurchasable();
        book6.setIsPurchasable(false);
        java.lang.String str56 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8181, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8181, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Book" + "'", str56, "Book");
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        boolean boolean10 = book6.isOverdue();
        boolean boolean11 = book6.isRented();
        java.lang.String str12 = book6.toString();
        java.lang.String str13 = book6.getPrice();
        java.lang.String str14 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8186, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8186, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        book6.setLocation("LibraryItem [itemId=4139, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=5682, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int14 = book6.getItemId();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8187 + "'", int14 == 8187);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        boolean boolean49 = book6.isPurchasable();
        java.lang.String str50 = book6.toString();
        java.lang.String str51 = book6.getTitle();
        java.lang.String str52 = book6.getBorrowerEmail();
        java.lang.String str53 = book6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LibraryItem [itemId=8188, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str50, "LibraryItem [itemId=8188, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.getTitle();
        java.lang.String str49 = book6.getTitle();
        book6.setIsPurchasable(true);
        int int52 = book6.getItemId();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8193 + "'", int52 == 8193);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=7278, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        book6.setBorrowerEmail("LibraryItem [itemId=2940, itemType=Book, location=LibraryItem [itemId=131, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str8, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=941, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate14, 7629, "LibraryItem [itemId=2920, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8202, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8202, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getDetails();
        boolean boolean53 = book6.isRented();
        boolean boolean54 = book6.isPurchasable();
        double double55 = book6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=8204, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=8204, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str52, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        double double7 = book6.calculateOverduePenalty();
        boolean boolean8 = book6.isPurchasable();
        java.lang.String str9 = book6.getItemType();
        book6.setLocation("LibraryItem [itemId=3523, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Book" + "'", str9, "Book");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=3523, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=3523, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.toString();
        book6.setIsPurchasable(false);
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        boolean boolean19 = book17.isPurchasable();
        boolean boolean20 = book17.isRented();
        java.lang.String str21 = book17.getLocation();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        items.Book book36 = new items.Book("", "", true, true, "", "hi!");
        book36.returnItem();
        java.lang.String str38 = book36.getAuthor();
        items.Book book45 = new items.Book("", "", true, true, "", "hi!");
        book45.returnItem();
        java.lang.String str47 = book45.getAuthor();
        items.Book book54 = new items.Book("", "", true, true, "", "hi!");
        book54.returnItem();
        java.lang.String str56 = book54.getAuthor();
        java.lang.String str57 = book54.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { book36, book45, book54, book64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.String str71 = book6.getItemType();
        java.lang.String str72 = book6.getBorrowerEmail();
        boolean boolean73 = book6.isOverdue();
        double double74 = book6.calculateOverduePenalty();
        java.lang.String str75 = book6.getLocation();
        boolean boolean76 = book6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8219, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8219, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Book" + "'", str71, "Book");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        java.lang.String str17 = book14.getAuthor();
        boolean boolean18 = book14.isPurchasable();
        int int19 = book14.getItemId();
        java.lang.String str20 = book14.getTitle();
        double double21 = book14.calculateOverduePenalty();
        boolean boolean22 = book14.isOverdue();
        java.lang.String str23 = book14.getItemType();
        items.Book book30 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str31 = book30.getDetails();
        book30.returnItem();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        boolean boolean41 = book39.isPurchasable();
        boolean boolean42 = book39.isRented();
        java.lang.String str43 = book39.getLocation();
        items.Book book50 = new items.Book("", "", true, true, "", "hi!");
        book50.returnItem();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        items.Book book67 = new items.Book("", "", true, true, "", "hi!");
        book67.returnItem();
        java.lang.String str69 = book67.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        book76.returnItem();
        java.lang.String str78 = book76.getAuthor();
        java.lang.String str79 = book76.getAuthor();
        items.Book book86 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray87 = new items.LibraryItem[] { book58, book67, book76, book86 };
        java.util.ArrayList<items.LibraryItem> libraryItemList88 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList88, libraryItemArray87);
        boolean boolean90 = book50.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean91 = book39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean92 = book30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean93 = book14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8227 + "'", int19 == 8227);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Book" + "'", str23, "Book");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str31, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        double double48 = book6.calculateOverduePenalty();
        java.lang.String str49 = book6.toString();
        boolean boolean50 = book6.isOverdue();
        boolean boolean51 = book6.isPurchasable();
        boolean boolean52 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=172, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str55 = book6.getPrice();
        boolean boolean56 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LibraryItem [itemId=8237, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str49, "LibraryItem [itemId=8237, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getDetails();
        int int53 = book6.getItemId();
        boolean boolean54 = book6.isOverdue();
        java.lang.String str55 = book6.getDetails();
        book6.returnItem();
        java.lang.String str57 = book6.getPrice();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8242, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8242, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str52, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8242 + "'", int53 == 8242);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str55, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        items.Book book6 = new items.Book("LibraryItem [itemId=549, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2071, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "", "LibraryItem [itemId=1021, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book" + "'", str7, "Book");
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        java.lang.String str52 = book6.getDetails();
        java.lang.String str53 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8248, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8248, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str52, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        items.Book book6 = new items.Book("LibraryItem [itemId=3614, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5547, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=7438, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4192, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isPurchasable();
        boolean boolean11 = book6.isPurchasable();
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str91 = book6.getDetails();
        java.lang.String str92 = book6.getTitle();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str91, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        items.Book book6 = new items.Book("LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=601, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=615, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = book6.isPurchasable();
        java.lang.String str8 = book6.toString();
        boolean boolean9 = book6.isOverdue();
        book6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8263, itemType=Book, location=LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8263, itemType=Book, location=LibraryItem [itemId=409, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=434, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        items.Book book6 = new items.Book("LibraryItem [itemId=4898, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1037, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=3925, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1846, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        java.lang.String str9 = book6.getAuthor();
        boolean boolean10 = book6.isRented();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        double double9 = book6.calculateOverduePenalty();
        java.lang.String str10 = book6.getTitle();
        java.lang.String str11 = book6.getDetails();
        book6.returnItem();
        book6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: false" + "'", str11, "Book: hi! by . Location: hi!. Purchasable: false");
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        int int89 = book6.getItemId();
        boolean boolean90 = book6.isOverdue();
        boolean boolean91 = book6.isOverdue();
        java.lang.String str92 = book6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int89 + "' != '" + 8272 + "'", int89 == 8272);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str92, "Book:  by hi!. Location: . Purchasable: true");
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        items.Book book6 = new items.Book("LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=229, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = book6.getAuthor();
        java.lang.String str8 = book6.getDetails();
        book6.setLocation("LibraryItem [itemId=1721, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book17 = new items.Book("hi!", "", true, false, "hi!", "");
        book17.setIsPurchasable(true);
        book17.returnItem();
        java.lang.String str21 = book17.getAuthor();
        items.Book book28 = new items.Book("", "", true, true, "", "hi!");
        book28.returnItem();
        java.lang.String str30 = book28.getAuthor();
        java.lang.String str31 = book28.getAuthor();
        double double32 = book28.calculateOverduePenalty();
        items.Book book39 = new items.Book("", "", true, true, "", "hi!");
        book39.returnItem();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        java.lang.String str49 = book47.getAuthor();
        items.Book book56 = new items.Book("", "", true, true, "", "hi!");
        book56.returnItem();
        java.lang.String str58 = book56.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        book65.returnItem();
        java.lang.String str67 = book65.getAuthor();
        java.lang.String str68 = book65.getAuthor();
        items.Book book75 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray76 = new items.LibraryItem[] { book47, book56, book65, book75 };
        java.util.ArrayList<items.LibraryItem> libraryItemList77 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList77, libraryItemArray76);
        boolean boolean79 = book39.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean80 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean81 = book17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        boolean boolean82 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList77);
        java.lang.String str83 = book6.getBorrowerEmail();
        java.lang.String str84 = book6.getLocation();
        book6.setIsPurchasable(true);
        boolean boolean87 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=110, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=383, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LibraryItem [itemId=1721, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str84, "LibraryItem [itemId=1721, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = book6.isOverdue();
        book6.setBorrowerEmail("LibraryItem [itemId=985, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean50 = book6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.setIsPurchasable(true);
        java.lang.String str11 = book6.getAuthor();
        java.lang.String str12 = book6.getLocation();
        java.lang.String str13 = book6.getLocation();
        java.lang.String str14 = book6.getDetails();
        java.lang.String str15 = book6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str14, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        double double95 = book6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        book6.returnItem();
        int int9 = book6.getItemId();
        book6.setLocation("");
        double double12 = book6.calculateOverduePenalty();
        boolean boolean13 = book6.isOverdue();
        java.lang.String str14 = book6.toString();
        java.lang.String str15 = book6.getPrice();
        double double16 = book6.calculateOverduePenalty();
        boolean boolean17 = book6.isRented();
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8307 + "'", int9 == 8307);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8307, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8307, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isRented();
        book6.setLocation("LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book18 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str19 = book18.getDetails();
        java.lang.String str20 = book18.getDetails();
        boolean boolean21 = book18.isOverdue();
        items.Book book28 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean29 = book28.isOverdue();
        items.Book book36 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean37 = book36.isOverdue();
        items.Book book44 = new items.Book("", "", true, true, "", "hi!");
        book44.returnItem();
        items.Book book52 = new items.Book("", "", true, true, "", "hi!");
        book52.returnItem();
        java.lang.String str54 = book52.getAuthor();
        items.Book book61 = new items.Book("", "", true, true, "", "hi!");
        book61.returnItem();
        java.lang.String str63 = book61.getAuthor();
        items.Book book70 = new items.Book("", "", true, true, "", "hi!");
        book70.returnItem();
        java.lang.String str72 = book70.getAuthor();
        java.lang.String str73 = book70.getAuthor();
        items.Book book80 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book52, book61, book70, book80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book44.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { book36, book44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = book28.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = book18.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str91 = book6.getItemType();
        book6.setIsPurchasable(true);
        java.lang.String str94 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str20, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Book" + "'", str91, "Book");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        java.lang.String str7 = book6.getTitle();
        java.time.LocalDate localDate8 = null;
        // The following exception was thrown during execution in test generation
        try {
            book6.rentItem(localDate8, 2578, "LibraryItem [itemId=7364, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        items.Book book14 = new items.Book("", "", true, true, "", "hi!");
        book14.returnItem();
        java.lang.String str16 = book14.getAuthor();
        items.Book book23 = new items.Book("", "", true, true, "", "hi!");
        book23.returnItem();
        java.lang.String str25 = book23.getAuthor();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        java.lang.String str34 = book32.getAuthor();
        java.lang.String str35 = book32.getAuthor();
        items.Book book42 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { book14, book23, book32, book42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList44);
        java.lang.String str47 = book6.getItemType();
        java.lang.String str48 = book6.toString();
        book6.setBorrowerEmail("LibraryItem [itemId=90, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str51 = book6.getDetails();
        boolean boolean52 = book6.isOverdue();
        book6.setIsPurchasable(false);
        double double55 = book6.calculateOverduePenalty();
        book6.returnItem();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Book" + "'", str47, "Book");
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LibraryItem [itemId=8339, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str48, "LibraryItem [itemId=8339, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str51, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        boolean boolean89 = book6.isPurchasable();
        java.lang.String str90 = book6.getDetails();
        book6.setBorrowerEmail("LibraryItem [itemId=5256, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str93 = book6.getTitle();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str90, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        book6.returnItem();
        java.lang.String str11 = book6.getBorrowerEmail();
        items.Book book18 = new items.Book("", "", true, true, "", "hi!");
        book18.returnItem();
        boolean boolean20 = book18.isPurchasable();
        boolean boolean21 = book18.isRented();
        java.lang.String str22 = book18.getLocation();
        items.Book book29 = new items.Book("", "", true, true, "", "hi!");
        book29.returnItem();
        items.Book book37 = new items.Book("", "", true, true, "", "hi!");
        book37.returnItem();
        java.lang.String str39 = book37.getAuthor();
        items.Book book46 = new items.Book("", "", true, true, "", "hi!");
        book46.returnItem();
        java.lang.String str48 = book46.getAuthor();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        java.lang.String str58 = book55.getAuthor();
        items.Book book65 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { book37, book46, book55, book65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = book29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = book18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        int int72 = book6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8353, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8353, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 8353 + "'", int72 == 8353);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        java.lang.String str10 = book6.getLocation();
        java.lang.String str11 = book6.getLocation();
        java.lang.String str12 = book6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        book6.returnItem();
        java.lang.String str10 = book6.getAuthor();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        items.Book book6 = new items.Book("LibraryItem [itemId=987, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5208, itemType=Book, location=Book, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1442, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3626, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        items.Book book6 = new items.Book("LibraryItem [itemId=197, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "Book:  by hi!. Location: . Purchasable: false");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        boolean boolean9 = book6.isRented();
        double double10 = book6.calculateOverduePenalty();
        boolean boolean11 = book6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        book6.returnItem();
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        book6.setBorrowerEmail("LibraryItem [itemId=886, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean13 = book6.isPurchasable();
        java.lang.String str14 = book6.getItemType();
        book6.setLocation("LibraryItem [itemId=6719, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8364, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8364, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Book" + "'", str14, "Book");
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        items.Book book6 = new items.Book("LibraryItem [itemId=263, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=251, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=136, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.Book book13 = new items.Book("", "", true, true, "", "hi!");
        book13.returnItem();
        boolean boolean15 = book13.isPurchasable();
        items.Book book22 = new items.Book("hi!", "", true, false, "hi!", "");
        book22.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book31 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean32 = book31.isOverdue();
        items.Book book39 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean40 = book39.isOverdue();
        items.Book book47 = new items.Book("", "", true, true, "", "hi!");
        book47.returnItem();
        items.Book book55 = new items.Book("", "", true, true, "", "hi!");
        book55.returnItem();
        java.lang.String str57 = book55.getAuthor();
        items.Book book64 = new items.Book("", "", true, true, "", "hi!");
        book64.returnItem();
        java.lang.String str66 = book64.getAuthor();
        items.Book book73 = new items.Book("", "", true, true, "", "hi!");
        book73.returnItem();
        java.lang.String str75 = book73.getAuthor();
        java.lang.String str76 = book73.getAuthor();
        items.Book book83 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book55, book64, book73, book83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book47.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { book39, book47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = book31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = book22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = book13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        book6.setIsPurchasable(true);
        book6.setIsPurchasable(false);
        java.lang.String str99 = book6.getAuthor();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str99, "LibraryItem [itemId=64, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        java.lang.String str8 = book6.getAuthor();
        java.lang.String str9 = book6.getAuthor();
        double double10 = book6.calculateOverduePenalty();
        items.Book book17 = new items.Book("", "", true, true, "", "hi!");
        book17.returnItem();
        items.Book book25 = new items.Book("", "", true, true, "", "hi!");
        book25.returnItem();
        java.lang.String str27 = book25.getAuthor();
        items.Book book34 = new items.Book("", "", true, true, "", "hi!");
        book34.returnItem();
        java.lang.String str36 = book34.getAuthor();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        java.lang.String str45 = book43.getAuthor();
        java.lang.String str46 = book43.getAuthor();
        items.Book book53 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { book25, book34, book43, book53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = book17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean59 = book6.isRented();
        double double60 = book6.calculateOverduePenalty();
        java.lang.String str61 = book6.getPrice();
        boolean boolean62 = book6.isPurchasable();
        java.lang.Class<?> wildcardClass63 = book6.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        items.Book book6 = new items.Book("", "", true, true, "", "hi!");
        book6.returnItem();
        boolean boolean8 = book6.isPurchasable();
        items.Book book15 = new items.Book("hi!", "", true, false, "hi!", "");
        book15.setBorrowerEmail("Book: hi! by . Location: hi!. Purchasable: true");
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean33 = book32.isOverdue();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        items.Book book48 = new items.Book("", "", true, true, "", "hi!");
        book48.returnItem();
        java.lang.String str50 = book48.getAuthor();
        items.Book book57 = new items.Book("", "", true, true, "", "hi!");
        book57.returnItem();
        java.lang.String str59 = book57.getAuthor();
        items.Book book66 = new items.Book("", "", true, true, "", "hi!");
        book66.returnItem();
        java.lang.String str68 = book66.getAuthor();
        java.lang.String str69 = book66.getAuthor();
        items.Book book76 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { book48, book57, book66, book76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = book40.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { book32, book40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = book24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = book15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = book6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        book6.setBorrowerEmail("Book:  by hi!. Location: . Purchasable: true");
        boolean boolean89 = book6.isPurchasable();
        java.lang.String str90 = book6.getDetails();
        java.lang.String str91 = book6.getBorrowerEmail();
        java.lang.String str92 = book6.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str90, "Book:  by hi!. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Book:  by hi!. Location: . Purchasable: true" + "'", str91, "Book:  by hi!. Location: . Purchasable: true");
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=8381, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=8381, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = book6.getDetails();
        boolean boolean12 = book6.isRented();
        double double13 = book6.calculateOverduePenalty();
        boolean boolean14 = book6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str11, "Book: hi! by . Location: LibraryItem [itemId=737, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        items.Book book6 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str7 = book6.getDetails();
        java.lang.String str8 = book6.getDetails();
        boolean boolean9 = book6.isOverdue();
        items.Book book16 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean17 = book16.isOverdue();
        items.Book book24 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean25 = book24.isOverdue();
        items.Book book32 = new items.Book("", "", true, true, "", "hi!");
        book32.returnItem();
        items.Book book40 = new items.Book("", "", true, true, "", "hi!");
        book40.returnItem();
        java.lang.String str42 = book40.getAuthor();
        items.Book book49 = new items.Book("", "", true, true, "", "hi!");
        book49.returnItem();
        java.lang.String str51 = book49.getAuthor();
        items.Book book58 = new items.Book("", "", true, true, "", "hi!");
        book58.returnItem();
        java.lang.String str60 = book58.getAuthor();
        java.lang.String str61 = book58.getAuthor();
        items.Book book68 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { book40, book49, book58, book68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = book32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { book24, book32 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = book16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str78 = book6.getTitle();
        book6.setLocation("LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str81 = book6.toString();
        java.lang.String str82 = book6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str7, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str8, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "LibraryItem [itemId=8392, itemType=Book, location=LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str81, "LibraryItem [itemId=8392, itemType=Book, location=LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "LibraryItem [itemId=8392, itemType=Book, location=LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str82, "LibraryItem [itemId=8392, itemType=Book, location=LibraryItem [itemId=1396, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        items.Book book6 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        book6.setIsPurchasable(false);
        java.lang.String str9 = book6.toString();
        java.lang.String str10 = book6.getTitle();
        items.Book book17 = new items.Book("hi!", "", true, false, "hi!", "");
        java.lang.String str18 = book17.getDetails();
        java.lang.String str19 = book17.getDetails();
        boolean boolean20 = book17.isOverdue();
        items.Book book27 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean28 = book27.isOverdue();
        items.Book book35 = new items.Book("hi!", "hi!", true, true, "hi!", "");
        boolean boolean36 = book35.isOverdue();
        items.Book book43 = new items.Book("", "", true, true, "", "hi!");
        book43.returnItem();
        items.Book book51 = new items.Book("", "", true, true, "", "hi!");
        book51.returnItem();
        java.lang.String str53 = book51.getAuthor();
        items.Book book60 = new items.Book("", "", true, true, "", "hi!");
        book60.returnItem();
        java.lang.String str62 = book60.getAuthor();
        items.Book book69 = new items.Book("", "", true, true, "", "hi!");
        book69.returnItem();
        java.lang.String str71 = book69.getAuthor();
        java.lang.String str72 = book69.getAuthor();
        items.Book book79 = new items.Book("", "", true, true, "", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { book51, book60, book69, book79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = book43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { book35, book43 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = book27.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = book17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = book6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        book6.setIsPurchasable(true);
        java.lang.String str92 = book6.getPrice();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8400, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8400, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str18, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Book: hi! by . Location: hi!. Purchasable: true" + "'", str19, "Book: hi! by . Location: hi!. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        items.Book book6 = new items.Book("LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=92, itemType=Book, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "Book");
        java.lang.String str7 = book6.toString();
        java.lang.String str8 = book6.getDetails();
        int int9 = book6.getItemId();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=8409, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=8409, itemType=Book, location=LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str8, "Book: LibraryItem [itemId=170, itemType=Book, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by Book. Location: LibraryItem [itemId=178, itemType=Book, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8409 + "'", int9 == 8409);
    }
}
