package AutomatedTesting;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class CD3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getPrice();
        java.lang.Class<?> wildcardClass15 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getAuthor();
        boolean boolean17 = cD6.isRented();
        java.lang.String str18 = cD6.getItemType();
        java.lang.String str19 = cD6.getLocation();
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        boolean boolean29 = cD26.isPurchasable();
        boolean boolean30 = cD26.isOverdue();
        double double31 = cD26.calculateOverduePenalty();
        java.lang.String str32 = cD26.getArtist();
        java.lang.String str33 = cD26.getDetails();
        java.lang.String str34 = cD26.getDetails();
        cD26.setBorrowerEmail("");
        items.CD cD43 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str44 = cD43.getBorrowerEmail();
        java.lang.String str45 = cD43.getBorrowerEmail();
        cD43.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD54.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str80 = cD79.getLocation();
        java.lang.String str81 = cD79.getLocation();
        items.CD cD88 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { cD72, cD79, cD88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = cD63.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = cD54.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = cD26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean97 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8355 + "'", int9 == 8355);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8355, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8355, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8355, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8355, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8355 + "'", int12 == 8355);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str33, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str34, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getAuthor();
        java.lang.String str10 = cD6.getDetails();
        java.lang.String str11 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str10, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getArtist();
        boolean boolean18 = cD6.isRented();
        java.lang.String str19 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8365, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8365, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str19, "CD: hi! by hi!. Location: LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        java.lang.String str8 = cD6.getArtist();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        int int18 = cD15.getItemId();
        java.lang.String str19 = cD15.getBorrowerEmail();
        cD15.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str22 = cD15.getItemType();
        items.CD cD29 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str30 = cD29.getLocation();
        java.lang.String str31 = cD29.getLocation();
        items.CD cD38 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD45 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str46 = cD45.getLocation();
        java.lang.String str47 = cD45.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray55 = new items.LibraryItem[] { cD38, cD45, cD54 };
        java.util.ArrayList<items.LibraryItem> libraryItemList56 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList56, libraryItemArray55);
        boolean boolean58 = cD29.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList56);
        boolean boolean59 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList56);
        boolean boolean60 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList56);
        java.lang.String str61 = cD6.getItemType();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8367 + "'", int18 == 8367);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CD" + "'", str22, "CD");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CD" + "'", str61, "CD");
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        items.CD cD6 = new items.CD("LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=215, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getPrice();
        java.lang.String str8 = cD6.toString();
        cD6.setIsPurchasable(true);
        int int11 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8373, itemType=CD, location=LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8373, itemType=CD, location=LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8373 + "'", int11 == 8373);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getDetails();
        cD6.setLocation("LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        boolean boolean19 = cD16.isPurchasable();
        boolean boolean20 = cD16.isOverdue();
        java.lang.String str21 = cD16.getItemType();
        java.lang.String str22 = cD16.getAuthor();
        java.lang.String str23 = cD16.toString();
        cD16.setIsPurchasable(true);
        cD16.setIsPurchasable(false);
        items.CD cD34 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str35 = cD34.getLocation();
        java.lang.String str36 = cD34.getLocation();
        int int37 = cD34.getItemId();
        cD34.setBorrowerEmail("CD");
        java.lang.String str40 = cD34.getDetails();
        cD34.setIsPurchasable(false);
        items.CD cD49 = new items.CD("CD", "LibraryItem [itemId=1232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str73 = cD72.getLocation();
        java.lang.String str74 = cD72.getLocation();
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray82 = new items.LibraryItem[] { cD65, cD72, cD81 };
        java.util.ArrayList<items.LibraryItem> libraryItemList83 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList83, libraryItemArray82);
        boolean boolean85 = cD56.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean86 = cD49.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean87 = cD34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean88 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        boolean boolean89 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList83);
        java.lang.String str90 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str7, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CD" + "'", str21, "CD");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "LibraryItem [itemId=8375, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str23, "LibraryItem [itemId=8375, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8376 + "'", int37 == 8376);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str40, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=663, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        boolean boolean17 = cD6.isPurchasable();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8382 + "'", int9 == 8382);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8382, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8382, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=8382, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=8382, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        items.CD cD6 = new items.CD("LibraryItem [itemId=5701, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5282, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=4313, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean13 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8390 + "'", int9 == 8390);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=95, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getPrice();
        double double15 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8391 + "'", int9 == 8391);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8391, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8391, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=2196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getPrice();
        java.lang.Class<?> wildcardClass14 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        cD6.setLocation("LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str19 = cD6.getItemType();
        java.lang.String str20 = cD6.getArtist();
        java.lang.String str21 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD" + "'", str19, "CD");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str21, "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getBorrowerEmail();
        cD6.returnItem();
        int int19 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8397, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8397, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8397 + "'", int19 == 8397);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        java.lang.String str17 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=5685, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        int int9 = cD6.getItemId();
        double double10 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8399, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8399, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8399 + "'", int9 == 8399);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getPrice();
        java.lang.String str15 = cD6.getPrice();
        double double16 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        double double9 = cD6.calculateOverduePenalty();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.getDetails();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getAuthor();
        cD6.setLocation("");
        java.lang.String str16 = cD6.getLocation();
        java.lang.String str17 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8401, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8401, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8401 + "'", int12 == 8401);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=8401, itemType=CD, location=, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=8401, itemType=CD, location=, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8402 + "'", int9 == 8402);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8402, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8402, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8403 + "'", int9 == 8403);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8403, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8403, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        double double9 = cD6.calculateOverduePenalty();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.getDetails();
        int int12 = cD6.getItemId();
        double double13 = cD6.calculateOverduePenalty();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8404 + "'", int12 == 8404);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        cD6.setIsPurchasable(true);
        int int14 = cD6.getItemId();
        java.time.LocalDate localDate15 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate15, 7252, "LibraryItem [itemId=5471, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8405 + "'", int9 == 8405);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8405, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8405, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8405 + "'", int14 == 8405);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        java.lang.String str87 = cD6.getArtist();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8406, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8406, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getAuthor();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        java.lang.String str16 = cD6.getLocation();
        cD6.setLocation("");
        double double19 = cD6.calculateOverduePenalty();
        boolean boolean20 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8416, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8416, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1348, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1322, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getAuthor();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        double double16 = cD14.calculateOverduePenalty();
        java.lang.String str17 = cD14.getPrice();
        java.lang.String str18 = cD14.toString();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        boolean boolean28 = cD25.isPurchasable();
        boolean boolean29 = cD25.isOverdue();
        java.lang.String str30 = cD25.getItemType();
        java.lang.String str31 = cD25.getAuthor();
        cD25.returnItem();
        int int33 = cD25.getItemId();
        cD25.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str36 = cD25.getArtist();
        cD25.setBorrowerEmail("LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD25.returnItem();
        items.CD cD46 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str47 = cD46.getLocation();
        java.lang.String str48 = cD46.getLocation();
        int int49 = cD46.getItemId();
        cD46.setBorrowerEmail("CD");
        java.lang.String str52 = cD46.getArtist();
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str76 = cD75.getLocation();
        java.lang.String str77 = cD75.getLocation();
        items.CD cD84 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { cD68, cD75, cD84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = cD59.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = cD46.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = cD25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean93 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=8418, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=8418, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "CD" + "'", str30, "CD");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8419 + "'", int33 == 8419);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8420 + "'", int49 == 8420);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.toString();
        java.lang.String str13 = cD6.getPrice();
        boolean boolean14 = cD6.isOverdue();
        boolean boolean15 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8425, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8425, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8425, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8425, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        boolean boolean15 = cD6.isRented();
        java.lang.String str16 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        java.lang.String str8 = cD6.getItemType();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.toString();
        boolean boolean18 = cD15.isOverdue();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        items.CD cD34 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray51 = new items.LibraryItem[] { cD34, cD41, cD50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList52 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList52, libraryItemArray51);
        boolean boolean54 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList52);
        boolean boolean55 = cD25.isOverdue();
        java.lang.String str56 = cD25.getLocation();
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str80 = cD79.getLocation();
        java.lang.String str81 = cD79.getLocation();
        items.CD cD88 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { cD72, cD79, cD88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = cD63.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = cD25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = cD15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        java.lang.String str96 = cD6.getItemType();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8428 + "'", int7 == 8428);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=8429, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=8429, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "CD" + "'", str96, "CD");
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        int int15 = cD6.getItemId();
        int int16 = cD6.getItemId();
        java.lang.String str17 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8438 + "'", int15 == 8438);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8438 + "'", int16 == 8438);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getAuthor();
        java.lang.String str8 = cD6.getTitle();
        java.lang.String str9 = cD6.getDetails();
        java.lang.String str10 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str9, "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getArtist();
        boolean boolean15 = cD6.isPurchasable();
        java.lang.String str16 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8441 + "'", int9 == 8441);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        boolean boolean89 = cD6.isOverdue();
        int int90 = cD6.getItemId();
        java.lang.String str91 = cD6.getDetails();
        java.lang.String str92 = cD6.getTitle();
        java.lang.String str93 = cD6.getPrice();
        boolean boolean94 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8442, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8442, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int90 + "' != '" + 8442 + "'", int90 == 8442);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str91, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8451, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8451, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=144, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=2239, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        boolean boolean12 = cD6.isOverdue();
        java.lang.String str13 = cD6.getPrice();
        cD6.setBorrowerEmail("LibraryItem [itemId=8317, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        cD6.setLocation("LibraryItem [itemId=6518, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8454, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8454, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8454 + "'", int11 == 8454);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        java.lang.String str15 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str17 = cD6.getDetails();
        java.lang.String str18 = cD6.getArtist();
        java.lang.String str19 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8464 + "'", int9 == 8464);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getItemType();
        java.lang.String str8 = cD6.getTitle();
        items.CD cD15 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD15.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.getLocation();
        items.CD cD33 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str41 = cD40.getLocation();
        java.lang.String str42 = cD40.getLocation();
        items.CD cD49 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray50 = new items.LibraryItem[] { cD33, cD40, cD49 };
        java.util.ArrayList<items.LibraryItem> libraryItemList51 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList51, libraryItemArray50);
        boolean boolean53 = cD24.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList51);
        boolean boolean54 = cD24.isOverdue();
        items.CD cD61 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str62 = cD61.getLocation();
        java.lang.String str63 = cD61.getLocation();
        items.CD cD70 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str78 = cD77.getLocation();
        java.lang.String str79 = cD77.getLocation();
        items.CD cD86 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray87 = new items.LibraryItem[] { cD70, cD77, cD86 };
        java.util.ArrayList<items.LibraryItem> libraryItemList88 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList88, libraryItemArray87);
        boolean boolean90 = cD61.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean91 = cD24.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean92 = cD15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        boolean boolean93 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList88);
        java.lang.Class<?> wildcardClass94 = libraryItemList88.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD" + "'", str7, "CD");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        items.CD cD6 = new items.CD("LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=814, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD13 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD13.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str39 = cD38.getLocation();
        java.lang.String str40 = cD38.getLocation();
        items.CD cD47 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { cD31, cD38, cD47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = cD22.isOverdue();
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str76 = cD75.getLocation();
        java.lang.String str77 = cD75.getLocation();
        items.CD cD84 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { cD68, cD75, cD84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = cD59.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = cD13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str92 = cD6.getPrice();
        java.lang.String str93 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=8455, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str93, "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getLocation();
        java.lang.String str14 = cD6.getItemType();
        boolean boolean15 = cD6.isOverdue();
        double double16 = cD6.calculateOverduePenalty();
        boolean boolean17 = cD6.isRented();
        java.lang.String str18 = cD6.getDetails();
        cD6.setLocation("LibraryItem [itemId=7986, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD" + "'", str14, "CD");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str18, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1945, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=2677, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        double double7 = cD6.calculateOverduePenalty();
        cD6.setLocation("LibraryItem [itemId=7212, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=295, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isPurchasable();
        double double15 = cD6.calculateOverduePenalty();
        java.lang.String str16 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8488, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8488, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=8488, itemType=CD, location=LibraryItem [itemId=295, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=8488, itemType=CD, location=LibraryItem [itemId=295, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        items.CD cD6 = new items.CD("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=6638, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getPrice();
        boolean boolean13 = cD6.isOverdue();
        cD6.setLocation("LibraryItem [itemId=5528, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass16 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8490 + "'", int9 == 8490);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8490, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8490, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        items.CD cD6 = new items.CD("LibraryItem [itemId=6478, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1708, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=7919, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.getDetails();
        int int13 = cD6.getItemId();
        java.lang.String str14 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8492 + "'", int13 == 8492);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        items.CD cD6 = new items.CD("LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=436, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=842, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD13 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str14 = cD13.getLocation();
        java.lang.String str15 = cD13.getLocation();
        boolean boolean16 = cD13.isPurchasable();
        boolean boolean17 = cD13.isOverdue();
        boolean boolean18 = cD13.isPurchasable();
        boolean boolean19 = cD13.isOverdue();
        java.lang.String str20 = cD13.getDetails();
        items.CD cD27 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str28 = cD27.getLocation();
        java.lang.String str29 = cD27.toString();
        java.lang.String str30 = cD27.getBorrowerEmail();
        java.lang.String str31 = cD27.getPrice();
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD38.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD47 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str48 = cD47.getLocation();
        java.lang.String str49 = cD47.getLocation();
        items.CD cD56 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray73 = new items.LibraryItem[] { cD56, cD63, cD72 };
        java.util.ArrayList<items.LibraryItem> libraryItemList74 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList74, libraryItemArray73);
        boolean boolean76 = cD47.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean77 = cD38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean78 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean79 = cD13.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        boolean boolean80 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList74);
        java.lang.String str81 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str20, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "LibraryItem [itemId=8495, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str29, "LibraryItem [itemId=8495, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str81, "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        boolean boolean40 = cD6.isOverdue();
        boolean boolean41 = cD6.isOverdue();
        java.lang.String str42 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        items.CD cD6 = new items.CD("LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=436, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=842, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getItemType();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD" + "'", str7, "CD");
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getItemType();
        java.lang.String str40 = cD6.getBorrowerEmail();
        cD6.returnItem();
        java.lang.String str42 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8506 + "'", int37 == 8506);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CD" + "'", str39, "CD");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str42, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isRented();
        cD6.setBorrowerEmail("LibraryItem [itemId=1020, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass13 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        cD6.setIsPurchasable(false);
        boolean boolean14 = cD6.isOverdue();
        java.time.LocalDate localDate15 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate15, 4932, "LibraryItem [itemId=5100, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8511 + "'", int9 == 8511);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8511, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8511, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        java.lang.String str16 = cD6.getLocation();
        double double17 = cD6.calculateOverduePenalty();
        int int18 = cD6.getItemId();
        cD6.setLocation("LibraryItem [itemId=3845, itemType=CD, location=LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8512, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8512, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8512 + "'", int18 == 8512);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.toString();
        items.CD cD18 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str19 = cD18.getLocation();
        java.lang.String str20 = cD18.toString();
        java.lang.String str21 = cD18.getBorrowerEmail();
        java.lang.String str22 = cD18.getBorrowerEmail();
        items.CD cD29 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str30 = cD29.getLocation();
        java.lang.String str31 = cD29.getLocation();
        items.CD cD38 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD45 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str46 = cD45.getLocation();
        java.lang.String str47 = cD45.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray55 = new items.LibraryItem[] { cD38, cD45, cD54 };
        java.util.ArrayList<items.LibraryItem> libraryItemList56 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList56, libraryItemArray55);
        boolean boolean58 = cD29.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList56);
        boolean boolean59 = cD29.isOverdue();
        items.CD cD66 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str67 = cD66.getLocation();
        java.lang.String str68 = cD66.getLocation();
        items.CD cD75 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD82 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str83 = cD82.getLocation();
        java.lang.String str84 = cD82.getLocation();
        items.CD cD91 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray92 = new items.LibraryItem[] { cD75, cD82, cD91 };
        java.util.ArrayList<items.LibraryItem> libraryItemList93 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList93, libraryItemArray92);
        boolean boolean95 = cD66.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean96 = cD29.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean97 = cD18.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean98 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8513 + "'", int9 == 8513);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8513, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8513, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=8514, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=8514, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isRented();
        cD6.setIsPurchasable(false);
        java.time.LocalDate localDate13 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate13, 1669, "LibraryItem [itemId=144, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        double double13 = cD6.calculateOverduePenalty();
        int int14 = cD6.getItemId();
        java.lang.String str15 = cD6.getArtist();
        cD6.setBorrowerEmail("LibraryItem [itemId=3205, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8525, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8525, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8525 + "'", int14 == 8525);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=123, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("hi!");
        cD6.setIsPurchasable(true);
        boolean boolean11 = cD6.isRented();
        double double12 = cD6.calculateOverduePenalty();
        boolean boolean13 = cD6.isPurchasable();
        boolean boolean14 = cD6.isPurchasable();
        java.time.LocalDate localDate15 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate15, 6783, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str40 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str38, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getTitle();
        boolean boolean12 = cD6.isPurchasable();
        java.lang.String str13 = cD6.getAuthor();
        java.lang.String str14 = cD6.getPrice();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8531 + "'", int7 == 8531);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        int int14 = cD6.getItemId();
        cD6.setIsPurchasable(true);
        java.lang.String str17 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8532 + "'", int14 == 8532);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getArtist();
        java.lang.String str18 = cD6.getLocation();
        java.lang.String str19 = cD6.getLocation();
        java.lang.String str20 = cD6.getBorrowerEmail();
        java.lang.String str21 = cD6.getAuthor();
        cD6.setLocation("LibraryItem [itemId=7953, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8533, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8533, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3541, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=506, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1628, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        cD6.setLocation("LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str19 = cD6.getItemType();
        java.lang.String str20 = cD6.getLocation();
        cD6.returnItem();
        int int22 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8535, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8535, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD" + "'", str19, "CD");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8535 + "'", int22 == 8535);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getTitle();
        boolean boolean12 = cD6.isPurchasable();
        java.lang.String str13 = cD6.getAuthor();
        items.CD cD20 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str21 = cD20.getLocation();
        java.lang.String str22 = cD20.getLocation();
        int int23 = cD20.getItemId();
        java.lang.String str24 = cD20.getBorrowerEmail();
        java.lang.String str25 = cD20.getBorrowerEmail();
        java.lang.String str26 = cD20.getAuthor();
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.toString();
        java.lang.String str36 = cD33.getDetails();
        boolean boolean37 = cD33.isRented();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { cD53, cD60, cD69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = cD44.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = cD33.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean75 = cD20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean76 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8536 + "'", int7 == 8536);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8537 + "'", int23 == 8537);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "LibraryItem [itemId=8538, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str35, "LibraryItem [itemId=8538, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str36, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        items.CD cD6 = new items.CD("LibraryItem [itemId=4104, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5121, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=2378, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=4104, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=4104, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        java.lang.String str36 = cD6.getDetails();
        java.lang.String str37 = cD6.getBorrowerEmail();
        java.lang.String str38 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str36, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "LibraryItem [itemId=8544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str38, "LibraryItem [itemId=8544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setIsPurchasable(true);
        double double21 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setLocation("LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str39, "CD: hi! by hi!. Location: LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getAuthor();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8553 + "'", int7 == 8553);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8553, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8553, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        cD6.returnItem();
        java.lang.String str40 = cD6.toString();
        java.lang.String str41 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "LibraryItem [itemId=8554, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str40, "LibraryItem [itemId=8554, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str41, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1950, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", true, false, "", "LibraryItem [itemId=1965, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate7, 8523, "LibraryItem [itemId=5640, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        items.CD cD6 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getDetails();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true by LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str9, "CD: CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true by LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getArtist();
        int int14 = cD6.getItemId();
        boolean boolean15 = cD6.isRented();
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=7750, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8560, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8560, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8560 + "'", int14 == 8560);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        double double37 = cD6.calculateOverduePenalty();
        java.lang.String str38 = cD6.getAuthor();
        java.lang.String str39 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=5928, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int21 = cD6.getItemId();
        boolean boolean22 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8566 + "'", int21 == 8566);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getPrice();
        double double12 = cD6.calculateOverduePenalty();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        boolean boolean20 = cD19.isRented();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str29 = cD28.getLocation();
        java.lang.String str30 = cD28.getLocation();
        int int31 = cD28.getItemId();
        cD28.setBorrowerEmail("CD");
        java.lang.String str34 = cD28.getArtist();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        items.CD cD50 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD57 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str58 = cD57.getLocation();
        java.lang.String str59 = cD57.getLocation();
        items.CD cD66 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray67 = new items.LibraryItem[] { cD50, cD57, cD66 };
        java.util.ArrayList<items.LibraryItem> libraryItemList68 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList68, libraryItemArray67);
        boolean boolean70 = cD41.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList68);
        boolean boolean71 = cD28.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList68);
        boolean boolean72 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList68);
        boolean boolean73 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList68);
        cD6.setLocation("LibraryItem [itemId=7237, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8567, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8567, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8569 + "'", int31 == 8569);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        int int15 = cD6.getItemId();
        java.lang.String str16 = cD6.getArtist();
        java.lang.String str17 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8574 + "'", int15 == 8574);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { cD53, cD60, cD69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = cD44.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        java.lang.String str75 = cD6.getPrice();
        java.lang.String str76 = cD6.getItemType();
        java.lang.String str77 = cD6.getTitle();
        double double78 = cD6.calculateOverduePenalty();
        java.lang.String str79 = cD6.getPrice();
        double double80 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "CD" + "'", str76, "CD");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=333, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=3669, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8583 + "'", int11 == 8583);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        boolean boolean10 = cD6.isRented();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean48 = cD6.isRented();
        cD6.returnItem();
        boolean boolean50 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8584, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8584, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        items.CD cD6 = new items.CD("LibraryItem [itemId=4211, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6739, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1725, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6713, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        boolean boolean18 = cD6.isRented();
        cD6.setIsPurchasable(true);
        cD6.returnItem();
        java.lang.String str22 = cD6.getItemType();
        java.lang.String str23 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CD" + "'", str22, "CD");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        cD6.returnItem();
        java.lang.String str40 = cD6.getArtist();
        cD6.setIsPurchasable(false);
        java.lang.String str43 = cD6.getDetails();
        java.lang.Class<?> wildcardClass44 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str43, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        items.CD cD6 = new items.CD("LibraryItem [itemId=4272, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3509, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=7439, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        double double12 = cD6.calculateOverduePenalty();
        boolean boolean13 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8605, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8605, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=3683, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=2103, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5851, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=327, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        boolean boolean17 = cD6.isRented();
        boolean boolean18 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8607, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8607, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8607 + "'", int11 == 8607);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8607, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8607, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getLocation();
        java.lang.String str12 = cD6.getDetails();
        boolean boolean13 = cD6.isRented();
        cD6.returnItem();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8608, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8608, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str12, "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        java.lang.String str87 = cD6.getArtist();
        java.lang.String str88 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8609, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8609, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "CD" + "'", str88, "CD");
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isOverdue();
        java.lang.String str18 = cD6.getArtist();
        boolean boolean19 = cD6.isRented();
        java.time.LocalDate localDate20 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate20, 2947, "LibraryItem [itemId=5032, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8618, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8618, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2048, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=980, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=370, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        int int8 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=370, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=370, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8627 + "'", int8 == 8627);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1326, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1461, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=291, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=1030, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double9 = cD6.calculateOverduePenalty();
        double double10 = cD6.calculateOverduePenalty();
        cD6.setLocation("LibraryItem [itemId=1572, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        double double13 = cD6.calculateOverduePenalty();
        items.CD cD20 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str21 = cD20.getLocation();
        java.lang.String str22 = cD20.toString();
        java.lang.String str23 = cD20.getBorrowerEmail();
        java.lang.String str24 = cD20.getBorrowerEmail();
        java.lang.String str25 = cD20.getBorrowerEmail();
        java.lang.String str26 = cD20.getBorrowerEmail();
        java.lang.String str27 = cD20.getDetails();
        items.CD cD34 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double35 = cD34.calculateOverduePenalty();
        java.lang.String str36 = cD34.getBorrowerEmail();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.toString();
        java.lang.String str46 = cD43.getBorrowerEmail();
        java.lang.String str47 = cD43.getPrice();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD54.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str80 = cD79.getLocation();
        java.lang.String str81 = cD79.getLocation();
        items.CD cD88 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { cD72, cD79, cD88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = cD63.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = cD54.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = cD34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = cD20.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean97 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        java.lang.String str98 = cD6.getTitle();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8629 + "'", int9 == 8629);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8629, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8629, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8629, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8629, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=8630, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=8630, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str27, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "LibraryItem [itemId=8632, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str45, "LibraryItem [itemId=8632, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!" + "'", str98, "hi!");
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=536, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=8638, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=8638, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        cD6.setIsPurchasable(false);
        cD6.setIsPurchasable(false);
        cD6.setIsPurchasable(false);
        java.lang.String str15 = cD6.getAuthor();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8639 + "'", int7 == 8639);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        items.CD cD6 = new items.CD("CD", "LibraryItem [itemId=1232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        items.CD cD13 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str14 = cD13.getLocation();
        java.lang.String str15 = cD13.getLocation();
        items.CD cD22 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD29 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str30 = cD29.getLocation();
        java.lang.String str31 = cD29.getLocation();
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { cD22, cD29, cD38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = cD13.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList40);
        boolean boolean43 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str44 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "LibraryItem [itemId=8640, itemType=CD, location=CD, purchasable=false, title=LibraryItem [itemId=1279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str44, "LibraryItem [itemId=8640, itemType=CD, location=CD, purchasable=false, title=LibraryItem [itemId=1279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2226, itemType=CD, location=LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1724, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getLocation();
        boolean boolean8 = cD6.isRented();
        boolean boolean9 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=2226, itemType=CD, location=LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=2226, itemType=CD, location=LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        cD6.returnItem();
        java.time.LocalDate localDate16 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate16, 2725, "LibraryItem [itemId=4938, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=536, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=8647, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=8647, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.toString();
        java.lang.String str13 = cD6.toString();
        boolean boolean14 = cD6.isRented();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8648, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8648, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=8648, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=8648, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        cD6.setBorrowerEmail("CD:  by hi!. Location: . Purchasable: false");
        java.lang.String str15 = cD6.getLocation();
        java.lang.String str16 = cD6.getBorrowerEmail();
        java.lang.Class<?> wildcardClass17 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8649 + "'", int9 == 8649);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8649, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8649, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD:  by hi!. Location: . Purchasable: false" + "'", str16, "CD:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        java.lang.String str37 = cD6.toString();
        java.lang.String str38 = cD6.getPrice();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=8650, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=8650, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=4065, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int16 = cD6.getItemId();
        java.lang.String str17 = cD6.getDetails();
        java.lang.String str18 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8654, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8654, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8654 + "'", int16 == 8654);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=4065, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: LibraryItem [itemId=4065, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        int int14 = cD6.getItemId();
        int int15 = cD6.getItemId();
        java.lang.String str16 = cD6.getTitle();
        cD6.setIsPurchasable(false);
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8655 + "'", int14 == 8655);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8655 + "'", int15 == 8655);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        items.CD cD6 = new items.CD("LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=359, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=566, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getDetails();
        cD6.setLocation("LibraryItem [itemId=4903, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str9, "CD: LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getBorrowerEmail();
        cD6.returnItem();
        cD6.returnItem();
        boolean boolean20 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8657, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8657, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getAuthor();
        java.lang.String str10 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=4748, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8658 + "'", int7 == 8658);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        cD6.setLocation("LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int40 = cD6.getItemId();
        java.lang.String str41 = cD6.toString();
        boolean boolean42 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8659 + "'", int40 == 8659);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LibraryItem [itemId=8659, itemType=CD, location=LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str41, "LibraryItem [itemId=8659, itemType=CD, location=LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getItemType();
        cD6.returnItem();
        java.lang.Class<?> wildcardClass13 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getLocation();
        java.lang.String str14 = cD6.getTitle();
        cD6.returnItem();
        java.lang.String str16 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=4020, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8665 + "'", int11 == 8665);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        cD6.returnItem();
        java.lang.String str39 = cD6.getTitle();
        cD6.returnItem();
        cD6.setBorrowerEmail("LibraryItem [itemId=7613, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setIsPurchasable(true);
        cD6.setLocation("LibraryItem [itemId=1230, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getPrice();
        int int17 = cD6.getItemId();
        double double18 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8671 + "'", int17 == 8671);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getTitle();
        boolean boolean12 = cD6.isPurchasable();
        java.lang.String str13 = cD6.getTitle();
        java.lang.String str14 = cD6.getArtist();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8672 + "'", int7 == 8672);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isOverdue();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=3310, itemType=CD, location=LibraryItem [itemId=238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=359, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8674 + "'", int9 == 8674);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3541, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=506, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1628, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        boolean boolean16 = cD15.isRented();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.getLocation();
        int int27 = cD24.getItemId();
        cD24.setBorrowerEmail("CD");
        java.lang.String str30 = cD24.getArtist();
        items.CD cD37 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str38 = cD37.getLocation();
        java.lang.String str39 = cD37.getLocation();
        items.CD cD46 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD53 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str54 = cD53.getLocation();
        java.lang.String str55 = cD53.getLocation();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray63 = new items.LibraryItem[] { cD46, cD53, cD62 };
        java.util.ArrayList<items.LibraryItem> libraryItemList64 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList64, libraryItemArray63);
        boolean boolean66 = cD37.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList64);
        boolean boolean67 = cD24.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList64);
        boolean boolean68 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList64);
        boolean boolean69 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList64);
        double double70 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8677 + "'", int27 == 8677);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        java.lang.String str46 = cD6.getAuthor();
        java.lang.String str47 = cD6.getPrice();
        boolean boolean48 = cD6.isOverdue();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8682 + "'", int7 == 8682);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isOverdue();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8687 + "'", int9 == 8687);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1326, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1461, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=291, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=1030, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double9 = cD6.calculateOverduePenalty();
        cD6.returnItem();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        java.lang.String str40 = cD6.getTitle();
        java.lang.String str41 = cD6.getPrice();
        boolean boolean42 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=8401, itemType=CD, location=, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=7447, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3938, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getArtist();
        boolean boolean13 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        java.lang.String str12 = cD6.getTitle();
        java.lang.String str13 = cD6.getItemType();
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getPrice();
        boolean boolean16 = cD6.isRented();
        java.lang.String str17 = cD6.getAuthor();
        java.lang.String str18 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8695 + "'", int9 == 8695);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8695, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8695, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8695, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8695, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=8695, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=8695, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2048, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=980, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=370, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        java.lang.String str8 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=370, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=370, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=1365, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean10 = cD6.isRented();
        double double11 = cD6.calculateOverduePenalty();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8697 + "'", int7 == 8697);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        items.CD cD6 = new items.CD("LibraryItem [itemId=434, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=327, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=94, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD13 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str14 = cD13.getLocation();
        java.lang.String str15 = cD13.toString();
        java.lang.String str16 = cD13.getBorrowerEmail();
        java.lang.String str17 = cD13.getPrice();
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD24.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD49 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str50 = cD49.getLocation();
        java.lang.String str51 = cD49.getLocation();
        items.CD cD58 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { cD42, cD49, cD58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = cD33.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList60);
        boolean boolean63 = cD24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        boolean boolean64 = cD13.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList60);
        boolean boolean65 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList60);
        java.lang.String str66 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=8705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=8705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str66, "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getLocation();
        java.lang.String str15 = cD6.getTitle();
        java.lang.String str16 = cD6.getTitle();
        int int17 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8711 + "'", int9 == 8711);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8711, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8711, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8711, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8711, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8711 + "'", int17 == 8711);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        cD6.setIsPurchasable(false);
        cD6.setIsPurchasable(false);
        cD6.setIsPurchasable(false);
        double double15 = cD6.calculateOverduePenalty();
        java.lang.String str16 = cD6.getItemType();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8716 + "'", int7 == 8716);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        cD6.returnItem();
        java.lang.String str12 = cD6.getBorrowerEmail();
        java.lang.String str13 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=546, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getBorrowerEmail();
        java.lang.String str17 = cD6.toString();
        java.lang.String str18 = cD6.getAuthor();
        boolean boolean19 = cD6.isRented();
        java.lang.String str20 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=8717, itemType=CD, location=LibraryItem [itemId=546, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=8717, itemType=CD, location=LibraryItem [itemId=546, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=546, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=546, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        java.lang.String str8 = cD6.getBorrowerEmail();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.toString();
        java.lang.String str18 = cD15.getBorrowerEmail();
        java.lang.String str19 = cD15.getPrice();
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD26.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray61 = new items.LibraryItem[] { cD44, cD51, cD60 };
        java.util.ArrayList<items.LibraryItem> libraryItemList62 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList62, libraryItemArray61);
        boolean boolean64 = cD35.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean65 = cD26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean66 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean67 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList62);
        int int68 = cD6.getItemId();
        java.lang.String str69 = cD6.getArtist();
        int int70 = cD6.getItemId();
        java.lang.String str71 = cD6.getPrice();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=8719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=8719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 8718 + "'", int68 == 8718);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str69, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8718 + "'", int70 == 8718);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str71, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        cD6.returnItem();
        boolean boolean40 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isRented();
        boolean boolean12 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        java.lang.Class<?> wildcardClass15 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8729, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8729, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        items.CD cD6 = new items.CD("LibraryItem [itemId=4547, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3813, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=7536, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2239, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str91 = cD6.getAuthor();
        java.lang.String str92 = cD6.getLocation();
        boolean boolean93 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8731, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8731, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        items.CD cD6 = new items.CD("LibraryItem [itemId=397, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1068, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=69, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=2704, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        boolean boolean12 = cD6.isOverdue();
        java.lang.String str13 = cD6.getDetails();
        items.CD cD20 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str21 = cD20.getLocation();
        java.lang.String str22 = cD20.toString();
        java.lang.String str23 = cD20.getBorrowerEmail();
        java.lang.String str24 = cD20.getPrice();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD31.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str41 = cD40.getLocation();
        java.lang.String str42 = cD40.getLocation();
        items.CD cD49 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { cD49, cD56, cD65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = cD40.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = cD31.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = cD20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean72 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.String str73 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=8742, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=8742, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        cD6.setBorrowerEmail("CD:  by hi!. Location: . Purchasable: false");
        java.lang.String str15 = cD6.getLocation();
        java.lang.String str16 = cD6.getBorrowerEmail();
        java.lang.String str17 = cD6.getBorrowerEmail();
        java.lang.String str18 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8749 + "'", int9 == 8749);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8749, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8749, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD:  by hi!. Location: . Purchasable: false" + "'", str16, "CD:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD:  by hi!. Location: . Purchasable: false" + "'", str17, "CD:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getLocation();
        cD6.setBorrowerEmail("LibraryItem [itemId=7162, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8750, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8750, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        cD6.setLocation("LibraryItem [itemId=1614, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        java.lang.String str54 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8751 + "'", int9 == 8751);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "LibraryItem [itemId=8751, itemType=CD, location=LibraryItem [itemId=1614, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str54, "LibraryItem [itemId=8751, itemType=CD, location=LibraryItem [itemId=1614, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        java.lang.String str40 = cD6.getBorrowerEmail();
        java.lang.String str41 = cD6.getDetails();
        java.lang.String str42 = cD6.getTitle();
        boolean boolean43 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: true" + "'", str41, "CD: hi! by hi!. Location: hi!. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getPrice();
        java.lang.String str14 = cD6.getArtist();
        java.lang.String str15 = cD6.getDetails();
        java.lang.String str16 = cD6.getTitle();
        boolean boolean17 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str15, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1425, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2745, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=3163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1038, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        boolean boolean8 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=3163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=3163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        java.lang.String str40 = cD6.getPrice();
        boolean boolean41 = cD6.isOverdue();
        java.lang.String str42 = cD6.getAuthor();
        java.lang.String str43 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getPrice();
        java.lang.String str15 = cD6.getAuthor();
        java.lang.String str16 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        boolean boolean9 = cD6.isRented();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.toString();
        java.lang.String str19 = cD16.getBorrowerEmail();
        java.lang.String str20 = cD16.getBorrowerEmail();
        items.CD cD27 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str28 = cD27.getLocation();
        java.lang.String str29 = cD27.getLocation();
        items.CD cD36 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray53 = new items.LibraryItem[] { cD36, cD43, cD52 };
        java.util.ArrayList<items.LibraryItem> libraryItemList54 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList54, libraryItemArray53);
        boolean boolean56 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList54);
        boolean boolean57 = cD27.isOverdue();
        items.CD cD64 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str65 = cD64.getLocation();
        java.lang.String str66 = cD64.getLocation();
        items.CD cD73 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD80 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str81 = cD80.getLocation();
        java.lang.String str82 = cD80.getLocation();
        items.CD cD89 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray90 = new items.LibraryItem[] { cD73, cD80, cD89 };
        java.util.ArrayList<items.LibraryItem> libraryItemList91 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList91, libraryItemArray90);
        boolean boolean93 = cD64.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean94 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean95 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean96 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList91);
        boolean boolean97 = cD6.isPurchasable();
        boolean boolean98 = cD6.isPurchasable();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8767 + "'", int7 == 8767);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=8768, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=8768, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isOverdue();
        java.lang.String str18 = cD6.getArtist();
        java.lang.String str19 = cD6.getLocation();
        boolean boolean20 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8784, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8784, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getArtist();
        java.lang.String str9 = cD6.getPrice();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.toString();
        java.lang.String str19 = cD16.getDetails();
        boolean boolean20 = cD16.isRented();
        items.CD cD27 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str28 = cD27.getLocation();
        java.lang.String str29 = cD27.getLocation();
        items.CD cD36 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray53 = new items.LibraryItem[] { cD36, cD43, cD52 };
        java.util.ArrayList<items.LibraryItem> libraryItemList54 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList54, libraryItemArray53);
        boolean boolean56 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList54);
        boolean boolean57 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList54);
        boolean boolean58 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList54);
        java.lang.String str59 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=8786, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=8786, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str19, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        items.CD cD6 = new items.CD("LibraryItem [itemId=4046, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2016, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=556, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3224, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str12 = cD6.getPrice();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8792, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8792, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        java.lang.String str36 = cD6.getDetails();
        boolean boolean37 = cD6.isOverdue();
        double double38 = cD6.calculateOverduePenalty();
        boolean boolean39 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str36, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=327, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        java.lang.String str17 = cD6.getBorrowerEmail();
        java.lang.String str18 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8797, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8797, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8797 + "'", int11 == 8797);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8797, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8797, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=123, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        double double8 = cD6.calculateOverduePenalty();
        boolean boolean9 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        java.lang.String str10 = cD6.getDetails();
        cD6.setBorrowerEmail("");
        int int13 = cD6.getItemId();
        java.lang.String str14 = cD6.getTitle();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8803, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8803, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str10, "CD: LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8803 + "'", int13 == 8803);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.toString();
        java.lang.String str20 = cD17.getBorrowerEmail();
        java.lang.String str21 = cD17.getBorrowerEmail();
        items.CD cD28 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str29 = cD28.getLocation();
        java.lang.String str30 = cD28.getLocation();
        items.CD cD37 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { cD37, cD44, cD53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = cD28.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = cD28.isOverdue();
        items.CD cD65 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str66 = cD65.getLocation();
        java.lang.String str67 = cD65.getLocation();
        items.CD cD74 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str82 = cD81.getLocation();
        java.lang.String str83 = cD81.getLocation();
        items.CD cD90 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { cD74, cD81, cD90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = cD65.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = cD28.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean98 = cD6.isOverdue();
        double double99 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8813 + "'", int9 == 8813);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8813, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8813, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=8814, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=8814, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getDetails();
        boolean boolean10 = cD6.isPurchasable();
        double double11 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str9, "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1989, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        items.CD cD6 = new items.CD("LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=215, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        boolean boolean8 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD: LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str7, "CD: LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getTitle();
        java.lang.String str16 = cD6.getLocation();
        items.CD cD23 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str24 = cD23.getBorrowerEmail();
        java.lang.String str25 = cD23.getBorrowerEmail();
        cD23.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD34 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD34.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        items.CD cD52 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { cD52, cD59, cD68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean73 = cD34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean74 = cD23.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean75 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean76 = cD6.isRented();
        java.lang.String str77 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8827 + "'", int9 == 8827);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8827, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8827, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=1152, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean89 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8834, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8834, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        items.CD cD6 = new items.CD("LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        int int8 = cD6.getItemId();
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8843 + "'", int8 == 8843);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.toString();
        boolean boolean13 = cD6.isRented();
        cD6.setBorrowerEmail("LibraryItem [itemId=1472, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8844, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8844, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8844 + "'", int11 == 8844);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8844, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8844, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        cD6.returnItem();
        java.lang.String str39 = cD6.getTitle();
        cD6.returnItem();
        cD6.setBorrowerEmail("LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str43 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        items.CD cD6 = new items.CD("LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        java.lang.String str8 = cD6.getTitle();
        java.lang.String str9 = cD6.getLocation();
        double double10 = cD6.calculateOverduePenalty();
        java.lang.String str11 = cD6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        java.lang.String str16 = cD6.getItemType();
        java.lang.String str17 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8850, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8850, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str17, "CD: hi! by hi!. Location: LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        double double37 = cD6.calculateOverduePenalty();
        java.lang.String str38 = cD6.getAuthor();
        java.lang.String str39 = cD6.getAuthor();
        java.lang.String str40 = cD6.getLocation();
        java.lang.String str41 = cD6.getPrice();
        java.lang.String str42 = cD6.getLocation();
        boolean boolean43 = cD6.isOverdue();
        cD6.returnItem();
        double double45 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        items.CD cD6 = new items.CD("LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=1168, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str10 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "CD: hi! by hi!. Location: hi!. Purchasable: false", "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        cD6.setIsPurchasable(false);
        java.lang.String str10 = cD6.getPrice();
        java.lang.String str11 = cD6.getArtist();
        java.lang.String str12 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str7, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        int int12 = cD6.getItemId();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.toString();
        java.lang.String str22 = cD19.getBorrowerEmail();
        java.lang.String str23 = cD19.getBorrowerEmail();
        cD19.setIsPurchasable(false);
        java.lang.String str26 = cD19.getArtist();
        int int27 = cD19.getItemId();
        boolean boolean28 = cD19.isRented();
        cD19.returnItem();
        items.CD cD36 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD36.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD45 = new items.CD("", "", false, true, "", "hi!");
        int int46 = cD45.getItemId();
        boolean boolean47 = cD45.isPurchasable();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD45.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD36.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean87 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.Class<?> wildcardClass88 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8863 + "'", int9 == 8863);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8863, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8863, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8863 + "'", int12 == 8863);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=8864, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=8864, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8864 + "'", int27 == 8864);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8866 + "'", int46 == 8866);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { cD53, cD60, cD69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = cD44.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        cD6.returnItem();
        java.lang.String str76 = cD6.getBorrowerEmail();
        java.lang.String str77 = cD6.getDetails();
        java.lang.String str78 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str77, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isPurchasable();
        cD6.setIsPurchasable(true);
        boolean boolean11 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=2196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD20 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str21 = cD20.getLocation();
        java.lang.String str22 = cD20.toString();
        java.lang.String str23 = cD20.getBorrowerEmail();
        java.lang.String str24 = cD20.getArtist();
        java.lang.String str25 = cD20.getPrice();
        cD20.setLocation("LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int28 = cD20.getItemId();
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        boolean boolean38 = cD35.isPurchasable();
        boolean boolean39 = cD35.isOverdue();
        cD35.returnItem();
        items.CD cD47 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str48 = cD47.getLocation();
        java.lang.String str49 = cD47.getLocation();
        int int50 = cD47.getItemId();
        cD47.setBorrowerEmail("CD");
        java.lang.String str53 = cD47.getArtist();
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str77 = cD76.getLocation();
        java.lang.String str78 = cD76.getLocation();
        items.CD cD85 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { cD69, cD76, cD85 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = cD60.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = cD47.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = cD35.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean92 = cD20.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean93 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LibraryItem [itemId=8880, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str22, "LibraryItem [itemId=8880, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8880 + "'", int28 == 8880);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8882 + "'", int50 == 8882);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.toString();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8887, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8887, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=123, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        double double8 = cD6.calculateOverduePenalty();
        java.lang.String str9 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8888, itemType=CD, location=LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8888, itemType=CD, location=LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isOverdue();
        java.lang.String str18 = cD6.getDetails();
        java.lang.String str19 = cD6.getTitle();
        java.lang.String str20 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8889, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8889, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str18, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str20, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getPrice();
        boolean boolean12 = cD6.isOverdue();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8890, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8890, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isRented();
        boolean boolean15 = cD6.isPurchasable();
        java.lang.String str16 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8891 + "'", int11 == 8891);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        cD6.returnItem();
        java.lang.String str39 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(true);
        int int42 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8892 + "'", int42 == 8892);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double17 = cD6.calculateOverduePenalty();
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.toString();
        java.lang.String str27 = cD24.getBorrowerEmail();
        java.lang.String str28 = cD24.getBorrowerEmail();
        java.lang.String str29 = cD24.getBorrowerEmail();
        java.lang.String str30 = cD24.getBorrowerEmail();
        cD24.returnItem();
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str39 = cD38.getLocation();
        java.lang.String str40 = cD38.getLocation();
        boolean boolean41 = cD38.isPurchasable();
        boolean boolean42 = cD38.isOverdue();
        cD38.returnItem();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str51 = cD50.getLocation();
        java.lang.String str52 = cD50.getLocation();
        int int53 = cD50.getItemId();
        cD50.setBorrowerEmail("CD");
        java.lang.String str56 = cD50.getArtist();
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str80 = cD79.getLocation();
        java.lang.String str81 = cD79.getLocation();
        items.CD cD88 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { cD72, cD79, cD88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = cD63.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = cD50.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = cD38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = cD24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean97 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8896, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8896, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LibraryItem [itemId=8897, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str26, "LibraryItem [itemId=8897, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8899 + "'", int53 == 8899);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getPrice();
        boolean boolean39 = cD6.isRented();
        java.lang.String str40 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=2821, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("CD: hi! by hi!. Location: hi!. Purchasable: true");
        java.lang.String str17 = cD6.getAuthor();
        java.lang.String str18 = cD6.getItemType();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8908 + "'", int9 == 8908);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8908, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8908, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=8908, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=8908, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getDetails();
        java.lang.String str13 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8909, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8909, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=8909, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=8909, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        double double8 = cD6.calculateOverduePenalty();
        java.lang.String str9 = cD6.getPrice();
        java.lang.String str10 = cD6.getItemType();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getBorrowerEmail();
        java.lang.String str13 = cD6.getAuthor();
        java.lang.String str14 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD" + "'", str10, "CD");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.toString();
        java.lang.String str20 = cD17.getBorrowerEmail();
        java.lang.String str21 = cD17.getBorrowerEmail();
        items.CD cD28 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str29 = cD28.getLocation();
        java.lang.String str30 = cD28.getLocation();
        items.CD cD37 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray54 = new items.LibraryItem[] { cD37, cD44, cD53 };
        java.util.ArrayList<items.LibraryItem> libraryItemList55 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList55, libraryItemArray54);
        boolean boolean57 = cD28.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList55);
        boolean boolean58 = cD28.isOverdue();
        items.CD cD65 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str66 = cD65.getLocation();
        java.lang.String str67 = cD65.getLocation();
        items.CD cD74 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD81 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str82 = cD81.getLocation();
        java.lang.String str83 = cD81.getLocation();
        items.CD cD90 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray91 = new items.LibraryItem[] { cD74, cD81, cD90 };
        java.util.ArrayList<items.LibraryItem> libraryItemList92 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList92, libraryItemArray91);
        boolean boolean94 = cD65.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean95 = cD28.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean96 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList92);
        boolean boolean97 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList92);
        java.lang.String str98 = cD6.getPrice();
        double double99 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8912 + "'", int9 == 8912);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8912, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8912, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=8913, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=8913, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!" + "'", str98, "hi!");
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        boolean boolean9 = cD6.isRented();
        java.lang.String str10 = cD6.getTitle();
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.getItemType();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8922 + "'", int7 == 8922);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD" + "'", str12, "CD");
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        items.CD cD6 = new items.CD("LibraryItem [itemId=475, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4470, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=7236, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2933, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        cD6.setLocation("LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str19 = cD6.getItemType();
        java.lang.String str20 = cD6.getLocation();
        java.lang.String str21 = cD6.toString();
        boolean boolean22 = cD6.isOverdue();
        java.lang.String str23 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8924, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8924, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD" + "'", str19, "CD");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=8924, itemType=CD, location=LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=8924, itemType=CD, location=LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "LibraryItem [itemId=8924, itemType=CD, location=LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str23, "LibraryItem [itemId=8924, itemType=CD, location=LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        int int9 = cD6.getItemId();
        items.CD cD16 = new items.CD("LibraryItem [itemId=1281, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2249, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=3147, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1069, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD23 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str24 = cD23.getLocation();
        java.lang.String str25 = cD23.getLocation();
        int int26 = cD23.getItemId();
        java.lang.String str27 = cD23.toString();
        java.lang.String str28 = cD23.getTitle();
        java.lang.String str29 = cD23.getAuthor();
        cD23.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str32 = cD23.getTitle();
        java.lang.String str33 = cD23.getLocation();
        items.CD cD40 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str41 = cD40.getBorrowerEmail();
        java.lang.String str42 = cD40.getBorrowerEmail();
        cD40.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD51.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str77 = cD76.getLocation();
        java.lang.String str78 = cD76.getLocation();
        items.CD cD85 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray86 = new items.LibraryItem[] { cD69, cD76, cD85 };
        java.util.ArrayList<items.LibraryItem> libraryItemList87 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList87, libraryItemArray86);
        boolean boolean89 = cD60.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean90 = cD51.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean91 = cD40.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean92 = cD23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean93 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        boolean boolean94 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList87);
        java.lang.String str95 = cD6.getPrice();
        boolean boolean96 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8925, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8925, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8925 + "'", int9 == 8925);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8927 + "'", int26 == 8927);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "LibraryItem [itemId=8927, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str27, "LibraryItem [itemId=8927, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getAuthor();
        cD6.setLocation("LibraryItem [itemId=232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getItemType();
        java.lang.String str13 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8934 + "'", int11 == 8934);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD" + "'", str12, "CD");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str91 = cD6.getAuthor();
        java.lang.String str92 = cD6.getLocation();
        boolean boolean93 = cD6.isOverdue();
        boolean boolean94 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8935, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8935, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str92, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getAuthor();
        java.lang.String str16 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8944, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8944, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        java.lang.String str46 = cD6.getAuthor();
        java.lang.String str47 = cD6.getPrice();
        cD6.setBorrowerEmail("LibraryItem [itemId=4585, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean50 = cD6.isPurchasable();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8945 + "'", int7 == 8945);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        java.lang.String str8 = cD6.getPrice();
        cD6.setIsPurchasable(false);
        cD6.setBorrowerEmail("LibraryItem [itemId=5675, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8950 + "'", int7 == 8950);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getPrice();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean58 = cD6.isRented();
        java.lang.String str59 = cD6.getAuthor();
        int int60 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8955, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8955, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 8955 + "'", int60 == 8955);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=663, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getItemType();
        cD6.setBorrowerEmail("LibraryItem [itemId=3038, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean19 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8961 + "'", int9 == 8961);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=8961, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=8961, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=8961, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=8961, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=123, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("hi!");
        cD6.setIsPurchasable(true);
        boolean boolean11 = cD6.isRented();
        double double12 = cD6.calculateOverduePenalty();
        boolean boolean13 = cD6.isPurchasable();
        boolean boolean14 = cD6.isPurchasable();
        java.lang.String str15 = cD6.toString();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=8962, itemType=CD, location=hi!, purchasable=true, title=LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=8962, itemType=CD, location=hi!, purchasable=true, title=LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        items.CD cD6 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean9 = cD6.isOverdue();
        cD6.returnItem();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate11, 4498, "LibraryItem [itemId=7750, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getArtist();
        java.lang.String str14 = cD6.getAuthor();
        java.lang.String str15 = cD6.getAuthor();
        java.lang.String str16 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8968, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8968, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        double double37 = cD6.calculateOverduePenalty();
        java.lang.String str38 = cD6.getDetails();
        java.lang.String str39 = cD6.getTitle();
        boolean boolean40 = cD6.isPurchasable();
        boolean boolean41 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str38, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        items.CD cD6 = new items.CD("LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getPrice();
        java.lang.String str9 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate14, 2035, "LibraryItem [itemId=5271, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.toString();
        java.lang.String str13 = cD6.getPrice();
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.toString();
        boolean boolean16 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=3620, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double19 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=8977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=8977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=8977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=8977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=8977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=8977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=8977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=8977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getArtist();
        java.lang.String str9 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=8978, itemType=CD, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=8978, itemType=CD, location=, purchasable=true, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.getLocation();
        items.CD cD23 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD30 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str31 = cD30.getLocation();
        java.lang.String str32 = cD30.getLocation();
        items.CD cD39 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray40 = new items.LibraryItem[] { cD23, cD30, cD39 };
        java.util.ArrayList<items.LibraryItem> libraryItemList41 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList41, libraryItemArray40);
        boolean boolean43 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList41);
        boolean boolean44 = cD14.isOverdue();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD67 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str68 = cD67.getLocation();
        java.lang.String str69 = cD67.getLocation();
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { cD60, cD67, cD76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = cD51.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        java.lang.String str83 = cD6.getTitle();
        java.lang.String str84 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=8844, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str84, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getTitle();
        boolean boolean12 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double15 = cD6.calculateOverduePenalty();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8997 + "'", int7 == 8997);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=357, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        int int8 = cD6.getItemId();
        cD6.setLocation("LibraryItem [itemId=1823, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = cD6.getPrice();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8998 + "'", int8 == 8998);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=357, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=357, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=357, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getAuthor();
        boolean boolean17 = cD6.isRented();
        java.lang.String str18 = cD6.getItemType();
        java.lang.String str19 = cD6.getLocation();
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        boolean boolean29 = cD26.isPurchasable();
        boolean boolean30 = cD26.isOverdue();
        double double31 = cD26.calculateOverduePenalty();
        java.lang.String str32 = cD26.getArtist();
        java.lang.String str33 = cD26.getDetails();
        java.lang.String str34 = cD26.getDetails();
        cD26.setBorrowerEmail("");
        items.CD cD43 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str44 = cD43.getBorrowerEmail();
        java.lang.String str45 = cD43.getBorrowerEmail();
        cD43.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD54.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str80 = cD79.getLocation();
        java.lang.String str81 = cD79.getLocation();
        items.CD cD88 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { cD72, cD79, cD88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = cD63.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = cD54.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = cD26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        java.lang.String str97 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9000 + "'", int9 == 9000);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9000, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9000, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9000, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9000, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9000 + "'", int12 == 9000);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str19, "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str33, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str34, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str97, "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getBorrowerEmail();
        java.lang.String str22 = cD6.getDetails();
        java.lang.String str23 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str22, "CD: hi! by hi!. Location: LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        cD6.setLocation("LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str19 = cD6.getItemType();
        java.lang.String str20 = cD6.getDetails();
        java.lang.String str21 = cD6.getPrice();
        java.lang.String str22 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9009, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9009, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD" + "'", str19, "CD");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str20, "CD: hi! by hi!. Location: LibraryItem [itemId=226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        items.CD cD6 = new items.CD("LibraryItem [itemId=238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=123, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=359, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=298, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isOverdue();
        java.lang.Class<?> wildcardClass9 = cD6.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=663, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getItemType();
        cD6.setBorrowerEmail("LibraryItem [itemId=3038, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str19 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9011 + "'", int9 == 9011);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9011, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9011, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9011, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9011, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=4065, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int16 = cD6.getItemId();
        java.lang.String str17 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9022, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9022, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 9022 + "'", int16 == 9022);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
        boolean boolean9 = cD6.isOverdue();
        cD6.returnItem();
        java.lang.String str11 = cD6.getLocation();
        java.lang.Class<?> wildcardClass12 = cD6.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getItemType();
        java.lang.String str13 = cD6.getLocation();
        boolean boolean14 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9024 + "'", int9 == 9024);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9024, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9024, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD" + "'", str12, "CD");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getBorrowerEmail();
        java.lang.String str16 = cD6.getTitle();
        java.lang.String str17 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getLocation();
        cD6.setIsPurchasable(false);
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9026 + "'", int9 == 9026);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9026, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9026, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9026, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9026, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getAuthor();
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        int int25 = cD22.getItemId();
        java.lang.String str26 = cD22.getBorrowerEmail();
        cD22.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str29 = cD22.getItemType();
        items.CD cD36 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str37 = cD36.getLocation();
        java.lang.String str38 = cD36.getLocation();
        items.CD cD45 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray62 = new items.LibraryItem[] { cD45, cD52, cD61 };
        java.util.ArrayList<items.LibraryItem> libraryItemList63 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList63, libraryItemArray62);
        boolean boolean65 = cD36.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList63);
        boolean boolean66 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList63);
        boolean boolean67 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList63);
        int int68 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9027, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9027, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9028 + "'", int25 == 9028);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CD" + "'", str29, "CD");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 9027 + "'", int68 == 9027);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getArtist();
        java.lang.String str9 = cD6.getPrice();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.toString();
        java.lang.String str19 = cD16.getDetails();
        boolean boolean20 = cD16.isRented();
        items.CD cD27 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str28 = cD27.getLocation();
        java.lang.String str29 = cD27.getLocation();
        items.CD cD36 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray53 = new items.LibraryItem[] { cD36, cD43, cD52 };
        java.util.ArrayList<items.LibraryItem> libraryItemList54 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList54, libraryItemArray53);
        boolean boolean56 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList54);
        boolean boolean57 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList54);
        boolean boolean58 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList54);
        java.lang.String str59 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=9034, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=9034, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str19, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str59, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        cD6.setLocation("LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int40 = cD6.getItemId();
        java.lang.String str41 = cD6.toString();
        cD6.setIsPurchasable(true);
        java.lang.String str44 = cD6.getPrice();
        java.lang.Class<?> wildcardClass45 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 9039 + "'", int40 == 9039);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LibraryItem [itemId=9039, itemType=CD, location=LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str41, "LibraryItem [itemId=9039, itemType=CD, location=LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1725, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=425, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=2142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1810, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2747, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=6889, itemType=CD, location=LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2048, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getPrice();
        java.lang.String str14 = cD6.getArtist();
        cD6.setBorrowerEmail("LibraryItem [itemId=3939, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getBorrowerEmail();
        java.lang.String str16 = cD6.getTitle();
        java.lang.String str17 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=9046, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=9046, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        boolean boolean39 = cD6.isPurchasable();
        java.lang.String str40 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 9047 + "'", int37 == 9047);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str16 = cD6.getDetails();
        cD6.setIsPurchasable(true);
        java.time.LocalDate localDate19 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate19, 8531, "LibraryItem [itemId=2476, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        double double8 = cD6.calculateOverduePenalty();
        java.lang.String str9 = cD6.getPrice();
        java.lang.String str10 = cD6.getItemType();
        double double11 = cD6.calculateOverduePenalty();
        boolean boolean12 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD" + "'", str10, "CD");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2972, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1614, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1964, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9053, itemType=CD, location=LibraryItem [itemId=2972, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1964, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9053, itemType=CD, location=LibraryItem [itemId=2972, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=1964, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("LibraryItem [itemId=3540, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getArtist();
        boolean boolean15 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getItemType();
        java.lang.String str8 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=3748, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        int int20 = cD17.getItemId();
        java.lang.String str21 = cD17.getBorrowerEmail();
        cD17.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str24 = cD17.getItemType();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD47 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str48 = cD47.getLocation();
        java.lang.String str49 = cD47.getLocation();
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray57 = new items.LibraryItem[] { cD40, cD47, cD56 };
        java.util.ArrayList<items.LibraryItem> libraryItemList58 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList58, libraryItemArray57);
        boolean boolean60 = cD31.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList58);
        boolean boolean61 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList58);
        boolean boolean62 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList58);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD" + "'", str7, "CD");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 9061 + "'", int20 == 9061);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CD" + "'", str24, "CD");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9066, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9066, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        items.CD cD6 = new items.CD("LibraryItem [itemId=435, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=4604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=3114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1626, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        items.CD cD6 = new items.CD("LibraryItem [itemId=4948, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=435, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=998, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=8209, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        int int36 = cD6.getItemId();
        java.lang.String str37 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 9070 + "'", int36 == 9070);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getLocation();
        java.lang.String str87 = cD6.getLocation();
        double double88 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9074, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9074, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=663, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getItemType();
        cD6.setBorrowerEmail("LibraryItem [itemId=3038, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=7457, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean21 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9083 + "'", int9 == 9083);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9083, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9083, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9083, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9083, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        items.CD cD6 = new items.CD("LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "CD: hi! by hi!. Location: hi!. Purchasable: false", "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        java.lang.String str8 = cD6.getDetails();
        java.lang.String str9 = cD6.getAuthor();
        boolean boolean10 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str7, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD: CD: hi! by hi!. Location: hi!. Purchasable: false by LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "CD: CD: hi! by hi!. Location: hi!. Purchasable: false by LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
        int int8 = cD6.getItemId();
        items.CD cD15 = new items.CD("LibraryItem [itemId=434, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=327, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=94, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.toString();
        java.lang.String str25 = cD22.getBorrowerEmail();
        java.lang.String str26 = cD22.getPrice();
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD33.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD58 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str59 = cD58.getLocation();
        java.lang.String str60 = cD58.getLocation();
        items.CD cD67 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray68 = new items.LibraryItem[] { cD51, cD58, cD67 };
        java.util.ArrayList<items.LibraryItem> libraryItemList69 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList69, libraryItemArray68);
        boolean boolean71 = cD42.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean72 = cD33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean73 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean74 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList69);
        boolean boolean75 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList69);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9085, itemType=CD, location=LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9085, itemType=CD, location=LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 9085 + "'", int8 == 9085);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "LibraryItem [itemId=9087, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str24, "LibraryItem [itemId=9087, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getBorrowerEmail();
        java.lang.String str13 = cD6.getArtist();
        java.lang.String str14 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9093, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9093, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=1723, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        java.lang.Class<?> wildcardClass16 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9094 + "'", int11 == 9094);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isOverdue();
        boolean boolean15 = cD6.isOverdue();
        cD6.returnItem();
        boolean boolean17 = cD6.isRented();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.returnItem();
        java.lang.String str14 = cD6.getArtist();
        java.lang.String str15 = cD6.getLocation();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9096, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9096, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        cD6.returnItem();
        cD6.setIsPurchasable(false);
        boolean boolean90 = cD6.isRented();
        java.lang.String str91 = cD6.getBorrowerEmail();
        java.lang.String str92 = cD6.getItemType();
        int int93 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9097, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9097, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "CD" + "'", str92, "CD");
// flaky:         org.junit.Assert.assertTrue("'" + int93 + "' != '" + 9097 + "'", int93 == 9097);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=3386, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9106, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9106, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getArtist();
        boolean boolean10 = cD6.isPurchasable();
        boolean boolean11 = cD6.isOverdue();
        java.lang.Class<?> wildcardClass12 = cD6.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9115 + "'", int7 == 9115);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getTitle();
        java.lang.String str16 = cD6.getLocation();
        items.CD cD23 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str24 = cD23.getBorrowerEmail();
        java.lang.String str25 = cD23.getBorrowerEmail();
        cD23.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD34 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD34.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        items.CD cD52 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { cD52, cD59, cD68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean73 = cD34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean74 = cD23.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean75 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean76 = cD6.isRented();
        java.lang.String str77 = cD6.toString();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9116 + "'", int9 == 9116);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9116, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9116, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "LibraryItem [itemId=9116, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str77, "LibraryItem [itemId=9116, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        java.lang.String str38 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 9123 + "'", int37 == 9123);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getArtist();
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9127, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9127, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        cD6.setLocation("LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=1362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str50 = cD6.getItemType();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9128 + "'", int7 == 9128);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "CD" + "'", str50, "CD");
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
        boolean boolean9 = cD6.isOverdue();
        boolean boolean10 = cD6.isRented();
        cD6.setBorrowerEmail("LibraryItem [itemId=3746, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        int int12 = cD6.getItemId();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.toString();
        java.lang.String str22 = cD19.getBorrowerEmail();
        java.lang.String str23 = cD19.getBorrowerEmail();
        cD19.setIsPurchasable(false);
        java.lang.String str26 = cD19.getArtist();
        int int27 = cD19.getItemId();
        boolean boolean28 = cD19.isRented();
        cD19.returnItem();
        items.CD cD36 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD36.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD45 = new items.CD("", "", false, true, "", "hi!");
        int int46 = cD45.getItemId();
        boolean boolean47 = cD45.isPurchasable();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD45.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD36.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean87 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str88 = cD6.toString();
        java.lang.String str89 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9134 + "'", int9 == 9134);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9134, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9134, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9134 + "'", int12 == 9134);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=9135, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=9135, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 9135 + "'", int27 == 9135);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 9137 + "'", int46 == 9137);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "LibraryItem [itemId=9134, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str88, "LibraryItem [itemId=9134, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getTitle();
        cD6.returnItem();
        cD6.setBorrowerEmail("LibraryItem [itemId=1496, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9142 + "'", int9 == 9142);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9142, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9142 + "'", int12 == 9142);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getDetails();
        java.lang.String str12 = cD6.getTitle();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9143 + "'", int9 == 9143);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9143, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9143, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        items.CD cD6 = new items.CD("LibraryItem [itemId=4734, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3594, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "CD: hi! by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false", "");
        java.lang.String str7 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD: hi! by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false" + "'", str7, "CD: hi! by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        boolean boolean9 = cD6.isRented();
        boolean boolean10 = cD6.isPurchasable();
        java.lang.String str11 = cD6.getItemType();
        cD6.setIsPurchasable(false);
        boolean boolean14 = cD6.isRented();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9145 + "'", int7 == 9145);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        items.CD cD6 = new items.CD("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD");
        boolean boolean7 = cD6.isPurchasable();
        cD6.returnItem();
        java.lang.String str9 = cD6.toString();
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate10, 1425, "LibraryItem [itemId=2751, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9146, itemType=CD, location=LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9146, itemType=CD, location=LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9147, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9147, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        java.lang.String str12 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        boolean boolean12 = cD6.isOverdue();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { cD53, cD60, cD69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = cD44.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        java.lang.String str75 = cD6.getPrice();
        boolean boolean76 = cD6.isRented();
        cD6.returnItem();
        java.lang.String str78 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "CD" + "'", str78, "CD");
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9158, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9158, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        boolean boolean13 = cD6.isPurchasable();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.toString();
        java.lang.String str16 = cD6.getPrice();
        java.lang.String str17 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=9167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=9167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str17, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getBorrowerEmail();
        java.lang.String str22 = cD6.getDetails();
        java.lang.String str23 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str22, "CD: hi! by hi!. Location: LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "CD" + "'", str23, "CD");
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        java.lang.String str8 = cD6.getArtist();
        java.lang.String str9 = cD6.getLocation();
        java.lang.String str10 = cD6.getAuthor();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        boolean boolean20 = cD17.isPurchasable();
        boolean boolean21 = cD17.isOverdue();
        double double22 = cD17.calculateOverduePenalty();
        java.lang.String str23 = cD17.getArtist();
        java.lang.String str24 = cD17.getDetails();
        java.lang.String str25 = cD17.getDetails();
        java.lang.String str26 = cD17.getArtist();
        java.lang.String str27 = cD17.getTitle();
        items.CD cD34 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double35 = cD34.calculateOverduePenalty();
        java.lang.String str36 = cD34.getBorrowerEmail();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.toString();
        java.lang.String str46 = cD43.getBorrowerEmail();
        java.lang.String str47 = cD43.getPrice();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD54.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str80 = cD79.getLocation();
        java.lang.String str81 = cD79.getLocation();
        items.CD cD88 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { cD72, cD79, cD88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = cD63.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = cD54.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = cD34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean96 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean97 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        java.lang.String str98 = cD6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str24, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str25, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "LibraryItem [itemId=9172, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str45, "LibraryItem [itemId=9172, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "CD: hi! by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false" + "'", str98, "CD: hi! by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        cD6.returnItem();
        java.lang.String str40 = cD6.getArtist();
        java.time.LocalDate localDate41 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate41, 5103, "LibraryItem [itemId=3620, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        boolean boolean15 = cD6.isOverdue();
        java.lang.String str16 = cD6.getLocation();
        java.lang.String str17 = cD6.getPrice();
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.getLocation();
        int int27 = cD24.getItemId();
        java.lang.String str28 = cD24.toString();
        double double29 = cD24.calculateOverduePenalty();
        int int30 = cD24.getItemId();
        java.lang.String str31 = cD24.getAuthor();
        items.CD cD38 = new items.CD("", "", false, true, "", "hi!");
        int int39 = cD38.getItemId();
        boolean boolean40 = cD38.isPurchasable();
        java.lang.String str41 = cD38.getBorrowerEmail();
        java.lang.String str42 = cD38.getArtist();
        java.lang.String str43 = cD38.getTitle();
        boolean boolean44 = cD38.isPurchasable();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.toString();
        java.lang.String str54 = cD51.getDetails();
        boolean boolean55 = cD51.isRented();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str79 = cD78.getLocation();
        java.lang.String str80 = cD78.getLocation();
        items.CD cD87 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { cD71, cD78, cD87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = cD62.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = cD51.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = cD38.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = cD24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean95 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9182 + "'", int14 == 9182);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 9183 + "'", int27 == 9183);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LibraryItem [itemId=9183, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str28, "LibraryItem [itemId=9183, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 9183 + "'", int30 == 9183);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 9184 + "'", int39 == 9184);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=9185, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=9185, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str54, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        boolean boolean39 = cD6.isRented();
        java.lang.String str40 = cD6.getDetails();
        cD6.setLocation("LibraryItem [itemId=1718, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        boolean boolean45 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str40, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
        int int8 = cD6.getItemId();
        java.lang.String str9 = cD6.getDetails();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9194, itemType=CD, location=LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9194, itemType=CD, location=LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 9194 + "'", int8 == 9194);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str9, "CD: LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getPrice();
        java.lang.String str51 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=1463, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double54 = cD6.calculateOverduePenalty();
        boolean boolean55 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9195 + "'", int9 == 9195);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        java.lang.String str58 = cD6.getAuthor();
        boolean boolean59 = cD6.isPurchasable();
        java.lang.String str60 = cD6.getItemType();
        java.lang.String str61 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "CD" + "'", str60, "CD");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CD:  by hi!. Location: LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str61, "CD:  by hi!. Location: LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD6.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double9 = cD6.calculateOverduePenalty();
        cD6.setIsPurchasable(true);
        boolean boolean12 = cD6.isPurchasable();
        int int13 = cD6.getItemId();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9206 + "'", int13 == 9206);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        java.lang.String str8 = cD6.getBorrowerEmail();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.toString();
        java.lang.String str18 = cD15.getBorrowerEmail();
        java.lang.String str19 = cD15.getPrice();
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD26.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray61 = new items.LibraryItem[] { cD44, cD51, cD60 };
        java.util.ArrayList<items.LibraryItem> libraryItemList62 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList62, libraryItemArray61);
        boolean boolean64 = cD35.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean65 = cD26.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean66 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList62);
        boolean boolean67 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList62);
        int int68 = cD6.getItemId();
        double double69 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=9208, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=9208, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 9207 + "'", int68 == 9207);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        items.CD cD6 = new items.CD("CD", "LibraryItem [itemId=1232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        items.CD cD13 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str14 = cD13.getLocation();
        java.lang.String str15 = cD13.getLocation();
        items.CD cD22 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD29 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str30 = cD29.getLocation();
        java.lang.String str31 = cD29.getLocation();
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray39 = new items.LibraryItem[] { cD22, cD29, cD38 };
        java.util.ArrayList<items.LibraryItem> libraryItemList40 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList40, libraryItemArray39);
        boolean boolean42 = cD13.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList40);
        boolean boolean43 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList40);
        java.lang.String str44 = cD6.getBorrowerEmail();
        java.lang.String str45 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getTitle();
        java.lang.Class<?> wildcardClass13 = cD6.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9219 + "'", int7 == 9219);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getAuthor();
        boolean boolean17 = cD6.isRented();
        java.lang.String str18 = cD6.getPrice();
        boolean boolean19 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9220 + "'", int9 == 9220);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9220, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9220, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9220, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9220, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9220 + "'", int12 == 9220);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getPrice();
        double double18 = cD6.calculateOverduePenalty();
        cD6.setIsPurchasable(false);
        java.lang.String str21 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=1946, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9221 + "'", int14 == 9221);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        boolean boolean18 = cD6.isRented();
        boolean boolean19 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=333, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getAuthor();
        java.lang.String str18 = cD6.getItemType();
        java.lang.String str19 = cD6.getAuthor();
        java.lang.String str20 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9223, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9223, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD" + "'", str18, "CD");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getArtist();
        java.lang.String str16 = cD6.getTitle();
        items.CD cD23 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double24 = cD23.calculateOverduePenalty();
        java.lang.String str25 = cD23.getBorrowerEmail();
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.toString();
        java.lang.String str35 = cD32.getBorrowerEmail();
        java.lang.String str36 = cD32.getPrice();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD43.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD32.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = cD23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean86 = cD6.isOverdue();
        java.lang.String str87 = cD6.getTitle();
        java.lang.String str88 = cD6.getLocation();
        java.lang.String str89 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LibraryItem [itemId=9226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str34, "LibraryItem [itemId=9226, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        items.CD cD6 = new items.CD("LibraryItem [itemId=817, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=359, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1964, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str10 = cD6.getDetails();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1964, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str10, "CD: LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1964, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        double double13 = cD6.calculateOverduePenalty();
        java.lang.String str14 = cD6.getTitle();
        boolean boolean15 = cD6.isPurchasable();
        java.lang.String str16 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9233, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9233, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2139, itemType=CD, location=LibraryItem [itemId=546, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=978, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=929, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD13 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str14 = cD13.getLocation();
        java.lang.String str15 = cD13.getLocation();
        boolean boolean16 = cD13.isPurchasable();
        boolean boolean17 = cD13.isOverdue();
        cD13.returnItem();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        int int28 = cD25.getItemId();
        cD25.setBorrowerEmail("CD");
        java.lang.String str31 = cD25.getArtist();
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str39 = cD38.getLocation();
        java.lang.String str40 = cD38.getLocation();
        items.CD cD47 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray64 = new items.LibraryItem[] { cD47, cD54, cD63 };
        java.util.ArrayList<items.LibraryItem> libraryItemList65 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList65, libraryItemArray64);
        boolean boolean67 = cD38.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList65);
        boolean boolean68 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList65);
        boolean boolean69 = cD13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList65);
        boolean boolean70 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList65);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 9236 + "'", int28 == 9236);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=1152, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str89 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9241, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9241, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
        cD6.setIsPurchasable(false);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9254, itemType=CD, location=LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9254, itemType=CD, location=LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        java.lang.String str8 = cD6.getPrice();
        cD6.setIsPurchasable(false);
        boolean boolean11 = cD6.isPurchasable();
        boolean boolean12 = cD6.isOverdue();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9255 + "'", int7 == 9255);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1816, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1343, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD: hi! by hi!. Location: hi!. Purchasable: false");
        boolean boolean7 = cD6.isPurchasable();
        java.util.List<items.LibraryItem> libraryItemList8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = cD6.hasBorrowingPrivileges(libraryItemList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        items.CD cD6 = new items.CD("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD13 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD13.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str39 = cD38.getLocation();
        java.lang.String str40 = cD38.getLocation();
        items.CD cD47 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray48 = new items.LibraryItem[] { cD31, cD38, cD47 };
        java.util.ArrayList<items.LibraryItem> libraryItemList49 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList49, libraryItemArray48);
        boolean boolean51 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList49);
        boolean boolean52 = cD22.isOverdue();
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str76 = cD75.getLocation();
        java.lang.String str77 = cD75.getLocation();
        items.CD cD84 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { cD68, cD75, cD84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = cD59.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = cD13.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        int int92 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int92 + "' != '" + 9257 + "'", int92 == 9257);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getAuthor();
        java.lang.String str8 = cD6.getTitle();
        int int9 = cD6.getItemId();
        items.CD cD16 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str17 = cD16.toString();
        items.CD cD24 = new items.CD("LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD24.setIsPurchasable(true);
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        boolean boolean36 = cD33.isPurchasable();
        boolean boolean37 = cD33.isOverdue();
        cD33.returnItem();
        items.CD cD45 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str46 = cD45.getLocation();
        java.lang.String str47 = cD45.getLocation();
        int int48 = cD45.getItemId();
        cD45.setBorrowerEmail("CD");
        java.lang.String str51 = cD45.getArtist();
        items.CD cD58 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str59 = cD58.getLocation();
        java.lang.String str60 = cD58.getLocation();
        items.CD cD67 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD74 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str75 = cD74.getLocation();
        java.lang.String str76 = cD74.getLocation();
        items.CD cD83 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { cD67, cD74, cD83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = cD58.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = cD45.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = cD33.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = cD24.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean92 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        cD6.setIsPurchasable(true);
        boolean boolean95 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9267 + "'", int9 == 9267);
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=9268, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=9268, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 9271 + "'", int48 == 9271);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        cD6.setBorrowerEmail("");
        java.lang.String str17 = cD6.getPrice();
        cD6.setBorrowerEmail("CD: LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getAuthor();
        int int15 = cD6.getItemId();
        java.lang.String str16 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9277 + "'", int15 == 9277);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.toString();
        java.lang.String str13 = cD6.getPrice();
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.toString();
        boolean boolean16 = cD6.isOverdue();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9278, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9278, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9278, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9278, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9278, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9278, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=9278, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=9278, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        java.lang.String str58 = cD6.getAuthor();
        boolean boolean59 = cD6.isPurchasable();
        java.lang.String str60 = cD6.getItemType();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "CD" + "'", str60, "CD");
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getAuthor();
        java.lang.String str8 = cD6.getDetails();
        java.lang.String str9 = cD6.getLocation();
        int int10 = cD6.getItemId();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate11, 7626, "LibraryItem [itemId=611, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9289 + "'", int10 == 9289);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getDetails();
        java.lang.Class<?> wildcardClass10 = cD6.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: hi!. Purchasable: false");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { cD53, cD60, cD69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = cD44.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        java.lang.String str75 = cD6.getPrice();
        java.lang.String str76 = cD6.getItemType();
        java.lang.String str77 = cD6.getTitle();
        double double78 = cD6.calculateOverduePenalty();
        java.lang.String str79 = cD6.getPrice();
        boolean boolean80 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "CD" + "'", str76, "CD");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        java.lang.String str8 = cD6.toString();
        int int9 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9299, itemType=CD, location=LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9299, itemType=CD, location=LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9299 + "'", int9 == 9299);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getAuthor();
        java.lang.String str10 = cD6.toString();
        boolean boolean11 = cD6.isPurchasable();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9300 + "'", int7 == 9300);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9300, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9300, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        cD6.setBorrowerEmail("LibraryItem [itemId=440, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9301 + "'", int9 == 9301);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        int int18 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 9302 + "'", int18 == 9302);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=663, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        java.lang.String str17 = cD6.getArtist();
        java.lang.String str18 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9303 + "'", int9 == 9303);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9303, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9303, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9303, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9303, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getTitle();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isOverdue();
        cD6.setIsPurchasable(true);
        items.CD cD23 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str24 = cD23.getLocation();
        java.lang.String str25 = cD23.toString();
        java.lang.String str26 = cD23.getBorrowerEmail();
        java.lang.String str27 = cD23.getPrice();
        items.CD cD34 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD34.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str44 = cD43.getLocation();
        java.lang.String str45 = cD43.getLocation();
        items.CD cD52 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray69 = new items.LibraryItem[] { cD52, cD59, cD68 };
        java.util.ArrayList<items.LibraryItem> libraryItemList70 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList70, libraryItemArray69);
        boolean boolean72 = cD43.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean73 = cD34.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean74 = cD23.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList70);
        boolean boolean75 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList70);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9304, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9304, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "LibraryItem [itemId=9305, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str25, "LibraryItem [itemId=9305, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD15.isOverdue();
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        java.lang.String str84 = cD6.getPrice();
        boolean boolean85 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str84, "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        cD6.setLocation("LibraryItem [itemId=4290, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getTitle();
        int int14 = cD6.getItemId();
        java.lang.String str15 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9324 + "'", int14 == 9324);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=9324, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=9324, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        java.lang.String str8 = cD6.getPrice();
        boolean boolean9 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=4068, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        java.lang.String str8 = cD6.getDetails();
        java.lang.String str9 = cD6.getItemType();
        java.lang.String str10 = cD6.getAuthor();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD: LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str8, "CD: LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD" + "'", str9, "CD");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean91 = cD6.isOverdue();
        java.lang.String str92 = cD6.getDetails();
        boolean boolean93 = cD6.isRented();
        boolean boolean94 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9328, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9328, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "CD: hi! by hi!. Location: LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str92, "CD: hi! by hi!. Location: LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getLocation();
        cD6.returnItem();
        java.lang.String str13 = cD6.toString();
        cD6.returnItem();
        java.lang.String str15 = cD6.getTitle();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9337, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9337, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9337, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9337, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.setLocation("CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        java.lang.String str17 = cD6.getArtist();
        java.lang.String str18 = cD6.getTitle();
        boolean boolean19 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9339, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9339, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        cD6.setBorrowerEmail("LibraryItem [itemId=658, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str15 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9344, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9344, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=3558, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9345 + "'", int9 == 9345);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9345, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9345, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        int int37 = cD6.getItemId();
        cD6.returnItem();
        java.lang.String str39 = cD6.getItemType();
        java.lang.String str40 = cD6.getDetails();
        cD6.setLocation("LibraryItem [itemId=6977, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 9346 + "'", int37 == 9346);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CD" + "'", str39, "CD");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str40, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean58 = cD6.isRented();
        java.lang.String str59 = cD6.getItemType();
        cD6.setIsPurchasable(false);
        double double62 = cD6.calculateOverduePenalty();
        java.time.LocalDate localDate63 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate63, 7058, "LibraryItem [itemId=7397, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "CD" + "'", str59, "CD");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        java.lang.String str36 = cD6.getDetails();
        java.lang.String str37 = cD6.toString();
        java.lang.String str38 = cD6.getDetails();
        boolean boolean39 = cD6.isPurchasable();
        java.lang.String str40 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str36, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LibraryItem [itemId=9356, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str37, "LibraryItem [itemId=9356, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str38, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD" + "'", str40, "CD");
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        double double37 = cD6.calculateOverduePenalty();
        java.lang.String str38 = cD6.getDetails();
        java.lang.String str39 = cD6.getTitle();
        java.lang.String str40 = cD6.getTitle();
        java.lang.String str41 = cD6.toString();
        double double42 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str38, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LibraryItem [itemId=9360, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str41, "LibraryItem [itemId=9360, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getLocation();
        cD6.setIsPurchasable(false);
        java.lang.String str17 = cD6.getPrice();
        java.lang.String str18 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9364 + "'", int9 == 9364);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9364, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str18, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getItemType();
        cD6.returnItem();
        cD6.setBorrowerEmail("LibraryItem [itemId=3461, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9365 + "'", int9 == 9365);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9365, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9365, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9365 + "'", int12 == 9365);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        boolean boolean10 = cD6.isRented();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean48 = cD6.isRented();
        boolean boolean49 = cD6.isOverdue();
        double double50 = cD6.calculateOverduePenalty();
        java.lang.String str51 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9366, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9366, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getTitle();
        cD6.returnItem();
        cD6.returnItem();
        java.lang.Class<?> wildcardClass16 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9371 + "'", int9 == 9371);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9371, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9371, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9371, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9371, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9371 + "'", int12 == 9371);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        boolean boolean38 = cD6.isOverdue();
        java.lang.String str39 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        items.CD cD6 = new items.CD("CD", "LibraryItem [itemId=1232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        boolean boolean7 = cD6.isPurchasable();
        java.lang.String str8 = cD6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        int int15 = cD6.getItemId();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9377 + "'", int15 == 9377);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.getAuthor();
        java.time.LocalDate localDate10 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate10, 8382, "LibraryItem [itemId=5960, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        java.lang.String str37 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        cD6.returnItem();
        boolean boolean43 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getArtist();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str14 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9383 + "'", int9 == 9383);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9383, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9383, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str12, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str16 = cD6.getDetails();
        cD6.setIsPurchasable(true);
        java.lang.String str19 = cD6.getAuthor();
        java.lang.String str20 = cD6.getAuthor();
        java.lang.String str21 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getLocation();
        java.lang.String str40 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=4939, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getLocation();
        boolean boolean22 = cD6.isRented();
        items.CD cD29 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str30 = cD29.getLocation();
        java.lang.String str31 = cD29.getLocation();
        int int32 = cD29.getItemId();
        java.lang.String str33 = cD29.getBorrowerEmail();
        java.lang.String str34 = cD29.getBorrowerEmail();
        java.lang.String str35 = cD29.getAuthor();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.toString();
        java.lang.String str45 = cD42.getDetails();
        boolean boolean46 = cD42.isRented();
        items.CD cD53 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str54 = cD53.getLocation();
        java.lang.String str55 = cD53.getLocation();
        items.CD cD62 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str70 = cD69.getLocation();
        java.lang.String str71 = cD69.getLocation();
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray79 = new items.LibraryItem[] { cD62, cD69, cD78 };
        java.util.ArrayList<items.LibraryItem> libraryItemList80 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList80, libraryItemArray79);
        boolean boolean82 = cD53.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean83 = cD42.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean84 = cD29.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList80);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=1532, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 9390 + "'", int32 == 9390);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "LibraryItem [itemId=9391, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str44, "LibraryItem [itemId=9391, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str45, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        int int12 = cD6.getItemId();
        double double13 = cD6.calculateOverduePenalty();
        java.lang.String str14 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=8131, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9396 + "'", int9 == 9396);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9396 + "'", int12 == 9396);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD" + "'", str17, "CD");
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getAuthor();
        java.lang.String str10 = cD6.getBorrowerEmail();
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.getDetails();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9397 + "'", int7 == 9397);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD:  by hi!. Location: . Purchasable: false" + "'", str12, "CD:  by hi!. Location: . Purchasable: false");
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getLocation();
        java.lang.String str10 = cD6.getDetails();
        cD6.setIsPurchasable(true);
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str10, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=5913, itemType=CD, location=LibraryItem [itemId=516, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=238, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD", "LibraryItem [itemId=663, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        boolean boolean89 = cD6.isOverdue();
        cD6.setLocation("LibraryItem [itemId=1892, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.Class<?> wildcardClass92 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9401, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9401, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        int int12 = cD6.getItemId();
        double double13 = cD6.calculateOverduePenalty();
        boolean boolean14 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9410 + "'", int9 == 9410);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9410, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9410, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9410 + "'", int12 == 9410);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        java.lang.String str8 = cD6.getItemType();
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.toString();
        boolean boolean18 = cD15.isOverdue();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        items.CD cD34 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray51 = new items.LibraryItem[] { cD34, cD41, cD50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList52 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList52, libraryItemArray51);
        boolean boolean54 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList52);
        boolean boolean55 = cD25.isOverdue();
        java.lang.String str56 = cD25.getLocation();
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str64 = cD63.getLocation();
        java.lang.String str65 = cD63.getLocation();
        items.CD cD72 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str80 = cD79.getLocation();
        java.lang.String str81 = cD79.getLocation();
        items.CD cD88 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray89 = new items.LibraryItem[] { cD72, cD79, cD88 };
        java.util.ArrayList<items.LibraryItem> libraryItemList90 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList90, libraryItemArray89);
        boolean boolean92 = cD63.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean93 = cD25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean94 = cD15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList90);
        boolean boolean95 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList90);
        java.lang.String str96 = cD6.getPrice();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9411 + "'", int7 == 9411);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=9412, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=9412, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!" + "'", str96, "hi!");
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        cD6.setIsPurchasable(false);
        int int39 = cD6.getItemId();
        int int40 = cD6.getItemId();
        java.lang.String str41 = cD6.toString();
        java.lang.String str42 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 9421 + "'", int39 == 9421);
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 9421 + "'", int40 == 9421);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LibraryItem [itemId=9421, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str41, "LibraryItem [itemId=9421, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        java.lang.String str9 = cD6.getDetails();
        java.lang.String str10 = cD6.getAuthor();
        java.lang.String str11 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str11, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getAuthor();
        java.lang.String str51 = cD6.toString();
        java.lang.String str52 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9426 + "'", int9 == 9426);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "LibraryItem [itemId=9426, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str51, "LibraryItem [itemId=9426, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CD" + "'", str52, "CD");
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isOverdue();
        boolean boolean15 = cD6.isOverdue();
        cD6.returnItem();
        cD6.setLocation("LibraryItem [itemId=2167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1090, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1946, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "", "");
        java.lang.String str7 = cD6.getTitle();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        boolean boolean13 = cD6.isOverdue();
        java.lang.String str14 = cD6.getPrice();
        cD6.setLocation("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9433 + "'", int9 == 9433);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=1153, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean11 = cD6.isPurchasable();
        java.lang.String str12 = cD6.getLocation();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9434 + "'", int7 == 9434);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=1153, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=1153, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        boolean boolean89 = cD6.isOverdue();
        java.lang.String str90 = cD6.getArtist();
        cD6.setIsPurchasable(true);
        double double93 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9435, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9435, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        items.CD cD6 = new items.CD("LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=862, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=4068, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3420, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getBorrowerEmail();
        java.lang.String str9 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=362, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD" + "'", str9, "CD");
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        cD6.returnItem();
        java.lang.String str87 = cD6.getArtist();
        java.lang.String str88 = cD6.getBorrowerEmail();
        java.lang.String str89 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9445, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9445, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        cD6.setLocation("LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("LibraryItem [itemId=3540, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getArtist();
        java.time.LocalDate localDate15 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate15, 2892, "LibraryItem [itemId=577, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        items.CD cD6 = new items.CD("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=53, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        java.lang.String str10 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9455, itemType=CD, location=LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9455, itemType=CD, location=LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str9, "CD: LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.toString();
        boolean boolean13 = cD6.isRented();
        cD6.setBorrowerEmail("LibraryItem [itemId=1472, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean16 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9456, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9456, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9456 + "'", int11 == 9456);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9456, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9456, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getArtist();
        java.lang.String str16 = cD6.getTitle();
        items.CD cD23 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double24 = cD23.calculateOverduePenalty();
        java.lang.String str25 = cD23.getBorrowerEmail();
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.toString();
        java.lang.String str35 = cD32.getBorrowerEmail();
        java.lang.String str36 = cD32.getPrice();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD43.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD32.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = cD23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean86 = cD6.isOverdue();
        java.lang.String str87 = cD6.getTitle();
        java.lang.String str88 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LibraryItem [itemId=9459, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str34, "LibraryItem [itemId=9459, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=95, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=5596, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double16 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9465 + "'", int9 == 9465);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9465, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9465, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.toString();
        java.lang.String str8 = cD6.getArtist();
        java.lang.String str9 = cD6.getArtist();
        java.lang.String str10 = cD6.getLocation();
        java.lang.String str11 = cD6.getItemType();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9466, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9466, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        boolean boolean10 = cD6.isRented();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean48 = cD6.isRented();
        boolean boolean49 = cD6.isOverdue();
        java.lang.String str50 = cD6.getDetails();
        java.lang.String str51 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9467, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9467, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str50, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        java.lang.String str14 = cD6.getBorrowerEmail();
        java.lang.String str15 = cD6.getTitle();
        java.lang.String str16 = cD6.getArtist();
        items.CD cD23 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str24 = cD23.getLocation();
        java.lang.String str25 = cD23.toString();
        java.lang.String str26 = cD23.getBorrowerEmail();
        java.lang.String str27 = cD23.getBorrowerEmail();
        cD23.setIsPurchasable(false);
        java.lang.String str30 = cD23.getArtist();
        int int31 = cD23.getItemId();
        boolean boolean32 = cD23.isRented();
        cD23.returnItem();
        items.CD cD40 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD40.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD49 = new items.CD("", "", false, true, "", "hi!");
        int int50 = cD49.getItemId();
        boolean boolean51 = cD49.isPurchasable();
        items.CD cD58 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str59 = cD58.getLocation();
        java.lang.String str60 = cD58.getLocation();
        items.CD cD67 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD74 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str75 = cD74.getLocation();
        java.lang.String str76 = cD74.getLocation();
        items.CD cD83 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray84 = new items.LibraryItem[] { cD67, cD74, cD83 };
        java.util.ArrayList<items.LibraryItem> libraryItemList85 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList85, libraryItemArray84);
        boolean boolean87 = cD58.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean88 = cD49.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean89 = cD40.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean90 = cD23.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        boolean boolean91 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList85);
        java.lang.String str92 = cD6.getArtist();
        java.lang.String str93 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9472 + "'", int9 == 9472);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9472, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9472, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9472, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9472, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9472 + "'", int12 == 9472);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "LibraryItem [itemId=9473, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str25, "LibraryItem [itemId=9473, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 9473 + "'", int31 == 9473);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 9475 + "'", int50 == 9475);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setIsPurchasable(false);
        java.lang.String str18 = cD6.toString();
        java.lang.Class<?> wildcardClass19 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=9480, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=9480, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.getLocation();
        items.CD cD23 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD30 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str31 = cD30.getLocation();
        java.lang.String str32 = cD30.getLocation();
        items.CD cD39 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray40 = new items.LibraryItem[] { cD23, cD30, cD39 };
        java.util.ArrayList<items.LibraryItem> libraryItemList41 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList41, libraryItemArray40);
        boolean boolean43 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList41);
        boolean boolean44 = cD14.isOverdue();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str52 = cD51.getLocation();
        java.lang.String str53 = cD51.getLocation();
        items.CD cD60 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD67 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str68 = cD67.getLocation();
        java.lang.String str69 = cD67.getLocation();
        items.CD cD76 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray77 = new items.LibraryItem[] { cD60, cD67, cD76 };
        java.util.ArrayList<items.LibraryItem> libraryItemList78 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList78, libraryItemArray77);
        boolean boolean80 = cD51.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean81 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList78);
        boolean boolean82 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList78);
        cD6.returnItem();
        java.lang.String str84 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str84, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isRented();
        java.lang.String str11 = cD6.toString();
        java.lang.String str12 = cD6.getTitle();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isOverdue();
        cD6.setIsPurchasable(true);
        java.lang.String str17 = cD6.getArtist();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9490, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9490, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getPrice();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean58 = cD6.isRented();
        java.lang.String str59 = cD6.getAuthor();
        java.lang.String str60 = cD6.getTitle();
        boolean boolean61 = cD6.isOverdue();
        java.lang.Class<?> wildcardClass62 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9491, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9491, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        items.CD cD6 = new items.CD("LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=544, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=404, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.toString();
        boolean boolean8 = cD6.isRented();
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9497, itemType=CD, location=LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9497, itemType=CD, location=LibraryItem [itemId=576, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=604, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        boolean boolean18 = cD15.isPurchasable();
        boolean boolean19 = cD15.isOverdue();
        cD15.returnItem();
        items.CD cD27 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str28 = cD27.getLocation();
        java.lang.String str29 = cD27.getLocation();
        int int30 = cD27.getItemId();
        cD27.setBorrowerEmail("CD");
        java.lang.String str33 = cD27.getArtist();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str41 = cD40.getLocation();
        java.lang.String str42 = cD40.getLocation();
        items.CD cD49 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD56 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str57 = cD56.getLocation();
        java.lang.String str58 = cD56.getLocation();
        items.CD cD65 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray66 = new items.LibraryItem[] { cD49, cD56, cD65 };
        java.util.ArrayList<items.LibraryItem> libraryItemList67 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList67, libraryItemArray66);
        boolean boolean69 = cD40.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean70 = cD27.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean71 = cD15.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList67);
        boolean boolean72 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList67);
        java.lang.String str73 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 9500 + "'", int30 == 9500);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str73, "LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getItemType();
        cD6.setBorrowerEmail("LibraryItem [itemId=1200, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9505 + "'", int9 == 9505);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9505, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9505, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9505 + "'", int12 == 9505);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=1200, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=1200, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        items.CD cD6 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean9 = cD6.isOverdue();
        cD6.returnItem();
        java.lang.String str11 = cD6.getArtist();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.toString();
        cD6.setIsPurchasable(true);
        cD6.setIsPurchasable(false);
        java.lang.String str18 = cD6.getTitle();
        java.lang.String str19 = cD6.getTitle();
        int int20 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9507, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9507, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 9507 + "'", int20 == 9507);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setIsPurchasable(false);
        java.lang.String str18 = cD6.getLocation();
        cD6.setBorrowerEmail("LibraryItem [itemId=6184, itemType=CD, location=LibraryItem [itemId=368, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=4754, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isPurchasable();
        cD6.setIsPurchasable(false);
        boolean boolean39 = cD6.isPurchasable();
        boolean boolean40 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=6204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean17 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str20 = cD6.getBorrowerEmail();
        java.lang.String str21 = cD6.getLocation();
        boolean boolean22 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9513, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9513, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LibraryItem [itemId=582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str20, "LibraryItem [itemId=582, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=770, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=1723, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("");
        boolean boolean16 = cD6.isOverdue();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9514 + "'", int11 == 9514);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str45 = cD44.getLocation();
        java.lang.String str46 = cD44.getLocation();
        items.CD cD53 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD60 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str61 = cD60.getLocation();
        java.lang.String str62 = cD60.getLocation();
        items.CD cD69 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray70 = new items.LibraryItem[] { cD53, cD60, cD69 };
        java.util.ArrayList<items.LibraryItem> libraryItemList71 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList71, libraryItemArray70);
        boolean boolean73 = cD44.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList71);
        boolean boolean74 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList71);
        java.lang.String str75 = cD6.getPrice();
        boolean boolean76 = cD6.isRented();
        cD6.setBorrowerEmail("");
        java.lang.String str79 = cD6.getTitle();
        java.lang.String str80 = cD6.getDetails();
        boolean boolean81 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str80, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getPrice();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9523, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9523, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getAuthor();
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        int int25 = cD22.getItemId();
        java.lang.String str26 = cD22.getBorrowerEmail();
        cD22.setBorrowerEmail("LibraryItem [itemId=167, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str29 = cD22.getItemType();
        items.CD cD36 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str37 = cD36.getLocation();
        java.lang.String str38 = cD36.getLocation();
        items.CD cD45 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray62 = new items.LibraryItem[] { cD45, cD52, cD61 };
        java.util.ArrayList<items.LibraryItem> libraryItemList63 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList63, libraryItemArray62);
        boolean boolean65 = cD36.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList63);
        boolean boolean66 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList63);
        boolean boolean67 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList63);
        double double68 = cD6.calculateOverduePenalty();
        java.lang.String str69 = cD6.toString();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9524, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9524, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9525 + "'", int25 == 9525);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CD" + "'", str29, "CD");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "LibraryItem [itemId=9524, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str69, "LibraryItem [itemId=9524, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        boolean boolean89 = cD6.isOverdue();
        java.lang.String str90 = cD6.getPrice();
        int int91 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9530, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9530, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int91 + "' != '" + 9530 + "'", int91 == 9530);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=663, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getItemType();
        items.CD cD23 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str24 = cD23.getLocation();
        java.lang.String str25 = cD23.getLocation();
        int int26 = cD23.getItemId();
        java.lang.String str27 = cD23.toString();
        java.lang.String str28 = cD23.toString();
        int int29 = cD23.getItemId();
        java.lang.String str30 = cD23.getPrice();
        cD23.returnItem();
        java.lang.String str32 = cD23.getPrice();
        java.lang.String str33 = cD23.getAuthor();
        java.lang.String str34 = cD23.getArtist();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        boolean boolean44 = cD41.isPurchasable();
        boolean boolean45 = cD41.isOverdue();
        cD41.returnItem();
        items.CD cD53 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str54 = cD53.getLocation();
        java.lang.String str55 = cD53.getLocation();
        int int56 = cD53.getItemId();
        cD53.setBorrowerEmail("CD");
        java.lang.String str59 = cD53.getArtist();
        items.CD cD66 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str67 = cD66.getLocation();
        java.lang.String str68 = cD66.getLocation();
        items.CD cD75 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD82 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str83 = cD82.getLocation();
        java.lang.String str84 = cD82.getLocation();
        items.CD cD91 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray92 = new items.LibraryItem[] { cD75, cD82, cD91 };
        java.util.ArrayList<items.LibraryItem> libraryItemList93 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList93, libraryItemArray92);
        boolean boolean95 = cD66.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean96 = cD53.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean97 = cD41.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean98 = cD23.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        boolean boolean99 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList93);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9539 + "'", int9 == 9539);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9539, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9539, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9539, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9539, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 9540 + "'", int26 == 9540);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "LibraryItem [itemId=9540, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str27, "LibraryItem [itemId=9540, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LibraryItem [itemId=9540, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str28, "LibraryItem [itemId=9540, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 9540 + "'", int29 == 9540);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 9542 + "'", int56 == 9542);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        boolean boolean89 = cD6.isOverdue();
        boolean boolean90 = cD6.isPurchasable();
        cD6.returnItem();
        boolean boolean92 = cD6.isOverdue();
        java.lang.String str93 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9547, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9547, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getDetails();
        cD6.returnItem();
        java.lang.String str11 = cD6.getArtist();
        java.lang.String str12 = cD6.getAuthor();
        java.lang.String str13 = cD6.getDetails();
        cD6.setBorrowerEmail("LibraryItem [itemId=3056, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD22 = new items.CD("LibraryItem [itemId=1754, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1059, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1031, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=506, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int23 = cD22.getItemId();
        items.CD cD30 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str31 = cD30.getLocation();
        java.lang.String str32 = cD30.toString();
        java.lang.String str33 = cD30.getBorrowerEmail();
        java.lang.String str34 = cD30.getBorrowerEmail();
        cD30.setIsPurchasable(false);
        cD30.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD30.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD30.returnItem();
        boolean boolean42 = cD30.isPurchasable();
        items.CD cD49 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str50 = cD49.getLocation();
        java.lang.String str51 = cD49.getLocation();
        items.CD cD58 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD65 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str66 = cD65.getLocation();
        java.lang.String str67 = cD65.getLocation();
        items.CD cD74 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray75 = new items.LibraryItem[] { cD58, cD65, cD74 };
        java.util.ArrayList<items.LibraryItem> libraryItemList76 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList76, libraryItemArray75);
        boolean boolean78 = cD49.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean79 = cD30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean80 = cD22.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList76);
        boolean boolean81 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList76);
        java.lang.String str82 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9556, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9556, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 9557 + "'", int23 == 9557);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "LibraryItem [itemId=9558, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str32, "LibraryItem [itemId=9558, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getLocation();
        cD6.setBorrowerEmail("CD:  by hi!. Location: . Purchasable: false");
        java.lang.String str15 = cD6.getLocation();
        java.lang.String str16 = cD6.getAuthor();
        java.lang.String str17 = cD6.getAuthor();
        items.CD cD24 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str25 = cD24.getLocation();
        java.lang.String str26 = cD24.toString();
        java.lang.String str27 = cD24.getBorrowerEmail();
        java.lang.String str28 = cD24.getArtist();
        java.lang.String str29 = cD24.getPrice();
        cD24.setLocation("LibraryItem [itemId=201, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD38 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str39 = cD38.getDetails();
        java.lang.String str40 = cD38.getArtist();
        java.lang.String str41 = cD38.getPrice();
        items.CD cD48 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str49 = cD48.getLocation();
        java.lang.String str50 = cD48.toString();
        java.lang.String str51 = cD48.getDetails();
        boolean boolean52 = cD48.isRented();
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str76 = cD75.getLocation();
        java.lang.String str77 = cD75.getLocation();
        items.CD cD84 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { cD68, cD75, cD84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = cD59.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = cD48.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = cD38.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = cD24.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9563 + "'", int9 == 9563);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9563, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9563, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LibraryItem [itemId=9564, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str26, "LibraryItem [itemId=9564, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str39, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str40, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str41, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LibraryItem [itemId=9566, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str50, "LibraryItem [itemId=9566, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str51, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.getBorrowerEmail();
        java.lang.String str8 = cD6.getBorrowerEmail();
        java.lang.String str9 = cD6.getArtist();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        boolean boolean15 = cD6.isOverdue();
        cD6.returnItem();
        java.lang.String str17 = cD6.getItemType();
        boolean boolean18 = cD6.isRented();
        java.lang.String str19 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9572 + "'", int14 == 9572);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CD" + "'", str17, "CD");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CD" + "'", str19, "CD");
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        items.CD cD19 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str20 = cD19.getLocation();
        java.lang.String str21 = cD19.getLocation();
        items.CD cD28 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD35 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str36 = cD35.getLocation();
        java.lang.String str37 = cD35.getLocation();
        items.CD cD44 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray45 = new items.LibraryItem[] { cD28, cD35, cD44 };
        java.util.ArrayList<items.LibraryItem> libraryItemList46 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList46, libraryItemArray45);
        boolean boolean48 = cD19.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        boolean boolean49 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList46);
        java.lang.String str50 = cD6.getAuthor();
        java.lang.String str51 = cD6.getItemType();
        java.lang.String str52 = cD6.getLocation();
        java.lang.String str53 = cD6.toString();
        double double54 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9574 + "'", int9 == 9574);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CD" + "'", str51, "CD");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "LibraryItem [itemId=9574, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str53, "LibraryItem [itemId=9574, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getArtist();
        java.lang.String str16 = cD6.getTitle();
        items.CD cD23 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double24 = cD23.calculateOverduePenalty();
        java.lang.String str25 = cD23.getBorrowerEmail();
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.toString();
        java.lang.String str35 = cD32.getBorrowerEmail();
        java.lang.String str36 = cD32.getPrice();
        items.CD cD43 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD43.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD43.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD32.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean84 = cD23.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean86 = cD6.isOverdue();
        boolean boolean87 = cD6.isPurchasable();
        java.lang.String str88 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LibraryItem [itemId=9581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str34, "LibraryItem [itemId=9581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "LibraryItem [itemId=9579, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str88, "LibraryItem [itemId=9579, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        java.lang.String str12 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("LibraryItem [itemId=215, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9587, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9587, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        items.CD cD6 = new items.CD("LibraryItem [itemId=398, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getArtist();
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=204, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        boolean boolean38 = cD6.isPurchasable();
        java.lang.String str39 = cD6.getPrice();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.returnItem();
        cD6.setBorrowerEmail("LibraryItem [itemId=3540, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate14 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate14, 3870, "LibraryItem [itemId=228, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9593, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9593, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        items.CD cD6 = new items.CD("LibraryItem [itemId=7505, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=908, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=4034, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        java.lang.String str7 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=6273, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=9595, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=9595, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        cD6.returnItem();
        java.lang.String str9 = cD6.getLocation();
        java.lang.Class<?> wildcardClass10 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getPrice();
        boolean boolean13 = cD6.isOverdue();
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getLocation();
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.toString();
        java.lang.String str25 = cD22.getBorrowerEmail();
        java.lang.String str26 = cD22.getBorrowerEmail();
        cD22.setIsPurchasable(false);
        java.lang.String str29 = cD22.getArtist();
        int int30 = cD22.getItemId();
        boolean boolean31 = cD22.isRented();
        items.CD cD38 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str39 = cD38.getLocation();
        java.lang.String str40 = cD38.getLocation();
        items.CD cD47 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray64 = new items.LibraryItem[] { cD47, cD54, cD63 };
        java.util.ArrayList<items.LibraryItem> libraryItemList65 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList65, libraryItemArray64);
        boolean boolean67 = cD38.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList65);
        boolean boolean68 = cD22.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList65);
        boolean boolean69 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList65);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9597 + "'", int9 == 9597);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9597, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9597, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "LibraryItem [itemId=9598, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str24, "LibraryItem [itemId=9598, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 9598 + "'", int30 == 9598);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD15 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str16 = cD15.getLocation();
        java.lang.String str17 = cD15.getLocation();
        items.CD cD24 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str32 = cD31.getLocation();
        java.lang.String str33 = cD31.getLocation();
        items.CD cD40 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray41 = new items.LibraryItem[] { cD24, cD31, cD40 };
        java.util.ArrayList<items.LibraryItem> libraryItemList42 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList42, libraryItemArray41);
        boolean boolean44 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList42);
        boolean boolean45 = cD15.isOverdue();
        items.CD cD52 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str53 = cD52.getLocation();
        java.lang.String str54 = cD52.getLocation();
        items.CD cD61 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD68 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str69 = cD68.getLocation();
        java.lang.String str70 = cD68.getLocation();
        items.CD cD77 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray78 = new items.LibraryItem[] { cD61, cD68, cD77 };
        java.util.ArrayList<items.LibraryItem> libraryItemList79 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList79, libraryItemArray78);
        boolean boolean81 = cD52.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean82 = cD15.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList79);
        boolean boolean83 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList79);
        java.lang.String str84 = cD6.toString();
        cD6.setBorrowerEmail("LibraryItem [itemId=9300, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LibraryItem [itemId=9603, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str84, "LibraryItem [itemId=9603, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.getTitle();
        java.lang.String str12 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=931, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9612 + "'", int9 == 9612);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9612, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9612, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str17 = cD6.getPrice();
        boolean boolean18 = cD6.isRented();
        java.lang.String str19 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9613 + "'", int14 == 9613);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        items.CD cD6 = new items.CD("hi!", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=196, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setLocation("LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str9 = cD6.toString();
        cD6.returnItem();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getTitle();
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=9614, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=9614, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = cD6.getPrice();
        java.lang.String str13 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9615, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9615, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        double double9 = cD6.calculateOverduePenalty();
        boolean boolean10 = cD6.isRented();
        cD6.setBorrowerEmail("LibraryItem [itemId=1090, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.returnItem();
        boolean boolean14 = cD6.isOverdue();
        boolean boolean15 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9616, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9616, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        boolean boolean7 = cD6.isRented();
        java.lang.String str8 = cD6.getLocation();
        java.lang.String str9 = cD6.getArtist();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.toString();
        java.lang.String str19 = cD16.getBorrowerEmail();
        java.lang.String str20 = cD16.getBorrowerEmail();
        java.lang.String str21 = cD16.getBorrowerEmail();
        java.lang.String str22 = cD16.getBorrowerEmail();
        cD16.returnItem();
        items.CD cD30 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str31 = cD30.getLocation();
        java.lang.String str32 = cD30.getLocation();
        boolean boolean33 = cD30.isPurchasable();
        boolean boolean34 = cD30.isOverdue();
        cD30.returnItem();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        int int45 = cD42.getItemId();
        cD42.setBorrowerEmail("CD");
        java.lang.String str48 = cD42.getArtist();
        items.CD cD55 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str56 = cD55.getLocation();
        java.lang.String str57 = cD55.getLocation();
        items.CD cD64 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD71 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str72 = cD71.getLocation();
        java.lang.String str73 = cD71.getLocation();
        items.CD cD80 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray81 = new items.LibraryItem[] { cD64, cD71, cD80 };
        java.util.ArrayList<items.LibraryItem> libraryItemList82 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList82, libraryItemArray81);
        boolean boolean84 = cD55.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean85 = cD42.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean86 = cD30.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean87 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList82);
        boolean boolean88 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList82);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=9618, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=9618, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 9620 + "'", int45 == 9620);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        java.lang.String str9 = cD6.getDetails();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        int int19 = cD16.getItemId();
        cD16.setBorrowerEmail("CD");
        java.lang.String str22 = cD16.getArtist();
        items.CD cD29 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str30 = cD29.getLocation();
        java.lang.String str31 = cD29.getLocation();
        items.CD cD38 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD45 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str46 = cD45.getLocation();
        java.lang.String str47 = cD45.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray55 = new items.LibraryItem[] { cD38, cD45, cD54 };
        java.util.ArrayList<items.LibraryItem> libraryItemList56 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList56, libraryItemArray55);
        boolean boolean58 = cD29.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList56);
        boolean boolean59 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList56);
        boolean boolean60 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList56);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str9, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 9626 + "'", int19 == 9626);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        double double37 = cD6.calculateOverduePenalty();
        java.lang.String str38 = cD6.getAuthor();
        java.lang.String str39 = cD6.getAuthor();
        java.lang.String str40 = cD6.getLocation();
        java.lang.String str41 = cD6.getPrice();
        java.lang.Class<?> wildcardClass42 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getArtist();
        java.lang.String str16 = cD6.getLocation();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getArtist();
        int int14 = cD6.getItemId();
        boolean boolean15 = cD6.isRented();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9636, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9636, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9636 + "'", int14 == 9636);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        items.CD cD6 = new items.CD("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1080, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        java.lang.String str8 = cD6.getItemType();
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        boolean boolean8 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=2679, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getTitle();
        java.lang.String str14 = cD6.getPrice();
        java.lang.String str15 = cD6.getTitle();
        java.lang.String str16 = cD6.getItemType();
        java.time.LocalDate localDate17 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate17, 8129, "LibraryItem [itemId=1897, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        java.lang.String str39 = cD6.getPrice();
        java.lang.String str40 = cD6.getPrice();
        java.lang.String str41 = cD6.getPrice();
        java.lang.String str42 = cD6.getPrice();
        java.lang.String str43 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: true" + "'", str43, "CD: hi! by hi!. Location: hi!. Purchasable: true");
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        items.CD cD6 = new items.CD("LibraryItem [itemId=123, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3803, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=1451, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=3847, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        boolean boolean8 = cD6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        java.lang.String str9 = cD6.getItemType();
        cD6.setIsPurchasable(true);
        java.lang.String str12 = cD6.getPrice();
        boolean boolean13 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD" + "'", str9, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getItemType();
        java.lang.String str12 = cD6.getAuthor();
        cD6.returnItem();
        int int14 = cD6.getItemId();
        double double15 = cD6.calculateOverduePenalty();
        java.lang.String str16 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9652 + "'", int14 == 9652);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getArtist();
        boolean boolean13 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9653 + "'", int11 == 9653);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=3386, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str93 = cD6.getTitle();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9654, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9654, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        items.CD cD6 = new items.CD("", "", false, true, "", "hi!");
        int int7 = cD6.getItemId();
        boolean boolean8 = cD6.isPurchasable();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getLocation();
        java.lang.String str11 = cD6.getDetails();
        java.lang.String str12 = cD6.getArtist();
        double double13 = cD6.calculateOverduePenalty();
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 9663 + "'", int7 == 9663);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD:  by hi!. Location: . Purchasable: false" + "'", str11, "CD:  by hi!. Location: . Purchasable: false");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1326, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1461, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=291, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getItemType();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.toString();
        java.lang.String str17 = cD14.getBorrowerEmail();
        java.lang.String str18 = cD14.getBorrowerEmail();
        cD14.setIsPurchasable(false);
        cD14.setLocation("LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD14.setBorrowerEmail("LibraryItem [itemId=176, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD14.returnItem();
        boolean boolean26 = cD14.isPurchasable();
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD49 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str50 = cD49.getLocation();
        java.lang.String str51 = cD49.getLocation();
        items.CD cD58 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray59 = new items.LibraryItem[] { cD42, cD49, cD58 };
        java.util.ArrayList<items.LibraryItem> libraryItemList60 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList60, libraryItemArray59);
        boolean boolean62 = cD33.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList60);
        boolean boolean63 = cD14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList60);
        boolean boolean64 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList60);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD" + "'", str7, "CD");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=9665, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=9665, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getPrice();
        boolean boolean15 = cD6.isPurchasable();
        java.lang.String str16 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.getLocation();
        java.lang.String str13 = cD6.getItemType();
        boolean boolean14 = cD6.isRented();
        java.lang.String str15 = cD6.getBorrowerEmail();
        int int16 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9671 + "'", int11 == 9671);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD" + "'", str13, "CD");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 9671 + "'", int16 == 9671);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        cD6.setBorrowerEmail("CD");
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getAuthor();
        java.lang.String str14 = cD6.getPrice();
        java.lang.String str15 = cD6.toString();
        cD6.returnItem();
        cD6.setBorrowerEmail("LibraryItem [itemId=3312, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double19 = cD6.calculateOverduePenalty();
        java.time.LocalDate localDate20 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate20, 5713, "LibraryItem [itemId=3173, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9672 + "'", int9 == 9672);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=9672, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=9672, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        double double8 = cD6.calculateOverduePenalty();
        java.lang.String str9 = cD6.getPrice();
        java.lang.String str10 = cD6.getItemType();
        java.lang.String str11 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setIsPurchasable(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD" + "'", str10, "CD");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        boolean boolean16 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=1328, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD25 = new items.CD("LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=163, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=958, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=225, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD32 = new items.CD("CD", "LibraryItem [itemId=1232, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1279, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "");
        items.CD cD39 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str40 = cD39.getLocation();
        java.lang.String str41 = cD39.getLocation();
        items.CD cD48 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD55 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str56 = cD55.getLocation();
        java.lang.String str57 = cD55.getLocation();
        items.CD cD64 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray65 = new items.LibraryItem[] { cD48, cD55, cD64 };
        java.util.ArrayList<items.LibraryItem> libraryItemList66 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList66, libraryItemArray65);
        boolean boolean68 = cD39.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean69 = cD32.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean70 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        boolean boolean71 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList66);
        java.lang.Class<?> wildcardClass72 = libraryItemList66.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9674, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1348, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1322, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getAuthor();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        double double16 = cD14.calculateOverduePenalty();
        java.lang.String str17 = cD14.getPrice();
        java.lang.String str18 = cD14.toString();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        boolean boolean28 = cD25.isPurchasable();
        boolean boolean29 = cD25.isOverdue();
        java.lang.String str30 = cD25.getItemType();
        java.lang.String str31 = cD25.getAuthor();
        cD25.returnItem();
        int int33 = cD25.getItemId();
        cD25.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str36 = cD25.getArtist();
        cD25.setBorrowerEmail("LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD25.returnItem();
        items.CD cD46 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str47 = cD46.getLocation();
        java.lang.String str48 = cD46.getLocation();
        int int49 = cD46.getItemId();
        cD46.setBorrowerEmail("CD");
        java.lang.String str52 = cD46.getArtist();
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str76 = cD75.getLocation();
        java.lang.String str77 = cD75.getLocation();
        items.CD cD84 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { cD68, cD75, cD84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = cD59.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = cD46.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = cD25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        cD6.setIsPurchasable(false);
        double double95 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=9682, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=9682, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "CD" + "'", str30, "CD");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 9683 + "'", int33 == 9683);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 9684 + "'", int49 == 9684);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        items.CD cD16 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str17 = cD16.getLocation();
        java.lang.String str18 = cD16.getLocation();
        items.CD cD25 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD32 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str33 = cD32.getLocation();
        java.lang.String str34 = cD32.getLocation();
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray42 = new items.LibraryItem[] { cD25, cD32, cD41 };
        java.util.ArrayList<items.LibraryItem> libraryItemList43 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList43, libraryItemArray42);
        boolean boolean45 = cD16.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList43);
        boolean boolean46 = cD16.isOverdue();
        java.lang.String str47 = cD16.getLocation();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD16.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        java.lang.String str86 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=1127, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str89 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=5146, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9689, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9689, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "LibraryItem [itemId=9689, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str89, "LibraryItem [itemId=9689, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getLocation();
        java.lang.String str10 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9698, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9698, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getLocation();
        java.lang.String str10 = cD6.getDetails();
        cD6.setIsPurchasable(true);
        java.lang.String str13 = cD6.toString();
        java.lang.String str14 = cD6.getPrice();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9699, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9699, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str10, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LibraryItem [itemId=9699, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str13, "LibraryItem [itemId=9699, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        java.lang.String str8 = cD6.getArtist();
        java.lang.String str9 = cD6.getLocation();
        java.lang.String str10 = cD6.getAuthor();
        int int11 = cD6.getItemId();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9700 + "'", int11 == 9700);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getPrice();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9701, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9701, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getAuthor();
        int int14 = cD6.getItemId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9702 + "'", int9 == 9702);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9702, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9702, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9702 + "'", int12 == 9702);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9702 + "'", int14 == 9702);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.getDetails();
        int int15 = cD6.getItemId();
        java.lang.String str16 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 9703 + "'", int15 == 9703);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1950, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "", true, false, "", "LibraryItem [itemId=1965, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        java.lang.String str8 = cD6.getLocation();
        java.lang.String str9 = cD6.getDetails();
        int int10 = cD6.getItemId();
        java.lang.String str11 = cD6.getItemType();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=1950, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=1950, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD:  by LibraryItem [itemId=1965, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1950, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true" + "'", str9, "CD:  by LibraryItem [itemId=1965, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1950, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true");
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 9704 + "'", int10 == 9704);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CD" + "'", str11, "CD");
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int12 = cD6.getItemId();
        cD6.setBorrowerEmail("LibraryItem [itemId=559, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9705 + "'", int12 == 9705);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getBorrowerEmail();
        java.lang.String str11 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        cD6.setLocation("LibraryItem [itemId=5805, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9706 + "'", int9 == 9706);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        cD6.returnItem();
        java.lang.String str40 = cD6.toString();
        java.lang.String str41 = cD6.getBorrowerEmail();
        boolean boolean42 = cD6.isOverdue();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "LibraryItem [itemId=9707, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str40, "LibraryItem [itemId=9707, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        items.CD cD6 = new items.CD("LibraryItem [itemId=485, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=452, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getTitle();
        cD6.setLocation("LibraryItem [itemId=1168, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str10 = cD6.getPrice();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=1321, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=846, itemType=CD, location=LibraryItem [itemId=364, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=true, title=LibraryItem [itemId=44, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getItemType();
        boolean boolean13 = cD6.isOverdue();
        cD6.setLocation("LibraryItem [itemId=6780, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9712 + "'", int9 == 9712);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9712, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9712, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CD" + "'", str12, "CD");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        double double37 = cD6.calculateOverduePenalty();
        java.lang.String str38 = cD6.getAuthor();
        java.lang.String str39 = cD6.getItemType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CD" + "'", str39, "CD");
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        items.CD cD6 = new items.CD("LibraryItem [itemId=110, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=114, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true", "LibraryItem [itemId=41, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean9 = cD6.isOverdue();
        double double10 = cD6.calculateOverduePenalty();
        java.lang.String str11 = cD6.getBorrowerEmail();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=581, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1348, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2676, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1322, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getAuthor();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        double double16 = cD14.calculateOverduePenalty();
        java.lang.String str17 = cD14.getPrice();
        java.lang.String str18 = cD14.toString();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        boolean boolean28 = cD25.isPurchasable();
        boolean boolean29 = cD25.isOverdue();
        java.lang.String str30 = cD25.getItemType();
        java.lang.String str31 = cD25.getAuthor();
        cD25.returnItem();
        int int33 = cD25.getItemId();
        cD25.setBorrowerEmail("LibraryItem [itemId=860, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str36 = cD25.getArtist();
        cD25.setBorrowerEmail("LibraryItem [itemId=690, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD25.returnItem();
        items.CD cD46 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str47 = cD46.getLocation();
        java.lang.String str48 = cD46.getLocation();
        int int49 = cD46.getItemId();
        cD46.setBorrowerEmail("CD");
        java.lang.String str52 = cD46.getArtist();
        items.CD cD59 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str60 = cD59.getLocation();
        java.lang.String str61 = cD59.getLocation();
        items.CD cD68 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD75 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str76 = cD75.getLocation();
        java.lang.String str77 = cD75.getLocation();
        items.CD cD84 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray85 = new items.LibraryItem[] { cD68, cD75, cD84 };
        java.util.ArrayList<items.LibraryItem> libraryItemList86 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList86, libraryItemArray85);
        boolean boolean88 = cD59.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean89 = cD46.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean90 = cD25.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean91 = cD14.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        boolean boolean92 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList86);
        java.lang.String str93 = cD6.getLocation();
        java.lang.String str94 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LibraryItem [itemId=9719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str18, "LibraryItem [itemId=9719, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "CD" + "'", str30, "CD");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 9720 + "'", int33 == 9720);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 9721 + "'", int49 == 9721);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "LibraryItem [itemId=1348, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str93, "LibraryItem [itemId=1348, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "CD: LibraryItem [itemId=1322, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1348, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false" + "'", str94, "CD: LibraryItem [itemId=1322, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by LibraryItem [itemId=599, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: LibraryItem [itemId=1348, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: false");
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        items.CD cD6 = new items.CD("LibraryItem [itemId=9268, itemType=CD, location=, purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=7342, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=8944, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        boolean boolean9 = cD6.isOverdue();
        cD6.setBorrowerEmail("LibraryItem [itemId=51, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str12 = cD6.getPrice();
        java.util.List<items.LibraryItem> libraryItemList13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = cD6.hasBorrowingPrivileges(libraryItemList13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.iterator()\" because \"borrowedItems\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9727, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9727, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        int int11 = cD6.getItemId();
        java.lang.String str12 = cD6.toString();
        cD6.setLocation("LibraryItem [itemId=327, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        java.lang.String str17 = cD6.getBorrowerEmail();
        java.lang.String str18 = cD6.getAuthor();
        int int19 = cD6.getItemId();
        cD6.setBorrowerEmail("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9728, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9728, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9728 + "'", int11 == 9728);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LibraryItem [itemId=9728, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str12, "LibraryItem [itemId=9728, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 9728 + "'", int19 == 9728);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        boolean boolean36 = cD6.isOverdue();
        java.lang.String str37 = cD6.getLocation();
        java.lang.String str38 = cD6.getLocation();
        boolean boolean39 = cD6.isRented();
        java.lang.String str40 = cD6.getDetails();
        cD6.setLocation("LibraryItem [itemId=1718, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setIsPurchasable(true);
        boolean boolean45 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str40, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1188, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1122, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=270, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        boolean boolean8 = cD6.isRented();
        java.lang.String str9 = cD6.getLocation();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=1188, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=1188, itemType=CD, location=LibraryItem [itemId=22, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        cD6.setIsPurchasable(false);
        java.lang.String str13 = cD6.getArtist();
        int int14 = cD6.getItemId();
        double double15 = cD6.calculateOverduePenalty();
        java.lang.String str16 = cD6.getBorrowerEmail();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9734, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9734, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 9734 + "'", int14 == 9734);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=2194, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=1487, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2808, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.time.LocalDate localDate7 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate7, 9206, "LibraryItem [itemId=998, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        items.CD cD6 = new items.CD("", "LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "", "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getDetails();
        java.lang.String str8 = cD6.getArtist();
        java.lang.String str9 = cD6.getPrice();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true" + "'", str7, "CD:  by LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Location: . Purchasable: true");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str9, "LibraryItem [itemId=16, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getPrice();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        cD17.setBorrowerEmail("LibraryItem [itemId=82, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        items.CD cD26 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str27 = cD26.getLocation();
        java.lang.String str28 = cD26.getLocation();
        items.CD cD35 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str43 = cD42.getLocation();
        java.lang.String str44 = cD42.getLocation();
        items.CD cD51 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray52 = new items.LibraryItem[] { cD35, cD42, cD51 };
        java.util.ArrayList<items.LibraryItem> libraryItemList53 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList53, libraryItemArray52);
        boolean boolean55 = cD26.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean56 = cD17.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean57 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList53);
        boolean boolean58 = cD6.isRented();
        java.lang.String str59 = cD6.getItemType();
        java.lang.Class<?> wildcardClass60 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9737, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9737, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "CD" + "'", str59, "CD");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=144, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str16 = cD6.getDetails();
        boolean boolean17 = cD6.isRented();
        boolean boolean18 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        boolean boolean13 = cD6.isPurchasable();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.toString();
        cD6.returnItem();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LibraryItem [itemId=9744, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str15, "LibraryItem [itemId=9744, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        items.CD cD6 = new items.CD("LibraryItem [itemId=1326, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1461, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=149, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=291, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=1030, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.getAuthor();
        java.time.LocalDate localDate11 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate11, 5386, "LibraryItem [itemId=5419, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9745 + "'", int9 == 9745);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=291, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=291, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        java.lang.String str89 = cD6.getDetails();
        cD6.setLocation("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9746, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9746, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str89, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        items.CD cD6 = new items.CD("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD");
        java.lang.String str7 = cD6.getTitle();
        java.lang.String str8 = cD6.getAuthor();
        cD6.setIsPurchasable(true);
        boolean boolean11 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CD" + "'", str8, "CD");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        int int12 = cD6.getItemId();
        java.lang.String str13 = cD6.getPrice();
        cD6.setLocation("LibraryItem [itemId=9, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        cD6.setBorrowerEmail("LibraryItem [itemId=69, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str18 = cD6.getAuthor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9756 + "'", int9 == 9756);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9756, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9756, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9756, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9756, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 9756 + "'", int12 == 9756);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.getAuthor();
        boolean boolean15 = cD6.isRented();
        java.lang.String str16 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str16, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3224, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=5123, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "CD: LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null] by CD. Location: LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]. Purchasable: true", "LibraryItem [itemId=4885, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        java.lang.String str11 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean14 = cD6.isOverdue();
        java.lang.String str15 = cD6.getAuthor();
        cD6.setBorrowerEmail("LibraryItem [itemId=73, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean18 = cD6.isPurchasable();
        cD6.setLocation("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str21 = cD6.getLocation();
        java.lang.Class<?> wildcardClass22 = cD6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str21, "LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        items.CD cD6 = new items.CD("LibraryItem [itemId=3541, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=506, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, true, "LibraryItem [itemId=1705, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1628, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        double double7 = cD6.calculateOverduePenalty();
        cD6.returnItem();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        items.CD cD6 = new items.CD("LibraryItem [itemId=31, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=40, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, false, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "CD");
        java.lang.String str7 = cD6.getTitle();
        cD6.setBorrowerEmail("LibraryItem [itemId=144, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=71, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        java.lang.String str12 = cD6.getArtist();
        java.lang.String str13 = cD6.getDetails();
        java.lang.String str14 = cD6.getDetails();
        java.lang.String str15 = cD6.getBorrowerEmail();
        java.lang.String str16 = cD6.getItemType();
        java.lang.String str17 = cD6.toString();
        boolean boolean18 = cD6.isPurchasable();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str13, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str14, "CD: hi! by hi!. Location: hi!. Purchasable: false");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CD" + "'", str16, "CD");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LibraryItem [itemId=9762, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str17, "LibraryItem [itemId=9762, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        items.CD cD6 = new items.CD("hi!", "", false, false, "hi!", "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isRented();
        items.CD cD14 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str15 = cD14.getLocation();
        java.lang.String str16 = cD14.toString();
        java.lang.String str17 = cD14.getBorrowerEmail();
        java.lang.String str18 = cD14.getBorrowerEmail();
        items.CD cD25 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str26 = cD25.getLocation();
        java.lang.String str27 = cD25.getLocation();
        items.CD cD34 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD41 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str42 = cD41.getLocation();
        java.lang.String str43 = cD41.getLocation();
        items.CD cD50 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray51 = new items.LibraryItem[] { cD34, cD41, cD50 };
        java.util.ArrayList<items.LibraryItem> libraryItemList52 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList52, libraryItemArray51);
        boolean boolean54 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList52);
        boolean boolean55 = cD25.isOverdue();
        items.CD cD62 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str63 = cD62.getLocation();
        java.lang.String str64 = cD62.getLocation();
        items.CD cD71 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD78 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str79 = cD78.getLocation();
        java.lang.String str80 = cD78.getLocation();
        items.CD cD87 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray88 = new items.LibraryItem[] { cD71, cD78, cD87 };
        java.util.ArrayList<items.LibraryItem> libraryItemList89 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList89, libraryItemArray88);
        boolean boolean91 = cD62.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean92 = cD25.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean93 = cD14.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        boolean boolean94 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList89);
        java.lang.String str95 = cD6.getAuthor();
        java.lang.String str96 = cD6.getArtist();
        cD6.setLocation("LibraryItem [itemId=1667, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=9764, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=9764, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str95, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str96, "LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        double double11 = cD6.calculateOverduePenalty();
        cD6.setBorrowerEmail("LibraryItem [itemId=12, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str14 = cD6.toString();
        cD6.returnItem();
        java.lang.String str16 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9773, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9773, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LibraryItem [itemId=9773, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str16, "LibraryItem [itemId=9773, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        items.CD cD6 = new items.CD("LibraryItem [itemId=368, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=484, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=536, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=1155, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        double double8 = cD6.calculateOverduePenalty();
        boolean boolean9 = cD6.isPurchasable();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        items.CD cD6 = new items.CD("LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=215, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", false, false, "LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        java.lang.String str7 = cD6.getPrice();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getItemType();
        java.lang.String str10 = cD6.getAuthor();
        double double11 = cD6.calculateOverduePenalty();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str7, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9775, itemType=CD, location=LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9775, itemType=CD, location=LibraryItem [itemId=294, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], purchasable=false, title=LibraryItem [itemId=205, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null], isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CD" + "'", str9, "CD");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=664, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        items.CD cD6 = new items.CD("LibraryItem [itemId=2627, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=2048, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", true, true, "LibraryItem [itemId=980, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]", "LibraryItem [itemId=370, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        boolean boolean7 = cD6.isOverdue();
        java.lang.String str8 = cD6.getPrice();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=370, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=370, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        items.CD cD15 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD22 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str23 = cD22.getLocation();
        java.lang.String str24 = cD22.getLocation();
        items.CD cD31 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray32 = new items.LibraryItem[] { cD15, cD22, cD31 };
        java.util.ArrayList<items.LibraryItem> libraryItemList33 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList33, libraryItemArray32);
        boolean boolean35 = cD6.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList33);
        cD6.setIsPurchasable(true);
        java.lang.String str38 = cD6.getPrice();
        cD6.returnItem();
        java.lang.String str40 = cD6.getArtist();
        java.lang.String str41 = cD6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LibraryItem [itemId=9777, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str41, "LibraryItem [itemId=9777, itemType=CD, location=hi!, purchasable=true, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        boolean boolean9 = cD6.isPurchasable();
        boolean boolean10 = cD6.isOverdue();
        boolean boolean11 = cD6.isPurchasable();
        cD6.setBorrowerEmail("CD");
        java.lang.String str14 = cD6.toString();
        java.lang.String str15 = cD6.getItemType();
        java.lang.String str16 = cD6.getLocation();
        double double17 = cD6.calculateOverduePenalty();
        cD6.returnItem();
        boolean boolean19 = cD6.isRented();
        java.lang.String str20 = cD6.getDetails();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LibraryItem [itemId=9781, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str14, "LibraryItem [itemId=9781, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CD" + "'", str15, "CD");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CD: hi! by hi!. Location: hi!. Purchasable: false" + "'", str20, "CD: hi! by hi!. Location: hi!. Purchasable: false");
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.getLocation();
        int int9 = cD6.getItemId();
        java.lang.String str10 = cD6.toString();
        java.lang.String str11 = cD6.toString();
        double double12 = cD6.calculateOverduePenalty();
        java.lang.String str13 = cD6.getBorrowerEmail();
        java.lang.String str14 = cD6.getBorrowerEmail();
        cD6.setBorrowerEmail("CD: hi! by hi!. Location: hi!. Purchasable: true");
        boolean boolean17 = cD6.isRented();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9782 + "'", int9 == 9782);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LibraryItem [itemId=9782, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str10, "LibraryItem [itemId=9782, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LibraryItem [itemId=9782, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str11, "LibraryItem [itemId=9782, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        items.CD cD6 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str7 = cD6.getLocation();
        java.lang.String str8 = cD6.toString();
        java.lang.String str9 = cD6.getBorrowerEmail();
        java.lang.String str10 = cD6.getBorrowerEmail();
        items.CD cD17 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str18 = cD17.getLocation();
        java.lang.String str19 = cD17.getLocation();
        items.CD cD26 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD33 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str34 = cD33.getLocation();
        java.lang.String str35 = cD33.getLocation();
        items.CD cD42 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray43 = new items.LibraryItem[] { cD26, cD33, cD42 };
        java.util.ArrayList<items.LibraryItem> libraryItemList44 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList44, libraryItemArray43);
        boolean boolean46 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList44);
        boolean boolean47 = cD17.isOverdue();
        items.CD cD54 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str55 = cD54.getLocation();
        java.lang.String str56 = cD54.getLocation();
        items.CD cD63 = new items.CD("", "", false, true, "", "hi!");
        items.CD cD70 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        java.lang.String str71 = cD70.getLocation();
        java.lang.String str72 = cD70.getLocation();
        items.CD cD79 = new items.CD("hi!", "hi!", false, true, "hi!", "hi!");
        items.LibraryItem[] libraryItemArray80 = new items.LibraryItem[] { cD63, cD70, cD79 };
        java.util.ArrayList<items.LibraryItem> libraryItemList81 = new java.util.ArrayList<items.LibraryItem>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<items.LibraryItem>) libraryItemList81, libraryItemArray80);
        boolean boolean83 = cD54.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean84 = cD17.hasBorrowingPrivileges((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean85 = cD6.hasExceededBorrowingLimit((java.util.List<items.LibraryItem>) libraryItemList81);
        boolean boolean86 = cD6.isOverdue();
        cD6.setIsPurchasable(false);
        boolean boolean89 = cD6.isOverdue();
        boolean boolean90 = cD6.isPurchasable();
        cD6.setIsPurchasable(true);
        boolean boolean93 = cD6.isOverdue();
        java.time.LocalDate localDate94 = null;
        // The following exception was thrown during execution in test generation
        try {
            cD6.rentItem(localDate94, 729, "LibraryItem [itemId=396, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.time.LocalDate.plusDays(long)\" because \"startDate\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LibraryItem [itemId=9783, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]" + "'", str8, "LibraryItem [itemId=9783, itemType=CD, location=hi!, purchasable=false, title=hi!, isRented=false, rentalDate=null, dueDate=null, rentedBy=null]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(libraryItemArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }
}
